// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/v2beta1/runtime.proto

#ifndef PROTOBUF_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto__INCLUDED
#define PROTOBUF_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/field_mask.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[10];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsRuntimeImpl();
void InitDefaultsRuntime();
void InitDefaultsListRuntimesRequestImpl();
void InitDefaultsListRuntimesRequest();
void InitDefaultsListRuntimesResponseImpl();
void InitDefaultsListRuntimesResponse();
void InitDefaultsGetRuntimeRequestImpl();
void InitDefaultsGetRuntimeRequest();
void InitDefaultsCreateRuntimeRequestImpl();
void InitDefaultsCreateRuntimeRequest();
void InitDefaultsUpdateRuntimeRequestImpl();
void InitDefaultsUpdateRuntimeRequest();
void InitDefaultsDeleteRuntimeRequestImpl();
void InitDefaultsDeleteRuntimeRequest();
void InitDefaultsGetRuntimeHistoryRequestImpl();
void InitDefaultsGetRuntimeHistoryRequest();
void InitDefaultsRuntimeHistory_EntryImpl();
void InitDefaultsRuntimeHistory_Entry();
void InitDefaultsRuntimeHistoryImpl();
void InitDefaultsRuntimeHistory();
inline void InitDefaults() {
  InitDefaultsRuntime();
  InitDefaultsListRuntimesRequest();
  InitDefaultsListRuntimesResponse();
  InitDefaultsGetRuntimeRequest();
  InitDefaultsCreateRuntimeRequest();
  InitDefaultsUpdateRuntimeRequest();
  InitDefaultsDeleteRuntimeRequest();
  InitDefaultsGetRuntimeHistoryRequest();
  InitDefaultsRuntimeHistory_Entry();
  InitDefaultsRuntimeHistory();
}
}  // namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {
class CreateRuntimeRequest;
class CreateRuntimeRequestDefaultTypeInternal;
extern CreateRuntimeRequestDefaultTypeInternal _CreateRuntimeRequest_default_instance_;
class DeleteRuntimeRequest;
class DeleteRuntimeRequestDefaultTypeInternal;
extern DeleteRuntimeRequestDefaultTypeInternal _DeleteRuntimeRequest_default_instance_;
class GetRuntimeHistoryRequest;
class GetRuntimeHistoryRequestDefaultTypeInternal;
extern GetRuntimeHistoryRequestDefaultTypeInternal _GetRuntimeHistoryRequest_default_instance_;
class GetRuntimeRequest;
class GetRuntimeRequestDefaultTypeInternal;
extern GetRuntimeRequestDefaultTypeInternal _GetRuntimeRequest_default_instance_;
class ListRuntimesRequest;
class ListRuntimesRequestDefaultTypeInternal;
extern ListRuntimesRequestDefaultTypeInternal _ListRuntimesRequest_default_instance_;
class ListRuntimesResponse;
class ListRuntimesResponseDefaultTypeInternal;
extern ListRuntimesResponseDefaultTypeInternal _ListRuntimesResponse_default_instance_;
class Runtime;
class RuntimeDefaultTypeInternal;
extern RuntimeDefaultTypeInternal _Runtime_default_instance_;
class RuntimeHistory;
class RuntimeHistoryDefaultTypeInternal;
extern RuntimeHistoryDefaultTypeInternal _RuntimeHistory_default_instance_;
class RuntimeHistory_Entry;
class RuntimeHistory_EntryDefaultTypeInternal;
extern RuntimeHistory_EntryDefaultTypeInternal _RuntimeHistory_Entry_default_instance_;
class UpdateRuntimeRequest;
class UpdateRuntimeRequestDefaultTypeInternal;
extern UpdateRuntimeRequestDefaultTypeInternal _UpdateRuntimeRequest_default_instance_;
}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {

enum Runtime_State {
  Runtime_State_STATE_UNSPECIFIED = 0,
  Runtime_State_STATE_STOPPED = 1,
  Runtime_State_STATE_LOADING = 2,
  Runtime_State_STATE_RUNNING = 3,
  Runtime_State_Runtime_State_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Runtime_State_Runtime_State_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Runtime_State_IsValid(int value);
const Runtime_State Runtime_State_State_MIN = Runtime_State_STATE_UNSPECIFIED;
const Runtime_State Runtime_State_State_MAX = Runtime_State_STATE_RUNNING;
const int Runtime_State_State_ARRAYSIZE = Runtime_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* Runtime_State_descriptor();
inline const ::std::string& Runtime_State_Name(Runtime_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    Runtime_State_descriptor(), value);
}
inline bool Runtime_State_Parse(
    const ::std::string& name, Runtime_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Runtime_State>(
    Runtime_State_descriptor(), name, value);
}
// ===================================================================

class Runtime : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Runtime) */ {
 public:
  Runtime();
  virtual ~Runtime();

  Runtime(const Runtime& from);

  inline Runtime& operator=(const Runtime& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Runtime(Runtime&& from) noexcept
    : Runtime() {
    *this = ::std::move(from);
  }

  inline Runtime& operator=(Runtime&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Runtime& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Runtime* internal_default_instance() {
    return reinterpret_cast<const Runtime*>(
               &_Runtime_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(Runtime* other);
  void Swap(Runtime* other);
  friend void swap(Runtime& a, Runtime& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Runtime* New() const PROTOBUF_FINAL { return New(NULL); }

  Runtime* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Runtime& from);
  void MergeFrom(const Runtime& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Runtime* other);
  protected:
  explicit Runtime(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Runtime_State State;
  static const State STATE_UNSPECIFIED =
    Runtime_State_STATE_UNSPECIFIED;
  static const State STATE_STOPPED =
    Runtime_State_STATE_STOPPED;
  static const State STATE_LOADING =
    Runtime_State_STATE_LOADING;
  static const State STATE_RUNNING =
    Runtime_State_STATE_RUNNING;
  static inline bool State_IsValid(int value) {
    return Runtime_State_IsValid(value);
  }
  static const State State_MIN =
    Runtime_State_State_MIN;
  static const State State_MAX =
    Runtime_State_State_MAX;
  static const int State_ARRAYSIZE =
    Runtime_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return Runtime_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return Runtime_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return Runtime_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string description = 2;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_description();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_description(
      ::std::string* description);

  // string agent_version = 3;
  void clear_agent_version();
  static const int kAgentVersionFieldNumber = 3;
  const ::std::string& agent_version() const;
  void set_agent_version(const ::std::string& value);
  #if LANG_CXX11
  void set_agent_version(::std::string&& value);
  #endif
  void set_agent_version(const char* value);
  void set_agent_version(const char* value, size_t size);
  ::std::string* mutable_agent_version();
  ::std::string* release_agent_version();
  void set_allocated_agent_version(::std::string* agent_version);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_agent_version();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_agent_version(
      ::std::string* agent_version);

  // .google.protobuf.Timestamp update_time = 5;
  bool has_update_time() const;
  void clear_update_time();
  static const int kUpdateTimeFieldNumber = 5;
  private:
  void _slow_mutable_update_time();
  public:
  const ::google::protobuf::Timestamp& update_time() const;
  ::google::protobuf::Timestamp* release_update_time();
  ::google::protobuf::Timestamp* mutable_update_time();
  void set_allocated_update_time(::google::protobuf::Timestamp* update_time);
  void unsafe_arena_set_allocated_update_time(
      ::google::protobuf::Timestamp* update_time);
  ::google::protobuf::Timestamp* unsafe_arena_release_update_time();

  // .google.cloud.dialogflow.v2beta1.Runtime.State state = 4;
  void clear_state();
  static const int kStateFieldNumber = 4;
  ::google::cloud::dialogflow::v2beta1::Runtime_State state() const;
  void set_state(::google::cloud::dialogflow::v2beta1::Runtime_State value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Runtime)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr agent_version_;
  ::google::protobuf::Timestamp* update_time_;
  int state_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto::InitDefaultsRuntimeImpl();
};
// -------------------------------------------------------------------

class ListRuntimesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.ListRuntimesRequest) */ {
 public:
  ListRuntimesRequest();
  virtual ~ListRuntimesRequest();

  ListRuntimesRequest(const ListRuntimesRequest& from);

  inline ListRuntimesRequest& operator=(const ListRuntimesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListRuntimesRequest(ListRuntimesRequest&& from) noexcept
    : ListRuntimesRequest() {
    *this = ::std::move(from);
  }

  inline ListRuntimesRequest& operator=(ListRuntimesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListRuntimesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListRuntimesRequest* internal_default_instance() {
    return reinterpret_cast<const ListRuntimesRequest*>(
               &_ListRuntimesRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(ListRuntimesRequest* other);
  void Swap(ListRuntimesRequest* other);
  friend void swap(ListRuntimesRequest& a, ListRuntimesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListRuntimesRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListRuntimesRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListRuntimesRequest& from);
  void MergeFrom(const ListRuntimesRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListRuntimesRequest* other);
  protected:
  explicit ListRuntimesRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.ListRuntimesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto::InitDefaultsListRuntimesRequestImpl();
};
// -------------------------------------------------------------------

class ListRuntimesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.ListRuntimesResponse) */ {
 public:
  ListRuntimesResponse();
  virtual ~ListRuntimesResponse();

  ListRuntimesResponse(const ListRuntimesResponse& from);

  inline ListRuntimesResponse& operator=(const ListRuntimesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListRuntimesResponse(ListRuntimesResponse&& from) noexcept
    : ListRuntimesResponse() {
    *this = ::std::move(from);
  }

  inline ListRuntimesResponse& operator=(ListRuntimesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListRuntimesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListRuntimesResponse* internal_default_instance() {
    return reinterpret_cast<const ListRuntimesResponse*>(
               &_ListRuntimesResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(ListRuntimesResponse* other);
  void Swap(ListRuntimesResponse* other);
  friend void swap(ListRuntimesResponse& a, ListRuntimesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListRuntimesResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListRuntimesResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListRuntimesResponse& from);
  void MergeFrom(const ListRuntimesResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListRuntimesResponse* other);
  protected:
  explicit ListRuntimesResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.dialogflow.v2beta1.Runtime runtimes = 1;
  int runtimes_size() const;
  void clear_runtimes();
  static const int kRuntimesFieldNumber = 1;
  const ::google::cloud::dialogflow::v2beta1::Runtime& runtimes(int index) const;
  ::google::cloud::dialogflow::v2beta1::Runtime* mutable_runtimes(int index);
  ::google::cloud::dialogflow::v2beta1::Runtime* add_runtimes();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Runtime >*
      mutable_runtimes();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Runtime >&
      runtimes() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_next_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.ListRuntimesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Runtime > runtimes_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto::InitDefaultsListRuntimesResponseImpl();
};
// -------------------------------------------------------------------

class GetRuntimeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.GetRuntimeRequest) */ {
 public:
  GetRuntimeRequest();
  virtual ~GetRuntimeRequest();

  GetRuntimeRequest(const GetRuntimeRequest& from);

  inline GetRuntimeRequest& operator=(const GetRuntimeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetRuntimeRequest(GetRuntimeRequest&& from) noexcept
    : GetRuntimeRequest() {
    *this = ::std::move(from);
  }

  inline GetRuntimeRequest& operator=(GetRuntimeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRuntimeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetRuntimeRequest* internal_default_instance() {
    return reinterpret_cast<const GetRuntimeRequest*>(
               &_GetRuntimeRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(GetRuntimeRequest* other);
  void Swap(GetRuntimeRequest* other);
  friend void swap(GetRuntimeRequest& a, GetRuntimeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRuntimeRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetRuntimeRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetRuntimeRequest& from);
  void MergeFrom(const GetRuntimeRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetRuntimeRequest* other);
  protected:
  explicit GetRuntimeRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.GetRuntimeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto::InitDefaultsGetRuntimeRequestImpl();
};
// -------------------------------------------------------------------

class CreateRuntimeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.CreateRuntimeRequest) */ {
 public:
  CreateRuntimeRequest();
  virtual ~CreateRuntimeRequest();

  CreateRuntimeRequest(const CreateRuntimeRequest& from);

  inline CreateRuntimeRequest& operator=(const CreateRuntimeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateRuntimeRequest(CreateRuntimeRequest&& from) noexcept
    : CreateRuntimeRequest() {
    *this = ::std::move(from);
  }

  inline CreateRuntimeRequest& operator=(CreateRuntimeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRuntimeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateRuntimeRequest* internal_default_instance() {
    return reinterpret_cast<const CreateRuntimeRequest*>(
               &_CreateRuntimeRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(CreateRuntimeRequest* other);
  void Swap(CreateRuntimeRequest* other);
  friend void swap(CreateRuntimeRequest& a, CreateRuntimeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateRuntimeRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateRuntimeRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateRuntimeRequest& from);
  void MergeFrom(const CreateRuntimeRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateRuntimeRequest* other);
  protected:
  explicit CreateRuntimeRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // .google.cloud.dialogflow.v2beta1.Runtime runtime = 2;
  bool has_runtime() const;
  void clear_runtime();
  static const int kRuntimeFieldNumber = 2;
  private:
  void _slow_mutable_runtime();
  public:
  const ::google::cloud::dialogflow::v2beta1::Runtime& runtime() const;
  ::google::cloud::dialogflow::v2beta1::Runtime* release_runtime();
  ::google::cloud::dialogflow::v2beta1::Runtime* mutable_runtime();
  void set_allocated_runtime(::google::cloud::dialogflow::v2beta1::Runtime* runtime);
  void unsafe_arena_set_allocated_runtime(
      ::google::cloud::dialogflow::v2beta1::Runtime* runtime);
  ::google::cloud::dialogflow::v2beta1::Runtime* unsafe_arena_release_runtime();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.CreateRuntimeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::cloud::dialogflow::v2beta1::Runtime* runtime_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto::InitDefaultsCreateRuntimeRequestImpl();
};
// -------------------------------------------------------------------

class UpdateRuntimeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.UpdateRuntimeRequest) */ {
 public:
  UpdateRuntimeRequest();
  virtual ~UpdateRuntimeRequest();

  UpdateRuntimeRequest(const UpdateRuntimeRequest& from);

  inline UpdateRuntimeRequest& operator=(const UpdateRuntimeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateRuntimeRequest(UpdateRuntimeRequest&& from) noexcept
    : UpdateRuntimeRequest() {
    *this = ::std::move(from);
  }

  inline UpdateRuntimeRequest& operator=(UpdateRuntimeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateRuntimeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateRuntimeRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateRuntimeRequest*>(
               &_UpdateRuntimeRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(UpdateRuntimeRequest* other);
  void Swap(UpdateRuntimeRequest* other);
  friend void swap(UpdateRuntimeRequest& a, UpdateRuntimeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateRuntimeRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateRuntimeRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateRuntimeRequest& from);
  void MergeFrom(const UpdateRuntimeRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateRuntimeRequest* other);
  protected:
  explicit UpdateRuntimeRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.cloud.dialogflow.v2beta1.Runtime runtime = 1;
  bool has_runtime() const;
  void clear_runtime();
  static const int kRuntimeFieldNumber = 1;
  private:
  void _slow_mutable_runtime();
  public:
  const ::google::cloud::dialogflow::v2beta1::Runtime& runtime() const;
  ::google::cloud::dialogflow::v2beta1::Runtime* release_runtime();
  ::google::cloud::dialogflow::v2beta1::Runtime* mutable_runtime();
  void set_allocated_runtime(::google::cloud::dialogflow::v2beta1::Runtime* runtime);
  void unsafe_arena_set_allocated_runtime(
      ::google::cloud::dialogflow::v2beta1::Runtime* runtime);
  ::google::cloud::dialogflow::v2beta1::Runtime* unsafe_arena_release_runtime();

  // .google.protobuf.FieldMask update_mask = 2;
  bool has_update_mask() const;
  void clear_update_mask();
  static const int kUpdateMaskFieldNumber = 2;
  private:
  void _slow_mutable_update_mask();
  public:
  const ::google::protobuf::FieldMask& update_mask() const;
  ::google::protobuf::FieldMask* release_update_mask();
  ::google::protobuf::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* update_mask);
  void unsafe_arena_set_allocated_update_mask(
      ::google::protobuf::FieldMask* update_mask);
  ::google::protobuf::FieldMask* unsafe_arena_release_update_mask();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.UpdateRuntimeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::cloud::dialogflow::v2beta1::Runtime* runtime_;
  ::google::protobuf::FieldMask* update_mask_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto::InitDefaultsUpdateRuntimeRequestImpl();
};
// -------------------------------------------------------------------

class DeleteRuntimeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.DeleteRuntimeRequest) */ {
 public:
  DeleteRuntimeRequest();
  virtual ~DeleteRuntimeRequest();

  DeleteRuntimeRequest(const DeleteRuntimeRequest& from);

  inline DeleteRuntimeRequest& operator=(const DeleteRuntimeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteRuntimeRequest(DeleteRuntimeRequest&& from) noexcept
    : DeleteRuntimeRequest() {
    *this = ::std::move(from);
  }

  inline DeleteRuntimeRequest& operator=(DeleteRuntimeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteRuntimeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteRuntimeRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteRuntimeRequest*>(
               &_DeleteRuntimeRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(DeleteRuntimeRequest* other);
  void Swap(DeleteRuntimeRequest* other);
  friend void swap(DeleteRuntimeRequest& a, DeleteRuntimeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteRuntimeRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteRuntimeRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteRuntimeRequest& from);
  void MergeFrom(const DeleteRuntimeRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteRuntimeRequest* other);
  protected:
  explicit DeleteRuntimeRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.DeleteRuntimeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto::InitDefaultsDeleteRuntimeRequestImpl();
};
// -------------------------------------------------------------------

class GetRuntimeHistoryRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.GetRuntimeHistoryRequest) */ {
 public:
  GetRuntimeHistoryRequest();
  virtual ~GetRuntimeHistoryRequest();

  GetRuntimeHistoryRequest(const GetRuntimeHistoryRequest& from);

  inline GetRuntimeHistoryRequest& operator=(const GetRuntimeHistoryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetRuntimeHistoryRequest(GetRuntimeHistoryRequest&& from) noexcept
    : GetRuntimeHistoryRequest() {
    *this = ::std::move(from);
  }

  inline GetRuntimeHistoryRequest& operator=(GetRuntimeHistoryRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRuntimeHistoryRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetRuntimeHistoryRequest* internal_default_instance() {
    return reinterpret_cast<const GetRuntimeHistoryRequest*>(
               &_GetRuntimeHistoryRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(GetRuntimeHistoryRequest* other);
  void Swap(GetRuntimeHistoryRequest* other);
  friend void swap(GetRuntimeHistoryRequest& a, GetRuntimeHistoryRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRuntimeHistoryRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetRuntimeHistoryRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetRuntimeHistoryRequest& from);
  void MergeFrom(const GetRuntimeHistoryRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetRuntimeHistoryRequest* other);
  protected:
  explicit GetRuntimeHistoryRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.GetRuntimeHistoryRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto::InitDefaultsGetRuntimeHistoryRequestImpl();
};
// -------------------------------------------------------------------

class RuntimeHistory_Entry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry) */ {
 public:
  RuntimeHistory_Entry();
  virtual ~RuntimeHistory_Entry();

  RuntimeHistory_Entry(const RuntimeHistory_Entry& from);

  inline RuntimeHistory_Entry& operator=(const RuntimeHistory_Entry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RuntimeHistory_Entry(RuntimeHistory_Entry&& from) noexcept
    : RuntimeHistory_Entry() {
    *this = ::std::move(from);
  }

  inline RuntimeHistory_Entry& operator=(RuntimeHistory_Entry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const RuntimeHistory_Entry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RuntimeHistory_Entry* internal_default_instance() {
    return reinterpret_cast<const RuntimeHistory_Entry*>(
               &_RuntimeHistory_Entry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(RuntimeHistory_Entry* other);
  void Swap(RuntimeHistory_Entry* other);
  friend void swap(RuntimeHistory_Entry& a, RuntimeHistory_Entry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RuntimeHistory_Entry* New() const PROTOBUF_FINAL { return New(NULL); }

  RuntimeHistory_Entry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RuntimeHistory_Entry& from);
  void MergeFrom(const RuntimeHistory_Entry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RuntimeHistory_Entry* other);
  protected:
  explicit RuntimeHistory_Entry(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string description = 1;
  void clear_description();
  static const int kDescriptionFieldNumber = 1;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_description();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_description(
      ::std::string* description);

  // string agent_version = 4;
  void clear_agent_version();
  static const int kAgentVersionFieldNumber = 4;
  const ::std::string& agent_version() const;
  void set_agent_version(const ::std::string& value);
  #if LANG_CXX11
  void set_agent_version(::std::string&& value);
  #endif
  void set_agent_version(const char* value);
  void set_agent_version(const char* value, size_t size);
  ::std::string* mutable_agent_version();
  ::std::string* release_agent_version();
  void set_allocated_agent_version(::std::string* agent_version);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_agent_version();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_agent_version(
      ::std::string* agent_version);

  // .google.protobuf.Timestamp create_time = 5;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 5;
  private:
  void _slow_mutable_create_time();
  public:
  const ::google::protobuf::Timestamp& create_time() const;
  ::google::protobuf::Timestamp* release_create_time();
  ::google::protobuf::Timestamp* mutable_create_time();
  void set_allocated_create_time(::google::protobuf::Timestamp* create_time);
  void unsafe_arena_set_allocated_create_time(
      ::google::protobuf::Timestamp* create_time);
  ::google::protobuf::Timestamp* unsafe_arena_release_create_time();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr agent_version_;
  ::google::protobuf::Timestamp* create_time_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto::InitDefaultsRuntimeHistory_EntryImpl();
};
// -------------------------------------------------------------------

class RuntimeHistory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.RuntimeHistory) */ {
 public:
  RuntimeHistory();
  virtual ~RuntimeHistory();

  RuntimeHistory(const RuntimeHistory& from);

  inline RuntimeHistory& operator=(const RuntimeHistory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RuntimeHistory(RuntimeHistory&& from) noexcept
    : RuntimeHistory() {
    *this = ::std::move(from);
  }

  inline RuntimeHistory& operator=(RuntimeHistory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const RuntimeHistory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RuntimeHistory* internal_default_instance() {
    return reinterpret_cast<const RuntimeHistory*>(
               &_RuntimeHistory_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(RuntimeHistory* other);
  void Swap(RuntimeHistory* other);
  friend void swap(RuntimeHistory& a, RuntimeHistory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RuntimeHistory* New() const PROTOBUF_FINAL { return New(NULL); }

  RuntimeHistory* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RuntimeHistory& from);
  void MergeFrom(const RuntimeHistory& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RuntimeHistory* other);
  protected:
  explicit RuntimeHistory(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RuntimeHistory_Entry Entry;

  // accessors -------------------------------------------------------

  // repeated .google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry entries = 1;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 1;
  const ::google::cloud::dialogflow::v2beta1::RuntimeHistory_Entry& entries(int index) const;
  ::google::cloud::dialogflow::v2beta1::RuntimeHistory_Entry* mutable_entries(int index);
  ::google::cloud::dialogflow::v2beta1::RuntimeHistory_Entry* add_entries();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::RuntimeHistory_Entry >*
      mutable_entries();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::RuntimeHistory_Entry >&
      entries() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_next_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.RuntimeHistory)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::RuntimeHistory_Entry > entries_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto::InitDefaultsRuntimeHistoryImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Runtime

// string name = 1;
inline void Runtime::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Runtime::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Runtime.name)
  return name_.Get();
}
inline void Runtime::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Runtime.name)
}
#if LANG_CXX11
inline void Runtime::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Runtime.name)
}
#endif
inline void Runtime::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Runtime.name)
}
inline void Runtime::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Runtime.name)
}
inline ::std::string* Runtime::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Runtime.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Runtime::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Runtime.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Runtime::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Runtime.name)
}
inline ::std::string* Runtime::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Runtime.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Runtime::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Runtime.name)
}

// string description = 2;
inline void Runtime::clear_description() {
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Runtime::description() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Runtime.description)
  return description_.Get();
}
inline void Runtime::set_description(const ::std::string& value) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Runtime.description)
}
#if LANG_CXX11
inline void Runtime::set_description(::std::string&& value) {
  
  description_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Runtime.description)
}
#endif
inline void Runtime::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Runtime.description)
}
inline void Runtime::set_description(const char* value,
    size_t size) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Runtime.description)
}
inline ::std::string* Runtime::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Runtime.description)
  return description_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Runtime::release_description() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Runtime.description)
  
  return description_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Runtime::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Runtime.description)
}
inline ::std::string* Runtime::unsafe_arena_release_description() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Runtime.description)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return description_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Runtime::unsafe_arena_set_allocated_description(
    ::std::string* description) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (description != NULL) {
    
  } else {
    
  }
  description_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      description, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Runtime.description)
}

// string agent_version = 3;
inline void Runtime::clear_agent_version() {
  agent_version_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Runtime::agent_version() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Runtime.agent_version)
  return agent_version_.Get();
}
inline void Runtime::set_agent_version(const ::std::string& value) {
  
  agent_version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Runtime.agent_version)
}
#if LANG_CXX11
inline void Runtime::set_agent_version(::std::string&& value) {
  
  agent_version_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Runtime.agent_version)
}
#endif
inline void Runtime::set_agent_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  agent_version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Runtime.agent_version)
}
inline void Runtime::set_agent_version(const char* value,
    size_t size) {
  
  agent_version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Runtime.agent_version)
}
inline ::std::string* Runtime::mutable_agent_version() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Runtime.agent_version)
  return agent_version_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Runtime::release_agent_version() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Runtime.agent_version)
  
  return agent_version_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Runtime::set_allocated_agent_version(::std::string* agent_version) {
  if (agent_version != NULL) {
    
  } else {
    
  }
  agent_version_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_version,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Runtime.agent_version)
}
inline ::std::string* Runtime::unsafe_arena_release_agent_version() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Runtime.agent_version)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return agent_version_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Runtime::unsafe_arena_set_allocated_agent_version(
    ::std::string* agent_version) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (agent_version != NULL) {
    
  } else {
    
  }
  agent_version_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      agent_version, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Runtime.agent_version)
}

// .google.cloud.dialogflow.v2beta1.Runtime.State state = 4;
inline void Runtime::clear_state() {
  state_ = 0;
}
inline ::google::cloud::dialogflow::v2beta1::Runtime_State Runtime::state() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Runtime.state)
  return static_cast< ::google::cloud::dialogflow::v2beta1::Runtime_State >(state_);
}
inline void Runtime::set_state(::google::cloud::dialogflow::v2beta1::Runtime_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Runtime.state)
}

// .google.protobuf.Timestamp update_time = 5;
inline bool Runtime::has_update_time() const {
  return this != internal_default_instance() && update_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& Runtime::update_time() const {
  const ::google::protobuf::Timestamp* p = update_time_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Runtime.update_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Runtime::release_update_time() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Runtime.update_time)
  
  ::google::protobuf::Timestamp* temp = update_time_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  update_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Runtime::unsafe_arena_release_update_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Runtime.update_time)
  
  ::google::protobuf::Timestamp* temp = update_time_;
  update_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Runtime::mutable_update_time() {
  
  if (update_time_ == NULL) {
    _slow_mutable_update_time();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Runtime.update_time)
  return update_time_;
}
inline void Runtime::set_allocated_update_time(::google::protobuf::Timestamp* update_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_time_);
  }
  if (update_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(update_time)->GetArena();
    if (message_arena != submessage_arena) {
      update_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_time, submessage_arena);
    }
    
  } else {
    
  }
  update_time_ = update_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Runtime.update_time)
}

// -------------------------------------------------------------------

// ListRuntimesRequest

// string parent = 1;
inline void ListRuntimesRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListRuntimesRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListRuntimesRequest.parent)
  return parent_.Get();
}
inline void ListRuntimesRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ListRuntimesRequest.parent)
}
#if LANG_CXX11
inline void ListRuntimesRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.ListRuntimesRequest.parent)
}
#endif
inline void ListRuntimesRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.ListRuntimesRequest.parent)
}
inline void ListRuntimesRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.ListRuntimesRequest.parent)
}
inline ::std::string* ListRuntimesRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ListRuntimesRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListRuntimesRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.ListRuntimesRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListRuntimesRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.ListRuntimesRequest.parent)
}
inline ::std::string* ListRuntimesRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.ListRuntimesRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListRuntimesRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.ListRuntimesRequest.parent)
}

// int32 page_size = 2;
inline void ListRuntimesRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListRuntimesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListRuntimesRequest.page_size)
  return page_size_;
}
inline void ListRuntimesRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ListRuntimesRequest.page_size)
}

// string page_token = 3;
inline void ListRuntimesRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListRuntimesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListRuntimesRequest.page_token)
  return page_token_.Get();
}
inline void ListRuntimesRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ListRuntimesRequest.page_token)
}
#if LANG_CXX11
inline void ListRuntimesRequest::set_page_token(::std::string&& value) {
  
  page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.ListRuntimesRequest.page_token)
}
#endif
inline void ListRuntimesRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.ListRuntimesRequest.page_token)
}
inline void ListRuntimesRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.ListRuntimesRequest.page_token)
}
inline ::std::string* ListRuntimesRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ListRuntimesRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListRuntimesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.ListRuntimesRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListRuntimesRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.ListRuntimesRequest.page_token)
}
inline ::std::string* ListRuntimesRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.ListRuntimesRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListRuntimesRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.ListRuntimesRequest.page_token)
}

// -------------------------------------------------------------------

// ListRuntimesResponse

// repeated .google.cloud.dialogflow.v2beta1.Runtime runtimes = 1;
inline int ListRuntimesResponse::runtimes_size() const {
  return runtimes_.size();
}
inline void ListRuntimesResponse::clear_runtimes() {
  runtimes_.Clear();
}
inline const ::google::cloud::dialogflow::v2beta1::Runtime& ListRuntimesResponse::runtimes(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListRuntimesResponse.runtimes)
  return runtimes_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::Runtime* ListRuntimesResponse::mutable_runtimes(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ListRuntimesResponse.runtimes)
  return runtimes_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::Runtime* ListRuntimesResponse::add_runtimes() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.ListRuntimesResponse.runtimes)
  return runtimes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Runtime >*
ListRuntimesResponse::mutable_runtimes() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.ListRuntimesResponse.runtimes)
  return &runtimes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Runtime >&
ListRuntimesResponse::runtimes() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.ListRuntimesResponse.runtimes)
  return runtimes_;
}

// string next_page_token = 2;
inline void ListRuntimesResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListRuntimesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListRuntimesResponse.next_page_token)
  return next_page_token_.Get();
}
inline void ListRuntimesResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ListRuntimesResponse.next_page_token)
}
#if LANG_CXX11
inline void ListRuntimesResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.ListRuntimesResponse.next_page_token)
}
#endif
inline void ListRuntimesResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.ListRuntimesResponse.next_page_token)
}
inline void ListRuntimesResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.ListRuntimesResponse.next_page_token)
}
inline ::std::string* ListRuntimesResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ListRuntimesResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListRuntimesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.ListRuntimesResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListRuntimesResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.ListRuntimesResponse.next_page_token)
}
inline ::std::string* ListRuntimesResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.ListRuntimesResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListRuntimesResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.ListRuntimesResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetRuntimeRequest

// string name = 1;
inline void GetRuntimeRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetRuntimeRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.GetRuntimeRequest.name)
  return name_.Get();
}
inline void GetRuntimeRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.GetRuntimeRequest.name)
}
#if LANG_CXX11
inline void GetRuntimeRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.GetRuntimeRequest.name)
}
#endif
inline void GetRuntimeRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.GetRuntimeRequest.name)
}
inline void GetRuntimeRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.GetRuntimeRequest.name)
}
inline ::std::string* GetRuntimeRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.GetRuntimeRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetRuntimeRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.GetRuntimeRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GetRuntimeRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.GetRuntimeRequest.name)
}
inline ::std::string* GetRuntimeRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.GetRuntimeRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetRuntimeRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.GetRuntimeRequest.name)
}

// -------------------------------------------------------------------

// CreateRuntimeRequest

// string parent = 1;
inline void CreateRuntimeRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CreateRuntimeRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.CreateRuntimeRequest.parent)
  return parent_.Get();
}
inline void CreateRuntimeRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.CreateRuntimeRequest.parent)
}
#if LANG_CXX11
inline void CreateRuntimeRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.CreateRuntimeRequest.parent)
}
#endif
inline void CreateRuntimeRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.CreateRuntimeRequest.parent)
}
inline void CreateRuntimeRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.CreateRuntimeRequest.parent)
}
inline ::std::string* CreateRuntimeRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.CreateRuntimeRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CreateRuntimeRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.CreateRuntimeRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void CreateRuntimeRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.CreateRuntimeRequest.parent)
}
inline ::std::string* CreateRuntimeRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.CreateRuntimeRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CreateRuntimeRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.CreateRuntimeRequest.parent)
}

// .google.cloud.dialogflow.v2beta1.Runtime runtime = 2;
inline bool CreateRuntimeRequest::has_runtime() const {
  return this != internal_default_instance() && runtime_ != NULL;
}
inline void CreateRuntimeRequest::clear_runtime() {
  if (GetArenaNoVirtual() == NULL && runtime_ != NULL) {
    delete runtime_;
  }
  runtime_ = NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::Runtime& CreateRuntimeRequest::runtime() const {
  const ::google::cloud::dialogflow::v2beta1::Runtime* p = runtime_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.CreateRuntimeRequest.runtime)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::Runtime*>(
      &::google::cloud::dialogflow::v2beta1::_Runtime_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::Runtime* CreateRuntimeRequest::release_runtime() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.CreateRuntimeRequest.runtime)
  
  ::google::cloud::dialogflow::v2beta1::Runtime* temp = runtime_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  runtime_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Runtime* CreateRuntimeRequest::unsafe_arena_release_runtime() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.CreateRuntimeRequest.runtime)
  
  ::google::cloud::dialogflow::v2beta1::Runtime* temp = runtime_;
  runtime_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Runtime* CreateRuntimeRequest::mutable_runtime() {
  
  if (runtime_ == NULL) {
    _slow_mutable_runtime();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.CreateRuntimeRequest.runtime)
  return runtime_;
}
inline void CreateRuntimeRequest::set_allocated_runtime(::google::cloud::dialogflow::v2beta1::Runtime* runtime) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete runtime_;
  }
  if (runtime) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(runtime);
    if (message_arena != submessage_arena) {
      runtime = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, runtime, submessage_arena);
    }
    
  } else {
    
  }
  runtime_ = runtime;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.CreateRuntimeRequest.runtime)
}

// -------------------------------------------------------------------

// UpdateRuntimeRequest

// .google.cloud.dialogflow.v2beta1.Runtime runtime = 1;
inline bool UpdateRuntimeRequest::has_runtime() const {
  return this != internal_default_instance() && runtime_ != NULL;
}
inline void UpdateRuntimeRequest::clear_runtime() {
  if (GetArenaNoVirtual() == NULL && runtime_ != NULL) {
    delete runtime_;
  }
  runtime_ = NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::Runtime& UpdateRuntimeRequest::runtime() const {
  const ::google::cloud::dialogflow::v2beta1::Runtime* p = runtime_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.UpdateRuntimeRequest.runtime)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::Runtime*>(
      &::google::cloud::dialogflow::v2beta1::_Runtime_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::Runtime* UpdateRuntimeRequest::release_runtime() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.UpdateRuntimeRequest.runtime)
  
  ::google::cloud::dialogflow::v2beta1::Runtime* temp = runtime_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  runtime_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Runtime* UpdateRuntimeRequest::unsafe_arena_release_runtime() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.UpdateRuntimeRequest.runtime)
  
  ::google::cloud::dialogflow::v2beta1::Runtime* temp = runtime_;
  runtime_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Runtime* UpdateRuntimeRequest::mutable_runtime() {
  
  if (runtime_ == NULL) {
    _slow_mutable_runtime();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.UpdateRuntimeRequest.runtime)
  return runtime_;
}
inline void UpdateRuntimeRequest::set_allocated_runtime(::google::cloud::dialogflow::v2beta1::Runtime* runtime) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete runtime_;
  }
  if (runtime) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(runtime);
    if (message_arena != submessage_arena) {
      runtime = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, runtime, submessage_arena);
    }
    
  } else {
    
  }
  runtime_ = runtime;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.UpdateRuntimeRequest.runtime)
}

// .google.protobuf.FieldMask update_mask = 2;
inline bool UpdateRuntimeRequest::has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != NULL;
}
inline const ::google::protobuf::FieldMask& UpdateRuntimeRequest::update_mask() const {
  const ::google::protobuf::FieldMask* p = update_mask_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.UpdateRuntimeRequest.update_mask)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FieldMask*>(
      &::google::protobuf::_FieldMask_default_instance_);
}
inline ::google::protobuf::FieldMask* UpdateRuntimeRequest::release_update_mask() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.UpdateRuntimeRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateRuntimeRequest::unsafe_arena_release_update_mask() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.UpdateRuntimeRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateRuntimeRequest::mutable_update_mask() {
  
  if (update_mask_ == NULL) {
    _slow_mutable_update_mask();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.UpdateRuntimeRequest.update_mask)
  return update_mask_;
}
inline void UpdateRuntimeRequest::set_allocated_update_mask(::google::protobuf::FieldMask* update_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_mask_);
  }
  if (update_mask) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update_mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    
  } else {
    
  }
  update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.UpdateRuntimeRequest.update_mask)
}

// -------------------------------------------------------------------

// DeleteRuntimeRequest

// string name = 1;
inline void DeleteRuntimeRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DeleteRuntimeRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.DeleteRuntimeRequest.name)
  return name_.Get();
}
inline void DeleteRuntimeRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.DeleteRuntimeRequest.name)
}
#if LANG_CXX11
inline void DeleteRuntimeRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.DeleteRuntimeRequest.name)
}
#endif
inline void DeleteRuntimeRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.DeleteRuntimeRequest.name)
}
inline void DeleteRuntimeRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.DeleteRuntimeRequest.name)
}
inline ::std::string* DeleteRuntimeRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.DeleteRuntimeRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DeleteRuntimeRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.DeleteRuntimeRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void DeleteRuntimeRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.DeleteRuntimeRequest.name)
}
inline ::std::string* DeleteRuntimeRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.DeleteRuntimeRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DeleteRuntimeRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.DeleteRuntimeRequest.name)
}

// -------------------------------------------------------------------

// GetRuntimeHistoryRequest

// string name = 1;
inline void GetRuntimeHistoryRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetRuntimeHistoryRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.GetRuntimeHistoryRequest.name)
  return name_.Get();
}
inline void GetRuntimeHistoryRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.GetRuntimeHistoryRequest.name)
}
#if LANG_CXX11
inline void GetRuntimeHistoryRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.GetRuntimeHistoryRequest.name)
}
#endif
inline void GetRuntimeHistoryRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.GetRuntimeHistoryRequest.name)
}
inline void GetRuntimeHistoryRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.GetRuntimeHistoryRequest.name)
}
inline ::std::string* GetRuntimeHistoryRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.GetRuntimeHistoryRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetRuntimeHistoryRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.GetRuntimeHistoryRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GetRuntimeHistoryRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.GetRuntimeHistoryRequest.name)
}
inline ::std::string* GetRuntimeHistoryRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.GetRuntimeHistoryRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetRuntimeHistoryRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.GetRuntimeHistoryRequest.name)
}

// int32 page_size = 2;
inline void GetRuntimeHistoryRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 GetRuntimeHistoryRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.GetRuntimeHistoryRequest.page_size)
  return page_size_;
}
inline void GetRuntimeHistoryRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.GetRuntimeHistoryRequest.page_size)
}

// string page_token = 3;
inline void GetRuntimeHistoryRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetRuntimeHistoryRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.GetRuntimeHistoryRequest.page_token)
  return page_token_.Get();
}
inline void GetRuntimeHistoryRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.GetRuntimeHistoryRequest.page_token)
}
#if LANG_CXX11
inline void GetRuntimeHistoryRequest::set_page_token(::std::string&& value) {
  
  page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.GetRuntimeHistoryRequest.page_token)
}
#endif
inline void GetRuntimeHistoryRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.GetRuntimeHistoryRequest.page_token)
}
inline void GetRuntimeHistoryRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.GetRuntimeHistoryRequest.page_token)
}
inline ::std::string* GetRuntimeHistoryRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.GetRuntimeHistoryRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetRuntimeHistoryRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.GetRuntimeHistoryRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GetRuntimeHistoryRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.GetRuntimeHistoryRequest.page_token)
}
inline ::std::string* GetRuntimeHistoryRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.GetRuntimeHistoryRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetRuntimeHistoryRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.GetRuntimeHistoryRequest.page_token)
}

// -------------------------------------------------------------------

// RuntimeHistory_Entry

// string agent_version = 4;
inline void RuntimeHistory_Entry::clear_agent_version() {
  agent_version_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& RuntimeHistory_Entry::agent_version() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry.agent_version)
  return agent_version_.Get();
}
inline void RuntimeHistory_Entry::set_agent_version(const ::std::string& value) {
  
  agent_version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry.agent_version)
}
#if LANG_CXX11
inline void RuntimeHistory_Entry::set_agent_version(::std::string&& value) {
  
  agent_version_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry.agent_version)
}
#endif
inline void RuntimeHistory_Entry::set_agent_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  agent_version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry.agent_version)
}
inline void RuntimeHistory_Entry::set_agent_version(const char* value,
    size_t size) {
  
  agent_version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry.agent_version)
}
inline ::std::string* RuntimeHistory_Entry::mutable_agent_version() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry.agent_version)
  return agent_version_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* RuntimeHistory_Entry::release_agent_version() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry.agent_version)
  
  return agent_version_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void RuntimeHistory_Entry::set_allocated_agent_version(::std::string* agent_version) {
  if (agent_version != NULL) {
    
  } else {
    
  }
  agent_version_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_version,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry.agent_version)
}
inline ::std::string* RuntimeHistory_Entry::unsafe_arena_release_agent_version() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry.agent_version)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return agent_version_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void RuntimeHistory_Entry::unsafe_arena_set_allocated_agent_version(
    ::std::string* agent_version) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (agent_version != NULL) {
    
  } else {
    
  }
  agent_version_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      agent_version, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry.agent_version)
}

// string description = 1;
inline void RuntimeHistory_Entry::clear_description() {
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& RuntimeHistory_Entry::description() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry.description)
  return description_.Get();
}
inline void RuntimeHistory_Entry::set_description(const ::std::string& value) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry.description)
}
#if LANG_CXX11
inline void RuntimeHistory_Entry::set_description(::std::string&& value) {
  
  description_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry.description)
}
#endif
inline void RuntimeHistory_Entry::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry.description)
}
inline void RuntimeHistory_Entry::set_description(const char* value,
    size_t size) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry.description)
}
inline ::std::string* RuntimeHistory_Entry::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry.description)
  return description_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* RuntimeHistory_Entry::release_description() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry.description)
  
  return description_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void RuntimeHistory_Entry::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry.description)
}
inline ::std::string* RuntimeHistory_Entry::unsafe_arena_release_description() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry.description)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return description_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void RuntimeHistory_Entry::unsafe_arena_set_allocated_description(
    ::std::string* description) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (description != NULL) {
    
  } else {
    
  }
  description_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      description, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry.description)
}

// .google.protobuf.Timestamp create_time = 5;
inline bool RuntimeHistory_Entry::has_create_time() const {
  return this != internal_default_instance() && create_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& RuntimeHistory_Entry::create_time() const {
  const ::google::protobuf::Timestamp* p = create_time_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry.create_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* RuntimeHistory_Entry::release_create_time() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  create_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* RuntimeHistory_Entry::unsafe_arena_release_create_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  create_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* RuntimeHistory_Entry::mutable_create_time() {
  
  if (create_time_ == NULL) {
    _slow_mutable_create_time();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry.create_time)
  return create_time_;
}
inline void RuntimeHistory_Entry::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(create_time_);
  }
  if (create_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(create_time)->GetArena();
    if (message_arena != submessage_arena) {
      create_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_time, submessage_arena);
    }
    
  } else {
    
  }
  create_time_ = create_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry.create_time)
}

// -------------------------------------------------------------------

// RuntimeHistory

// repeated .google.cloud.dialogflow.v2beta1.RuntimeHistory.Entry entries = 1;
inline int RuntimeHistory::entries_size() const {
  return entries_.size();
}
inline void RuntimeHistory::clear_entries() {
  entries_.Clear();
}
inline const ::google::cloud::dialogflow::v2beta1::RuntimeHistory_Entry& RuntimeHistory::entries(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.RuntimeHistory.entries)
  return entries_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::RuntimeHistory_Entry* RuntimeHistory::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.RuntimeHistory.entries)
  return entries_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::RuntimeHistory_Entry* RuntimeHistory::add_entries() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.RuntimeHistory.entries)
  return entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::RuntimeHistory_Entry >*
RuntimeHistory::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.RuntimeHistory.entries)
  return &entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::RuntimeHistory_Entry >&
RuntimeHistory::entries() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.RuntimeHistory.entries)
  return entries_;
}

// string next_page_token = 2;
inline void RuntimeHistory::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& RuntimeHistory::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.RuntimeHistory.next_page_token)
  return next_page_token_.Get();
}
inline void RuntimeHistory::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.RuntimeHistory.next_page_token)
}
#if LANG_CXX11
inline void RuntimeHistory::set_next_page_token(::std::string&& value) {
  
  next_page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.RuntimeHistory.next_page_token)
}
#endif
inline void RuntimeHistory::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.RuntimeHistory.next_page_token)
}
inline void RuntimeHistory::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.RuntimeHistory.next_page_token)
}
inline ::std::string* RuntimeHistory::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.RuntimeHistory.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* RuntimeHistory::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.RuntimeHistory.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void RuntimeHistory::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.RuntimeHistory.next_page_token)
}
inline ::std::string* RuntimeHistory::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.RuntimeHistory.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void RuntimeHistory::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.RuntimeHistory.next_page_token)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::cloud::dialogflow::v2beta1::Runtime_State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::dialogflow::v2beta1::Runtime_State>() {
  return ::google::cloud::dialogflow::v2beta1::Runtime_State_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto__INCLUDED
