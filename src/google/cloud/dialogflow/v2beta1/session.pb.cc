// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/v2beta1/session.proto

#include "google/cloud/dialogflow/v2beta1/session.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {
class DetectIntentRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectIntentRequest>
      _instance;
} _DetectIntentRequest_default_instance_;
class DetectIntentResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectIntentResponse>
      _instance;
} _DetectIntentResponse_default_instance_;
class QueryParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryParameters>
      _instance;
} _QueryParameters_default_instance_;
class QueryInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryInput>
      _instance;
  const ::google::cloud::dialogflow::v2beta1::InputAudioConfig* audio_config_;
  const ::google::cloud::dialogflow::v2beta1::TextInput* text_;
  const ::google::cloud::dialogflow::v2beta1::EventInput* event_;
} _QueryInput_default_instance_;
class QueryResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryResult>
      _instance;
} _QueryResult_default_instance_;
class StreamingDetectIntentRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamingDetectIntentRequest>
      _instance;
} _StreamingDetectIntentRequest_default_instance_;
class StreamingDetectIntentResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamingDetectIntentResponse>
      _instance;
} _StreamingDetectIntentResponse_default_instance_;
class StreamingRecognitionResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamingRecognitionResult>
      _instance;
} _StreamingRecognitionResult_default_instance_;
class InputAudioConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InputAudioConfig>
      _instance;
} _InputAudioConfig_default_instance_;
class TextInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TextInput>
      _instance;
} _TextInput_default_instance_;
class EventInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventInput>
      _instance;
} _EventInput_default_instance_;
}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto {
void InitDefaultsDetectIntentRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsQueryParameters();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsQueryInput();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_DetectIntentRequest_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::DetectIntentRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::DetectIntentRequest::InitAsDefaultInstance();
}

void InitDefaultsDetectIntentRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDetectIntentRequestImpl);
}

void InitDefaultsDetectIntentResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsQueryResult();
  protobuf_google_2frpc_2fstatus_2eproto::InitDefaultsStatus();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_DetectIntentResponse_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::DetectIntentResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::DetectIntentResponse::InitAsDefaultInstance();
}

void InitDefaultsDetectIntentResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDetectIntentResponseImpl);
}

void InitDefaultsQueryParametersImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2ftype_2flatlng_2eproto::InitDefaultsLatLng();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fcontext_2eproto::InitDefaultsContext();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_5fentity_5ftype_2eproto::InitDefaultsSessionEntityType();
  protobuf_google_2fprotobuf_2fstruct_2eproto::InitDefaultsListValue();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_QueryParameters_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::QueryParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::QueryParameters::InitAsDefaultInstance();
}

void InitDefaultsQueryParameters() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQueryParametersImpl);
}

void InitDefaultsQueryInputImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsInputAudioConfig();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsTextInput();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsEventInput();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_QueryInput_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::QueryInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::QueryInput::InitAsDefaultInstance();
}

void InitDefaultsQueryInput() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQueryInputImpl);
}

void InitDefaultsQueryResultImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fstruct_2eproto::InitDefaultsListValue();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fcontext_2eproto::InitDefaultsContext();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_QueryResult_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::QueryResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::QueryResult::InitAsDefaultInstance();
}

void InitDefaultsQueryResult() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQueryResultImpl);
}

void InitDefaultsStreamingDetectIntentRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsQueryParameters();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsQueryInput();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_StreamingDetectIntentRequest_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::StreamingDetectIntentRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::StreamingDetectIntentRequest::InitAsDefaultInstance();
}

void InitDefaultsStreamingDetectIntentRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStreamingDetectIntentRequestImpl);
}

void InitDefaultsStreamingDetectIntentResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsStreamingRecognitionResult();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsQueryResult();
  protobuf_google_2frpc_2fstatus_2eproto::InitDefaultsStatus();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_StreamingDetectIntentResponse_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::StreamingDetectIntentResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::StreamingDetectIntentResponse::InitAsDefaultInstance();
}

void InitDefaultsStreamingDetectIntentResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStreamingDetectIntentResponseImpl);
}

void InitDefaultsStreamingRecognitionResultImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_StreamingRecognitionResult_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult::InitAsDefaultInstance();
}

void InitDefaultsStreamingRecognitionResult() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStreamingRecognitionResultImpl);
}

void InitDefaultsInputAudioConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_InputAudioConfig_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::InputAudioConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::InputAudioConfig::InitAsDefaultInstance();
}

void InitDefaultsInputAudioConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsInputAudioConfigImpl);
}

void InitDefaultsTextInputImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_TextInput_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::TextInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::TextInput::InitAsDefaultInstance();
}

void InitDefaultsTextInput() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTextInputImpl);
}

void InitDefaultsEventInputImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fstruct_2eproto::InitDefaultsListValue();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_EventInput_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::EventInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::EventInput::InitAsDefaultInstance();
}

void InitDefaultsEventInput() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEventInputImpl);
}

::google::protobuf::Metadata file_level_metadata[11];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::DetectIntentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::DetectIntentRequest, session_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::DetectIntentRequest, query_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::DetectIntentRequest, query_input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::DetectIntentRequest, input_audio_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::DetectIntentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::DetectIntentResponse, response_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::DetectIntentResponse, query_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::DetectIntentResponse, webhook_status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::QueryParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::QueryParameters, time_zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::QueryParameters, geo_location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::QueryParameters, contexts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::QueryParameters, reset_contexts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::QueryParameters, session_entity_types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::QueryParameters, payload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::QueryInput, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::QueryInput, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::cloud::dialogflow::v2beta1::QueryInputDefaultTypeInternal, audio_config_),
  offsetof(::google::cloud::dialogflow::v2beta1::QueryInputDefaultTypeInternal, text_),
  offsetof(::google::cloud::dialogflow::v2beta1::QueryInputDefaultTypeInternal, event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::QueryInput, input_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::QueryResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::QueryResult, query_text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::QueryResult, language_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::QueryResult, speech_recognition_confidence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::QueryResult, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::QueryResult, parameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::QueryResult, all_required_params_present_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::QueryResult, fulfillment_text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::QueryResult, fulfillment_messages_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::QueryResult, webhook_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::QueryResult, webhook_payload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::QueryResult, output_contexts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::QueryResult, intent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::QueryResult, intent_detection_confidence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::QueryResult, diagnostic_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::StreamingDetectIntentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::StreamingDetectIntentRequest, session_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::StreamingDetectIntentRequest, query_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::StreamingDetectIntentRequest, query_input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::StreamingDetectIntentRequest, single_utterance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::StreamingDetectIntentRequest, input_audio_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::StreamingDetectIntentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::StreamingDetectIntentResponse, response_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::StreamingDetectIntentResponse, recognition_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::StreamingDetectIntentResponse, query_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::StreamingDetectIntentResponse, webhook_status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult, message_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult, transcript_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult, is_final_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::InputAudioConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::InputAudioConfig, audio_encoding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::InputAudioConfig, sample_rate_hertz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::InputAudioConfig, language_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::InputAudioConfig, phrase_hints_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::TextInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::TextInput, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::TextInput, language_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::EventInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::EventInput, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::EventInput, parameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::EventInput, language_code_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::cloud::dialogflow::v2beta1::DetectIntentRequest)},
  { 9, -1, sizeof(::google::cloud::dialogflow::v2beta1::DetectIntentResponse)},
  { 17, -1, sizeof(::google::cloud::dialogflow::v2beta1::QueryParameters)},
  { 28, -1, sizeof(::google::cloud::dialogflow::v2beta1::QueryInput)},
  { 37, -1, sizeof(::google::cloud::dialogflow::v2beta1::QueryResult)},
  { 56, -1, sizeof(::google::cloud::dialogflow::v2beta1::StreamingDetectIntentRequest)},
  { 66, -1, sizeof(::google::cloud::dialogflow::v2beta1::StreamingDetectIntentResponse)},
  { 75, -1, sizeof(::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult)},
  { 83, -1, sizeof(::google::cloud::dialogflow::v2beta1::InputAudioConfig)},
  { 92, -1, sizeof(::google::cloud::dialogflow::v2beta1::TextInput)},
  { 99, -1, sizeof(::google::cloud::dialogflow::v2beta1::EventInput)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_DetectIntentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_DetectIntentResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_QueryParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_QueryInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_QueryResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_StreamingDetectIntentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_StreamingDetectIntentResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_StreamingRecognitionResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_InputAudioConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_TextInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_EventInput_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/cloud/dialogflow/v2beta1/session.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n-google/cloud/dialogflow/v2beta1/sessio"
      "n.proto\022\037google.cloud.dialogflow.v2beta1"
      "\032\034google/api/annotations.proto\032-google/c"
      "loud/dialogflow/v2beta1/context.proto\032,g"
      "oogle/cloud/dialogflow/v2beta1/intent.pr"
      "oto\0329google/cloud/dialogflow/v2beta1/ses"
      "sion_entity_type.proto\032\034google/protobuf/"
      "struct.proto\032\027google/rpc/status.proto\032\030g"
      "oogle/type/latlng.proto\"\305\001\n\023DetectIntent"
      "Request\022\017\n\007session\030\001 \001(\t\022F\n\014query_params"
      "\030\002 \001(\01320.google.cloud.dialogflow.v2beta1"
      ".QueryParameters\022@\n\013query_input\030\003 \001(\0132+."
      "google.cloud.dialogflow.v2beta1.QueryInp"
      "ut\022\023\n\013input_audio\030\005 \001(\014\"\233\001\n\024DetectIntent"
      "Response\022\023\n\013response_id\030\001 \001(\t\022B\n\014query_r"
      "esult\030\002 \001(\0132,.google.cloud.dialogflow.v2"
      "beta1.QueryResult\022*\n\016webhook_status\030\003 \001("
      "\0132\022.google.rpc.Status\"\237\002\n\017QueryParameter"
      "s\022\021\n\ttime_zone\030\001 \001(\t\022)\n\014geo_location\030\002 \001"
      "(\0132\023.google.type.LatLng\022:\n\010contexts\030\003 \003("
      "\0132(.google.cloud.dialogflow.v2beta1.Cont"
      "ext\022\026\n\016reset_contexts\030\004 \001(\010\022P\n\024session_e"
      "ntity_types\030\005 \003(\01322.google.cloud.dialogf"
      "low.v2beta1.SessionEntityType\022(\n\007payload"
      "\030\006 \001(\0132\027.google.protobuf.Struct\"\332\001\n\nQuer"
      "yInput\022I\n\014audio_config\030\001 \001(\01321.google.cl"
      "oud.dialogflow.v2beta1.InputAudioConfigH"
      "\000\022:\n\004text\030\002 \001(\0132*.google.cloud.dialogflo"
      "w.v2beta1.TextInputH\000\022<\n\005event\030\003 \001(\0132+.g"
      "oogle.cloud.dialogflow.v2beta1.EventInpu"
      "tH\000B\007\n\005input\"\307\004\n\013QueryResult\022\022\n\nquery_te"
      "xt\030\001 \001(\t\022\025\n\rlanguage_code\030\017 \001(\t\022%\n\035speec"
      "h_recognition_confidence\030\002 \001(\002\022\016\n\006action"
      "\030\003 \001(\t\022+\n\nparameters\030\004 \001(\0132\027.google.prot"
      "obuf.Struct\022#\n\033all_required_params_prese"
      "nt\030\005 \001(\010\022\030\n\020fulfillment_text\030\006 \001(\t\022M\n\024fu"
      "lfillment_messages\030\007 \003(\0132/.google.cloud."
      "dialogflow.v2beta1.Intent.Message\022\026\n\016web"
      "hook_source\030\010 \001(\t\0220\n\017webhook_payload\030\t \001"
      "(\0132\027.google.protobuf.Struct\022A\n\017output_co"
      "ntexts\030\n \003(\0132(.google.cloud.dialogflow.v"
      "2beta1.Context\0227\n\006intent\030\013 \001(\0132\'.google."
      "cloud.dialogflow.v2beta1.Intent\022#\n\033inten"
      "t_detection_confidence\030\014 \001(\002\0220\n\017diagnost"
      "ic_info\030\016 \001(\0132\027.google.protobuf.Struct\"\350"
      "\001\n\034StreamingDetectIntentRequest\022\017\n\007sessi"
      "on\030\001 \001(\t\022F\n\014query_params\030\002 \001(\01320.google."
      "cloud.dialogflow.v2beta1.QueryParameters"
      "\022@\n\013query_input\030\003 \001(\0132+.google.cloud.dia"
      "logflow.v2beta1.QueryInput\022\030\n\020single_utt"
      "erance\030\004 \001(\010\022\023\n\013input_audio\030\006 \001(\014\"\375\001\n\035St"
      "reamingDetectIntentResponse\022\023\n\013response_"
      "id\030\001 \001(\t\022W\n\022recognition_result\030\002 \001(\0132;.g"
      "oogle.cloud.dialogflow.v2beta1.Streaming"
      "RecognitionResult\022B\n\014query_result\030\003 \001(\0132"
      ",.google.cloud.dialogflow.v2beta1.QueryR"
      "esult\022*\n\016webhook_status\030\004 \001(\0132\022.google.r"
      "pc.Status\"\373\001\n\032StreamingRecognitionResult"
      "\022]\n\014message_type\030\001 \001(\0162G.google.cloud.di"
      "alogflow.v2beta1.StreamingRecognitionRes"
      "ult.MessageType\022\022\n\ntranscript\030\002 \001(\t\022\020\n\010i"
      "s_final\030\003 \001(\010\"X\n\013MessageType\022\034\n\030MESSAGE_"
      "TYPE_UNSPECIFIED\020\000\022\016\n\nTRANSCRIPT\020\001\022\033\n\027EN"
      "D_OF_SINGLE_UTTERANCE\020\002\"\242\001\n\020InputAudioCo"
      "nfig\022F\n\016audio_encoding\030\001 \001(\0162..google.cl"
      "oud.dialogflow.v2beta1.AudioEncoding\022\031\n\021"
      "sample_rate_hertz\030\002 \001(\005\022\025\n\rlanguage_code"
      "\030\003 \001(\t\022\024\n\014phrase_hints\030\004 \003(\t\"0\n\tTextInpu"
      "t\022\014\n\004text\030\001 \001(\t\022\025\n\rlanguage_code\030\002 \001(\t\"^"
      "\n\nEventInput\022\014\n\004name\030\001 \001(\t\022+\n\nparameters"
      "\030\002 \001(\0132\027.google.protobuf.Struct\022\025\n\rlangu"
      "age_code\030\003 \001(\t*\373\001\n\rAudioEncoding\022\036\n\032AUDI"
      "O_ENCODING_UNSPECIFIED\020\000\022\034\n\030AUDIO_ENCODI"
      "NG_LINEAR_16\020\001\022\027\n\023AUDIO_ENCODING_FLAC\020\002\022"
      "\030\n\024AUDIO_ENCODING_MULAW\020\003\022\026\n\022AUDIO_ENCOD"
      "ING_AMR\020\004\022\031\n\025AUDIO_ENCODING_AMR_WB\020\005\022\033\n\027"
      "AUDIO_ENCODING_OGG_OPUS\020\006\022)\n%AUDIO_ENCOD"
      "ING_SPEEX_WITH_HEADER_BYTE\020\0072\355\002\n\010Session"
      "s\022\303\001\n\014DetectIntent\0224.google.cloud.dialog"
      "flow.v2beta1.DetectIntentRequest\0325.googl"
      "e.cloud.dialogflow.v2beta1.DetectIntentR"
      "esponse\"F\202\323\344\223\002@\";/v2beta1/{session=proje"
      "cts/*/agent/sessions/*}:detectIntent:\001*\022"
      "\232\001\n\025StreamingDetectIntent\022=.google.cloud"
      ".dialogflow.v2beta1.StreamingDetectInten"
      "tRequest\032>.google.cloud.dialogflow.v2bet"
      "a1.StreamingDetectIntentResponse(\0010\001B\252\001\n"
      "#com.google.cloud.dialogflow.v2beta1B\014Se"
      "ssionProtoP\001ZIgoogle.golang.org/genproto"
      "/googleapis/cloud/dialogflow/v2beta1;dia"
      "logflow\370\001\001\242\002\002DF\252\002\037Google.Cloud.Dialogflo"
      "w.V2beta1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3657);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/dialogflow/v2beta1/session.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fcontext_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_5fentity_5ftype_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
  ::protobuf_google_2frpc_2fstatus_2eproto::AddDescriptors();
  ::protobuf_google_2ftype_2flatlng_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {
const ::google::protobuf::EnumDescriptor* StreamingRecognitionResult_MessageType_descriptor() {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::file_level_enum_descriptors[0];
}
bool StreamingRecognitionResult_MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const StreamingRecognitionResult_MessageType StreamingRecognitionResult::MESSAGE_TYPE_UNSPECIFIED;
const StreamingRecognitionResult_MessageType StreamingRecognitionResult::TRANSCRIPT;
const StreamingRecognitionResult_MessageType StreamingRecognitionResult::END_OF_SINGLE_UTTERANCE;
const StreamingRecognitionResult_MessageType StreamingRecognitionResult::MessageType_MIN;
const StreamingRecognitionResult_MessageType StreamingRecognitionResult::MessageType_MAX;
const int StreamingRecognitionResult::MessageType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AudioEncoding_descriptor() {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::file_level_enum_descriptors[1];
}
bool AudioEncoding_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void DetectIntentRequest::InitAsDefaultInstance() {
  ::google::cloud::dialogflow::v2beta1::_DetectIntentRequest_default_instance_._instance.get_mutable()->query_params_ = const_cast< ::google::cloud::dialogflow::v2beta1::QueryParameters*>(
      ::google::cloud::dialogflow::v2beta1::QueryParameters::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_DetectIntentRequest_default_instance_._instance.get_mutable()->query_input_ = const_cast< ::google::cloud::dialogflow::v2beta1::QueryInput*>(
      ::google::cloud::dialogflow::v2beta1::QueryInput::internal_default_instance());
}
void DetectIntentRequest::_slow_mutable_query_params() {
  query_params_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::QueryParameters >(
      GetArenaNoVirtual());
}
void DetectIntentRequest::unsafe_arena_set_allocated_query_params(
    ::google::cloud::dialogflow::v2beta1::QueryParameters* query_params) {
  if (GetArenaNoVirtual() == NULL) {
    delete query_params_;
  }
  query_params_ = query_params;
  if (query_params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.DetectIntentRequest.query_params)
}
void DetectIntentRequest::_slow_mutable_query_input() {
  query_input_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::QueryInput >(
      GetArenaNoVirtual());
}
void DetectIntentRequest::unsafe_arena_set_allocated_query_input(
    ::google::cloud::dialogflow::v2beta1::QueryInput* query_input) {
  if (GetArenaNoVirtual() == NULL) {
    delete query_input_;
  }
  query_input_ = query_input;
  if (query_input) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.DetectIntentRequest.query_input)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectIntentRequest::kSessionFieldNumber;
const int DetectIntentRequest::kQueryParamsFieldNumber;
const int DetectIntentRequest::kQueryInputFieldNumber;
const int DetectIntentRequest::kInputAudioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectIntentRequest::DetectIntentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsDetectIntentRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.DetectIntentRequest)
}
DetectIntentRequest::DetectIntentRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsDetectIntentRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.DetectIntentRequest)
}
DetectIntentRequest::DetectIntentRequest(const DetectIntentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session().size() > 0) {
    session_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session(),
      GetArenaNoVirtual());
  }
  input_audio_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.input_audio().size() > 0) {
    input_audio_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_audio(),
      GetArenaNoVirtual());
  }
  if (from.has_query_params()) {
    query_params_ = new ::google::cloud::dialogflow::v2beta1::QueryParameters(*from.query_params_);
  } else {
    query_params_ = NULL;
  }
  if (from.has_query_input()) {
    query_input_ = new ::google::cloud::dialogflow::v2beta1::QueryInput(*from.query_input_);
  } else {
    query_input_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.DetectIntentRequest)
}

void DetectIntentRequest::SharedCtor() {
  session_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_audio_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&query_params_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&query_input_) -
      reinterpret_cast<char*>(&query_params_)) + sizeof(query_input_));
  _cached_size_ = 0;
}

DetectIntentRequest::~DetectIntentRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.DetectIntentRequest)
  SharedDtor();
}

void DetectIntentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  session_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_audio_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete query_params_;
  if (this != internal_default_instance()) delete query_input_;
}

void DetectIntentRequest::ArenaDtor(void* object) {
  DetectIntentRequest* _this = reinterpret_cast< DetectIntentRequest* >(object);
  (void)_this;
}
void DetectIntentRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DetectIntentRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectIntentRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectIntentRequest& DetectIntentRequest::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsDetectIntentRequest();
  return *internal_default_instance();
}

DetectIntentRequest* DetectIntentRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<DetectIntentRequest>(arena);
}

void DetectIntentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.DetectIntentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  session_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  input_audio_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && query_params_ != NULL) {
    delete query_params_;
  }
  query_params_ = NULL;
  if (GetArenaNoVirtual() == NULL && query_input_ != NULL) {
    delete query_input_;
  }
  query_input_ = NULL;
  _internal_metadata_.Clear();
}

bool DetectIntentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.DetectIntentRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string session = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session().data(), static_cast<int>(this->session().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.DetectIntentRequest.session"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.QueryParameters query_params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_query_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.QueryInput query_input = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_query_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes input_audio = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_input_audio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.DetectIntentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.DetectIntentRequest)
  return false;
#undef DO_
}

void DetectIntentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.DetectIntentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session = 1;
  if (this->session().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session().data(), static_cast<int>(this->session().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.DetectIntentRequest.session");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->session(), output);
  }

  // .google.cloud.dialogflow.v2beta1.QueryParameters query_params = 2;
  if (this->has_query_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->query_params_, output);
  }

  // .google.cloud.dialogflow.v2beta1.QueryInput query_input = 3;
  if (this->has_query_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->query_input_, output);
  }

  // bytes input_audio = 5;
  if (this->input_audio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->input_audio(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.DetectIntentRequest)
}

::google::protobuf::uint8* DetectIntentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.DetectIntentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session = 1;
  if (this->session().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session().data(), static_cast<int>(this->session().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.DetectIntentRequest.session");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->session(), target);
  }

  // .google.cloud.dialogflow.v2beta1.QueryParameters query_params = 2;
  if (this->has_query_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->query_params_, deterministic, target);
  }

  // .google.cloud.dialogflow.v2beta1.QueryInput query_input = 3;
  if (this->has_query_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->query_input_, deterministic, target);
  }

  // bytes input_audio = 5;
  if (this->input_audio().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->input_audio(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.DetectIntentRequest)
  return target;
}

size_t DetectIntentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.DetectIntentRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string session = 1;
  if (this->session().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session());
  }

  // bytes input_audio = 5;
  if (this->input_audio().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->input_audio());
  }

  // .google.cloud.dialogflow.v2beta1.QueryParameters query_params = 2;
  if (this->has_query_params()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->query_params_);
  }

  // .google.cloud.dialogflow.v2beta1.QueryInput query_input = 3;
  if (this->has_query_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->query_input_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectIntentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.DetectIntentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectIntentRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectIntentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.DetectIntentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.DetectIntentRequest)
    MergeFrom(*source);
  }
}

void DetectIntentRequest::MergeFrom(const DetectIntentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.DetectIntentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.session().size() > 0) {
    set_session(from.session());
  }
  if (from.input_audio().size() > 0) {
    set_input_audio(from.input_audio());
  }
  if (from.has_query_params()) {
    mutable_query_params()->::google::cloud::dialogflow::v2beta1::QueryParameters::MergeFrom(from.query_params());
  }
  if (from.has_query_input()) {
    mutable_query_input()->::google::cloud::dialogflow::v2beta1::QueryInput::MergeFrom(from.query_input());
  }
}

void DetectIntentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.DetectIntentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectIntentRequest::CopyFrom(const DetectIntentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.DetectIntentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectIntentRequest::IsInitialized() const {
  return true;
}

void DetectIntentRequest::Swap(DetectIntentRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DetectIntentRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DetectIntentRequest::UnsafeArenaSwap(DetectIntentRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DetectIntentRequest::InternalSwap(DetectIntentRequest* other) {
  using std::swap;
  session_.Swap(&other->session_);
  input_audio_.Swap(&other->input_audio_);
  swap(query_params_, other->query_params_);
  swap(query_input_, other->query_input_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectIntentRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DetectIntentResponse::InitAsDefaultInstance() {
  ::google::cloud::dialogflow::v2beta1::_DetectIntentResponse_default_instance_._instance.get_mutable()->query_result_ = const_cast< ::google::cloud::dialogflow::v2beta1::QueryResult*>(
      ::google::cloud::dialogflow::v2beta1::QueryResult::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_DetectIntentResponse_default_instance_._instance.get_mutable()->webhook_status_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
}
void DetectIntentResponse::_slow_mutable_query_result() {
  query_result_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::QueryResult >(
      GetArenaNoVirtual());
}
void DetectIntentResponse::unsafe_arena_set_allocated_query_result(
    ::google::cloud::dialogflow::v2beta1::QueryResult* query_result) {
  if (GetArenaNoVirtual() == NULL) {
    delete query_result_;
  }
  query_result_ = query_result;
  if (query_result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.DetectIntentResponse.query_result)
}
void DetectIntentResponse::_slow_mutable_webhook_status() {
  webhook_status_ = ::google::protobuf::Arena::Create< ::google::rpc::Status >(
      GetArenaNoVirtual());
}
void DetectIntentResponse::unsafe_arena_set_allocated_webhook_status(
    ::google::rpc::Status* webhook_status) {
  if (GetArenaNoVirtual() == NULL) {
    delete webhook_status_;
  }
  webhook_status_ = webhook_status;
  if (webhook_status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.DetectIntentResponse.webhook_status)
}
void DetectIntentResponse::clear_webhook_status() {
  if (GetArenaNoVirtual() == NULL && webhook_status_ != NULL) {
    delete webhook_status_;
  }
  webhook_status_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectIntentResponse::kResponseIdFieldNumber;
const int DetectIntentResponse::kQueryResultFieldNumber;
const int DetectIntentResponse::kWebhookStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectIntentResponse::DetectIntentResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsDetectIntentResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.DetectIntentResponse)
}
DetectIntentResponse::DetectIntentResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsDetectIntentResponse();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.DetectIntentResponse)
}
DetectIntentResponse::DetectIntentResponse(const DetectIntentResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  response_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.response_id().size() > 0) {
    response_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_id(),
      GetArenaNoVirtual());
  }
  if (from.has_query_result()) {
    query_result_ = new ::google::cloud::dialogflow::v2beta1::QueryResult(*from.query_result_);
  } else {
    query_result_ = NULL;
  }
  if (from.has_webhook_status()) {
    webhook_status_ = new ::google::rpc::Status(*from.webhook_status_);
  } else {
    webhook_status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.DetectIntentResponse)
}

void DetectIntentResponse::SharedCtor() {
  response_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&query_result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&webhook_status_) -
      reinterpret_cast<char*>(&query_result_)) + sizeof(webhook_status_));
  _cached_size_ = 0;
}

DetectIntentResponse::~DetectIntentResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.DetectIntentResponse)
  SharedDtor();
}

void DetectIntentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  response_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete query_result_;
  if (this != internal_default_instance()) delete webhook_status_;
}

void DetectIntentResponse::ArenaDtor(void* object) {
  DetectIntentResponse* _this = reinterpret_cast< DetectIntentResponse* >(object);
  (void)_this;
}
void DetectIntentResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DetectIntentResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectIntentResponse::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectIntentResponse& DetectIntentResponse::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsDetectIntentResponse();
  return *internal_default_instance();
}

DetectIntentResponse* DetectIntentResponse::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<DetectIntentResponse>(arena);
}

void DetectIntentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.DetectIntentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  response_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && query_result_ != NULL) {
    delete query_result_;
  }
  query_result_ = NULL;
  if (GetArenaNoVirtual() == NULL && webhook_status_ != NULL) {
    delete webhook_status_;
  }
  webhook_status_ = NULL;
  _internal_metadata_.Clear();
}

bool DetectIntentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.DetectIntentResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string response_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response_id().data(), static_cast<int>(this->response_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.DetectIntentResponse.response_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.QueryResult query_result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_query_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.rpc.Status webhook_status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_webhook_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.DetectIntentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.DetectIntentResponse)
  return false;
#undef DO_
}

void DetectIntentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.DetectIntentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string response_id = 1;
  if (this->response_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_id().data(), static_cast<int>(this->response_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.DetectIntentResponse.response_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->response_id(), output);
  }

  // .google.cloud.dialogflow.v2beta1.QueryResult query_result = 2;
  if (this->has_query_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->query_result_, output);
  }

  // .google.rpc.Status webhook_status = 3;
  if (this->has_webhook_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->webhook_status_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.DetectIntentResponse)
}

::google::protobuf::uint8* DetectIntentResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.DetectIntentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string response_id = 1;
  if (this->response_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_id().data(), static_cast<int>(this->response_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.DetectIntentResponse.response_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->response_id(), target);
  }

  // .google.cloud.dialogflow.v2beta1.QueryResult query_result = 2;
  if (this->has_query_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->query_result_, deterministic, target);
  }

  // .google.rpc.Status webhook_status = 3;
  if (this->has_webhook_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->webhook_status_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.DetectIntentResponse)
  return target;
}

size_t DetectIntentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.DetectIntentResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string response_id = 1;
  if (this->response_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response_id());
  }

  // .google.cloud.dialogflow.v2beta1.QueryResult query_result = 2;
  if (this->has_query_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->query_result_);
  }

  // .google.rpc.Status webhook_status = 3;
  if (this->has_webhook_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->webhook_status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectIntentResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.DetectIntentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectIntentResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectIntentResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.DetectIntentResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.DetectIntentResponse)
    MergeFrom(*source);
  }
}

void DetectIntentResponse::MergeFrom(const DetectIntentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.DetectIntentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.response_id().size() > 0) {
    set_response_id(from.response_id());
  }
  if (from.has_query_result()) {
    mutable_query_result()->::google::cloud::dialogflow::v2beta1::QueryResult::MergeFrom(from.query_result());
  }
  if (from.has_webhook_status()) {
    mutable_webhook_status()->::google::rpc::Status::MergeFrom(from.webhook_status());
  }
}

void DetectIntentResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.DetectIntentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectIntentResponse::CopyFrom(const DetectIntentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.DetectIntentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectIntentResponse::IsInitialized() const {
  return true;
}

void DetectIntentResponse::Swap(DetectIntentResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DetectIntentResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DetectIntentResponse::UnsafeArenaSwap(DetectIntentResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DetectIntentResponse::InternalSwap(DetectIntentResponse* other) {
  using std::swap;
  response_id_.Swap(&other->response_id_);
  swap(query_result_, other->query_result_);
  swap(webhook_status_, other->webhook_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectIntentResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryParameters::InitAsDefaultInstance() {
  ::google::cloud::dialogflow::v2beta1::_QueryParameters_default_instance_._instance.get_mutable()->geo_location_ = const_cast< ::google::type::LatLng*>(
      ::google::type::LatLng::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_QueryParameters_default_instance_._instance.get_mutable()->payload_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
}
void QueryParameters::_slow_mutable_geo_location() {
  geo_location_ = ::google::protobuf::Arena::Create< ::google::type::LatLng >(
      GetArenaNoVirtual());
}
void QueryParameters::unsafe_arena_set_allocated_geo_location(
    ::google::type::LatLng* geo_location) {
  if (GetArenaNoVirtual() == NULL) {
    delete geo_location_;
  }
  geo_location_ = geo_location;
  if (geo_location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.QueryParameters.geo_location)
}
void QueryParameters::clear_geo_location() {
  if (GetArenaNoVirtual() == NULL && geo_location_ != NULL) {
    delete geo_location_;
  }
  geo_location_ = NULL;
}
void QueryParameters::clear_contexts() {
  contexts_.Clear();
}
void QueryParameters::clear_session_entity_types() {
  session_entity_types_.Clear();
}
void QueryParameters::_slow_mutable_payload() {
  payload_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Struct >(
      GetArenaNoVirtual());
}
void QueryParameters::unsafe_arena_set_allocated_payload(
    ::google::protobuf::Struct* payload) {
  if (GetArenaNoVirtual() == NULL) {
    delete payload_;
  }
  payload_ = payload;
  if (payload) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.QueryParameters.payload)
}
void QueryParameters::clear_payload() {
  if (GetArenaNoVirtual() == NULL && payload_ != NULL) {
    delete payload_;
  }
  payload_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryParameters::kTimeZoneFieldNumber;
const int QueryParameters::kGeoLocationFieldNumber;
const int QueryParameters::kContextsFieldNumber;
const int QueryParameters::kResetContextsFieldNumber;
const int QueryParameters::kSessionEntityTypesFieldNumber;
const int QueryParameters::kPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryParameters::QueryParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsQueryParameters();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.QueryParameters)
}
QueryParameters::QueryParameters(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  contexts_(arena),
  session_entity_types_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsQueryParameters();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.QueryParameters)
}
QueryParameters::QueryParameters(const QueryParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contexts_(from.contexts_),
      session_entity_types_(from.session_entity_types_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  time_zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.time_zone().size() > 0) {
    time_zone_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_zone(),
      GetArenaNoVirtual());
  }
  if (from.has_geo_location()) {
    geo_location_ = new ::google::type::LatLng(*from.geo_location_);
  } else {
    geo_location_ = NULL;
  }
  if (from.has_payload()) {
    payload_ = new ::google::protobuf::Struct(*from.payload_);
  } else {
    payload_ = NULL;
  }
  reset_contexts_ = from.reset_contexts_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.QueryParameters)
}

void QueryParameters::SharedCtor() {
  time_zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&geo_location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reset_contexts_) -
      reinterpret_cast<char*>(&geo_location_)) + sizeof(reset_contexts_));
  _cached_size_ = 0;
}

QueryParameters::~QueryParameters() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.QueryParameters)
  SharedDtor();
}

void QueryParameters::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  time_zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete geo_location_;
  if (this != internal_default_instance()) delete payload_;
}

void QueryParameters::ArenaDtor(void* object) {
  QueryParameters* _this = reinterpret_cast< QueryParameters* >(object);
  (void)_this;
}
void QueryParameters::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void QueryParameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryParameters::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryParameters& QueryParameters::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsQueryParameters();
  return *internal_default_instance();
}

QueryParameters* QueryParameters::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<QueryParameters>(arena);
}

void QueryParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.QueryParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contexts_.Clear();
  session_entity_types_.Clear();
  time_zone_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && geo_location_ != NULL) {
    delete geo_location_;
  }
  geo_location_ = NULL;
  if (GetArenaNoVirtual() == NULL && payload_ != NULL) {
    delete payload_;
  }
  payload_ = NULL;
  reset_contexts_ = false;
  _internal_metadata_.Clear();
}

bool QueryParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.QueryParameters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string time_zone = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->time_zone().data(), static_cast<int>(this->time_zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.QueryParameters.time_zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.type.LatLng geo_location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_geo_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.dialogflow.v2beta1.Context contexts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_contexts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool reset_contexts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reset_contexts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.dialogflow.v2beta1.SessionEntityType session_entity_types = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_session_entity_types()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct payload = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.QueryParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.QueryParameters)
  return false;
#undef DO_
}

void QueryParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.QueryParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string time_zone = 1;
  if (this->time_zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time_zone().data(), static_cast<int>(this->time_zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.QueryParameters.time_zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->time_zone(), output);
  }

  // .google.type.LatLng geo_location = 2;
  if (this->has_geo_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->geo_location_, output);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Context contexts = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contexts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->contexts(static_cast<int>(i)), output);
  }

  // bool reset_contexts = 4;
  if (this->reset_contexts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->reset_contexts(), output);
  }

  // repeated .google.cloud.dialogflow.v2beta1.SessionEntityType session_entity_types = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->session_entity_types_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->session_entity_types(static_cast<int>(i)), output);
  }

  // .google.protobuf.Struct payload = 6;
  if (this->has_payload()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->payload_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.QueryParameters)
}

::google::protobuf::uint8* QueryParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.QueryParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string time_zone = 1;
  if (this->time_zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time_zone().data(), static_cast<int>(this->time_zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.QueryParameters.time_zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->time_zone(), target);
  }

  // .google.type.LatLng geo_location = 2;
  if (this->has_geo_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->geo_location_, deterministic, target);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Context contexts = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contexts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->contexts(static_cast<int>(i)), deterministic, target);
  }

  // bool reset_contexts = 4;
  if (this->reset_contexts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->reset_contexts(), target);
  }

  // repeated .google.cloud.dialogflow.v2beta1.SessionEntityType session_entity_types = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->session_entity_types_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->session_entity_types(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.Struct payload = 6;
  if (this->has_payload()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->payload_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.QueryParameters)
  return target;
}

size_t QueryParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.QueryParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.dialogflow.v2beta1.Context contexts = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->contexts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contexts(static_cast<int>(i)));
    }
  }

  // repeated .google.cloud.dialogflow.v2beta1.SessionEntityType session_entity_types = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->session_entity_types_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->session_entity_types(static_cast<int>(i)));
    }
  }

  // string time_zone = 1;
  if (this->time_zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time_zone());
  }

  // .google.type.LatLng geo_location = 2;
  if (this->has_geo_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->geo_location_);
  }

  // .google.protobuf.Struct payload = 6;
  if (this->has_payload()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->payload_);
  }

  // bool reset_contexts = 4;
  if (this->reset_contexts() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.QueryParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.QueryParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.QueryParameters)
    MergeFrom(*source);
  }
}

void QueryParameters::MergeFrom(const QueryParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.QueryParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contexts_.MergeFrom(from.contexts_);
  session_entity_types_.MergeFrom(from.session_entity_types_);
  if (from.time_zone().size() > 0) {
    set_time_zone(from.time_zone());
  }
  if (from.has_geo_location()) {
    mutable_geo_location()->::google::type::LatLng::MergeFrom(from.geo_location());
  }
  if (from.has_payload()) {
    mutable_payload()->::google::protobuf::Struct::MergeFrom(from.payload());
  }
  if (from.reset_contexts() != 0) {
    set_reset_contexts(from.reset_contexts());
  }
}

void QueryParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.QueryParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryParameters::CopyFrom(const QueryParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.QueryParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryParameters::IsInitialized() const {
  return true;
}

void QueryParameters::Swap(QueryParameters* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    QueryParameters* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void QueryParameters::UnsafeArenaSwap(QueryParameters* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void QueryParameters::InternalSwap(QueryParameters* other) {
  using std::swap;
  contexts_.InternalSwap(&other->contexts_);
  session_entity_types_.InternalSwap(&other->session_entity_types_);
  time_zone_.Swap(&other->time_zone_);
  swap(geo_location_, other->geo_location_);
  swap(payload_, other->payload_);
  swap(reset_contexts_, other->reset_contexts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryParameters::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryInput::InitAsDefaultInstance() {
  ::google::cloud::dialogflow::v2beta1::_QueryInput_default_instance_.audio_config_ = const_cast< ::google::cloud::dialogflow::v2beta1::InputAudioConfig*>(
      ::google::cloud::dialogflow::v2beta1::InputAudioConfig::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_QueryInput_default_instance_.text_ = const_cast< ::google::cloud::dialogflow::v2beta1::TextInput*>(
      ::google::cloud::dialogflow::v2beta1::TextInput::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_QueryInput_default_instance_.event_ = const_cast< ::google::cloud::dialogflow::v2beta1::EventInput*>(
      ::google::cloud::dialogflow::v2beta1::EventInput::internal_default_instance());
}
void QueryInput::set_allocated_audio_config(::google::cloud::dialogflow::v2beta1::InputAudioConfig* audio_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_input();
  if (audio_config) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(audio_config);
    if (message_arena != submessage_arena) {
      audio_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, audio_config, submessage_arena);
    }
    set_has_audio_config();
    input_.audio_config_ = audio_config;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.QueryInput.audio_config)
}
void QueryInput::set_allocated_text(::google::cloud::dialogflow::v2beta1::TextInput* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_input();
  if (text) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(text);
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    set_has_text();
    input_.text_ = text;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.QueryInput.text)
}
void QueryInput::set_allocated_event(::google::cloud::dialogflow::v2beta1::EventInput* event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_input();
  if (event) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(event);
    if (message_arena != submessage_arena) {
      event = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event, submessage_arena);
    }
    set_has_event();
    input_.event_ = event;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.QueryInput.event)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryInput::kAudioConfigFieldNumber;
const int QueryInput::kTextFieldNumber;
const int QueryInput::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryInput::QueryInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsQueryInput();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.QueryInput)
}
QueryInput::QueryInput(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsQueryInput();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.QueryInput)
}
QueryInput::QueryInput(const QueryInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_input();
  switch (from.input_case()) {
    case kAudioConfig: {
      mutable_audio_config()->::google::cloud::dialogflow::v2beta1::InputAudioConfig::MergeFrom(from.audio_config());
      break;
    }
    case kText: {
      mutable_text()->::google::cloud::dialogflow::v2beta1::TextInput::MergeFrom(from.text());
      break;
    }
    case kEvent: {
      mutable_event()->::google::cloud::dialogflow::v2beta1::EventInput::MergeFrom(from.event());
      break;
    }
    case INPUT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.QueryInput)
}

void QueryInput::SharedCtor() {
  clear_has_input();
  _cached_size_ = 0;
}

QueryInput::~QueryInput() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.QueryInput)
  SharedDtor();
}

void QueryInput::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_input()) {
    clear_input();
  }
}

void QueryInput::ArenaDtor(void* object) {
  QueryInput* _this = reinterpret_cast< QueryInput* >(object);
  (void)_this;
}
void QueryInput::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void QueryInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryInput::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryInput& QueryInput::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsQueryInput();
  return *internal_default_instance();
}

QueryInput* QueryInput::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<QueryInput>(arena);
}

void QueryInput::clear_input() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.dialogflow.v2beta1.QueryInput)
  switch (input_case()) {
    case kAudioConfig: {
      if (GetArenaNoVirtual() == NULL) {
        delete input_.audio_config_;
      }
      break;
    }
    case kText: {
      if (GetArenaNoVirtual() == NULL) {
        delete input_.text_;
      }
      break;
    }
    case kEvent: {
      if (GetArenaNoVirtual() == NULL) {
        delete input_.event_;
      }
      break;
    }
    case INPUT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = INPUT_NOT_SET;
}


void QueryInput::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.QueryInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_input();
  _internal_metadata_.Clear();
}

bool QueryInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.QueryInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.dialogflow.v2beta1.InputAudioConfig audio_config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_audio_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.TextInput text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.EventInput event = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.QueryInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.QueryInput)
  return false;
#undef DO_
}

void QueryInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.QueryInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dialogflow.v2beta1.InputAudioConfig audio_config = 1;
  if (has_audio_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *input_.audio_config_, output);
  }

  // .google.cloud.dialogflow.v2beta1.TextInput text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *input_.text_, output);
  }

  // .google.cloud.dialogflow.v2beta1.EventInput event = 3;
  if (has_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *input_.event_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.QueryInput)
}

::google::protobuf::uint8* QueryInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.QueryInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dialogflow.v2beta1.InputAudioConfig audio_config = 1;
  if (has_audio_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *input_.audio_config_, deterministic, target);
  }

  // .google.cloud.dialogflow.v2beta1.TextInput text = 2;
  if (has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *input_.text_, deterministic, target);
  }

  // .google.cloud.dialogflow.v2beta1.EventInput event = 3;
  if (has_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *input_.event_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.QueryInput)
  return target;
}

size_t QueryInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.QueryInput)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (input_case()) {
    // .google.cloud.dialogflow.v2beta1.InputAudioConfig audio_config = 1;
    case kAudioConfig: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *input_.audio_config_);
      break;
    }
    // .google.cloud.dialogflow.v2beta1.TextInput text = 2;
    case kText: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *input_.text_);
      break;
    }
    // .google.cloud.dialogflow.v2beta1.EventInput event = 3;
    case kEvent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *input_.event_);
      break;
    }
    case INPUT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.QueryInput)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.QueryInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.QueryInput)
    MergeFrom(*source);
  }
}

void QueryInput::MergeFrom(const QueryInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.QueryInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.input_case()) {
    case kAudioConfig: {
      mutable_audio_config()->::google::cloud::dialogflow::v2beta1::InputAudioConfig::MergeFrom(from.audio_config());
      break;
    }
    case kText: {
      mutable_text()->::google::cloud::dialogflow::v2beta1::TextInput::MergeFrom(from.text());
      break;
    }
    case kEvent: {
      mutable_event()->::google::cloud::dialogflow::v2beta1::EventInput::MergeFrom(from.event());
      break;
    }
    case INPUT_NOT_SET: {
      break;
    }
  }
}

void QueryInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.QueryInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryInput::CopyFrom(const QueryInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.QueryInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryInput::IsInitialized() const {
  return true;
}

void QueryInput::Swap(QueryInput* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    QueryInput* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void QueryInput::UnsafeArenaSwap(QueryInput* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void QueryInput::InternalSwap(QueryInput* other) {
  using std::swap;
  swap(input_, other->input_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryInput::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryResult::InitAsDefaultInstance() {
  ::google::cloud::dialogflow::v2beta1::_QueryResult_default_instance_._instance.get_mutable()->parameters_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_QueryResult_default_instance_._instance.get_mutable()->webhook_payload_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_QueryResult_default_instance_._instance.get_mutable()->intent_ = const_cast< ::google::cloud::dialogflow::v2beta1::Intent*>(
      ::google::cloud::dialogflow::v2beta1::Intent::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_QueryResult_default_instance_._instance.get_mutable()->diagnostic_info_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
}
void QueryResult::_slow_mutable_parameters() {
  parameters_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Struct >(
      GetArenaNoVirtual());
}
void QueryResult::unsafe_arena_set_allocated_parameters(
    ::google::protobuf::Struct* parameters) {
  if (GetArenaNoVirtual() == NULL) {
    delete parameters_;
  }
  parameters_ = parameters;
  if (parameters) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.QueryResult.parameters)
}
void QueryResult::clear_parameters() {
  if (GetArenaNoVirtual() == NULL && parameters_ != NULL) {
    delete parameters_;
  }
  parameters_ = NULL;
}
void QueryResult::clear_fulfillment_messages() {
  fulfillment_messages_.Clear();
}
void QueryResult::_slow_mutable_webhook_payload() {
  webhook_payload_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Struct >(
      GetArenaNoVirtual());
}
void QueryResult::unsafe_arena_set_allocated_webhook_payload(
    ::google::protobuf::Struct* webhook_payload) {
  if (GetArenaNoVirtual() == NULL) {
    delete webhook_payload_;
  }
  webhook_payload_ = webhook_payload;
  if (webhook_payload) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.QueryResult.webhook_payload)
}
void QueryResult::clear_webhook_payload() {
  if (GetArenaNoVirtual() == NULL && webhook_payload_ != NULL) {
    delete webhook_payload_;
  }
  webhook_payload_ = NULL;
}
void QueryResult::clear_output_contexts() {
  output_contexts_.Clear();
}
void QueryResult::_slow_mutable_intent() {
  intent_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::Intent >(
      GetArenaNoVirtual());
}
void QueryResult::unsafe_arena_set_allocated_intent(
    ::google::cloud::dialogflow::v2beta1::Intent* intent) {
  if (GetArenaNoVirtual() == NULL) {
    delete intent_;
  }
  intent_ = intent;
  if (intent) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.QueryResult.intent)
}
void QueryResult::clear_intent() {
  if (GetArenaNoVirtual() == NULL && intent_ != NULL) {
    delete intent_;
  }
  intent_ = NULL;
}
void QueryResult::_slow_mutable_diagnostic_info() {
  diagnostic_info_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Struct >(
      GetArenaNoVirtual());
}
void QueryResult::unsafe_arena_set_allocated_diagnostic_info(
    ::google::protobuf::Struct* diagnostic_info) {
  if (GetArenaNoVirtual() == NULL) {
    delete diagnostic_info_;
  }
  diagnostic_info_ = diagnostic_info;
  if (diagnostic_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.QueryResult.diagnostic_info)
}
void QueryResult::clear_diagnostic_info() {
  if (GetArenaNoVirtual() == NULL && diagnostic_info_ != NULL) {
    delete diagnostic_info_;
  }
  diagnostic_info_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryResult::kQueryTextFieldNumber;
const int QueryResult::kLanguageCodeFieldNumber;
const int QueryResult::kSpeechRecognitionConfidenceFieldNumber;
const int QueryResult::kActionFieldNumber;
const int QueryResult::kParametersFieldNumber;
const int QueryResult::kAllRequiredParamsPresentFieldNumber;
const int QueryResult::kFulfillmentTextFieldNumber;
const int QueryResult::kFulfillmentMessagesFieldNumber;
const int QueryResult::kWebhookSourceFieldNumber;
const int QueryResult::kWebhookPayloadFieldNumber;
const int QueryResult::kOutputContextsFieldNumber;
const int QueryResult::kIntentFieldNumber;
const int QueryResult::kIntentDetectionConfidenceFieldNumber;
const int QueryResult::kDiagnosticInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryResult::QueryResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsQueryResult();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.QueryResult)
}
QueryResult::QueryResult(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  fulfillment_messages_(arena),
  output_contexts_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsQueryResult();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.QueryResult)
}
QueryResult::QueryResult(const QueryResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fulfillment_messages_(from.fulfillment_messages_),
      output_contexts_(from.output_contexts_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query_text().size() > 0) {
    query_text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_text(),
      GetArenaNoVirtual());
  }
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.action().size() > 0) {
    action_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action(),
      GetArenaNoVirtual());
  }
  fulfillment_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fulfillment_text().size() > 0) {
    fulfillment_text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fulfillment_text(),
      GetArenaNoVirtual());
  }
  webhook_source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.webhook_source().size() > 0) {
    webhook_source_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.webhook_source(),
      GetArenaNoVirtual());
  }
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.language_code().size() > 0) {
    language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_code(),
      GetArenaNoVirtual());
  }
  if (from.has_parameters()) {
    parameters_ = new ::google::protobuf::Struct(*from.parameters_);
  } else {
    parameters_ = NULL;
  }
  if (from.has_webhook_payload()) {
    webhook_payload_ = new ::google::protobuf::Struct(*from.webhook_payload_);
  } else {
    webhook_payload_ = NULL;
  }
  if (from.has_intent()) {
    intent_ = new ::google::cloud::dialogflow::v2beta1::Intent(*from.intent_);
  } else {
    intent_ = NULL;
  }
  if (from.has_diagnostic_info()) {
    diagnostic_info_ = new ::google::protobuf::Struct(*from.diagnostic_info_);
  } else {
    diagnostic_info_ = NULL;
  }
  ::memcpy(&speech_recognition_confidence_, &from.speech_recognition_confidence_,
    static_cast<size_t>(reinterpret_cast<char*>(&intent_detection_confidence_) -
    reinterpret_cast<char*>(&speech_recognition_confidence_)) + sizeof(intent_detection_confidence_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.QueryResult)
}

void QueryResult::SharedCtor() {
  query_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fulfillment_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  webhook_source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&parameters_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&intent_detection_confidence_) -
      reinterpret_cast<char*>(&parameters_)) + sizeof(intent_detection_confidence_));
  _cached_size_ = 0;
}

QueryResult::~QueryResult() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.QueryResult)
  SharedDtor();
}

void QueryResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  query_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fulfillment_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  webhook_source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete parameters_;
  if (this != internal_default_instance()) delete webhook_payload_;
  if (this != internal_default_instance()) delete intent_;
  if (this != internal_default_instance()) delete diagnostic_info_;
}

void QueryResult::ArenaDtor(void* object) {
  QueryResult* _this = reinterpret_cast< QueryResult* >(object);
  (void)_this;
}
void QueryResult::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void QueryResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryResult::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryResult& QueryResult::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsQueryResult();
  return *internal_default_instance();
}

QueryResult* QueryResult::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<QueryResult>(arena);
}

void QueryResult::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.QueryResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fulfillment_messages_.Clear();
  output_contexts_.Clear();
  query_text_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  action_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  fulfillment_text_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  webhook_source_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  language_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && parameters_ != NULL) {
    delete parameters_;
  }
  parameters_ = NULL;
  if (GetArenaNoVirtual() == NULL && webhook_payload_ != NULL) {
    delete webhook_payload_;
  }
  webhook_payload_ = NULL;
  if (GetArenaNoVirtual() == NULL && intent_ != NULL) {
    delete intent_;
  }
  intent_ = NULL;
  if (GetArenaNoVirtual() == NULL && diagnostic_info_ != NULL) {
    delete diagnostic_info_;
  }
  diagnostic_info_ = NULL;
  ::memset(&speech_recognition_confidence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&intent_detection_confidence_) -
      reinterpret_cast<char*>(&speech_recognition_confidence_)) + sizeof(intent_detection_confidence_));
  _internal_metadata_.Clear();
}

bool QueryResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.QueryResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query_text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query_text().data(), static_cast<int>(this->query_text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.QueryResult.query_text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float speech_recognition_confidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speech_recognition_confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string action = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_action()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->action().data(), static_cast<int>(this->action().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.QueryResult.action"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct parameters = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool all_required_params_present = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &all_required_params_present_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fulfillment_text = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fulfillment_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fulfillment_text().data(), static_cast<int>(this->fulfillment_text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.QueryResult.fulfillment_text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.dialogflow.v2beta1.Intent.Message fulfillment_messages = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_fulfillment_messages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string webhook_source = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_webhook_source()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->webhook_source().data(), static_cast<int>(this->webhook_source().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.QueryResult.webhook_source"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct webhook_payload = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_webhook_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.dialogflow.v2beta1.Context output_contexts = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_output_contexts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.Intent intent = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_intent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float intent_detection_confidence = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &intent_detection_confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct diagnostic_info = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_diagnostic_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string language_code = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language_code().data(), static_cast<int>(this->language_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.QueryResult.language_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.QueryResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.QueryResult)
  return false;
#undef DO_
}

void QueryResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.QueryResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query_text = 1;
  if (this->query_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query_text().data(), static_cast<int>(this->query_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.QueryResult.query_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query_text(), output);
  }

  // float speech_recognition_confidence = 2;
  if (this->speech_recognition_confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->speech_recognition_confidence(), output);
  }

  // string action = 3;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), static_cast<int>(this->action().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.QueryResult.action");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->action(), output);
  }

  // .google.protobuf.Struct parameters = 4;
  if (this->has_parameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->parameters_, output);
  }

  // bool all_required_params_present = 5;
  if (this->all_required_params_present() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->all_required_params_present(), output);
  }

  // string fulfillment_text = 6;
  if (this->fulfillment_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fulfillment_text().data(), static_cast<int>(this->fulfillment_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.QueryResult.fulfillment_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->fulfillment_text(), output);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message fulfillment_messages = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fulfillment_messages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->fulfillment_messages(static_cast<int>(i)), output);
  }

  // string webhook_source = 8;
  if (this->webhook_source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->webhook_source().data(), static_cast<int>(this->webhook_source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.QueryResult.webhook_source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->webhook_source(), output);
  }

  // .google.protobuf.Struct webhook_payload = 9;
  if (this->has_webhook_payload()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->webhook_payload_, output);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Context output_contexts = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_contexts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->output_contexts(static_cast<int>(i)), output);
  }

  // .google.cloud.dialogflow.v2beta1.Intent intent = 11;
  if (this->has_intent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->intent_, output);
  }

  // float intent_detection_confidence = 12;
  if (this->intent_detection_confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->intent_detection_confidence(), output);
  }

  // .google.protobuf.Struct diagnostic_info = 14;
  if (this->has_diagnostic_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->diagnostic_info_, output);
  }

  // string language_code = 15;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.QueryResult.language_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->language_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.QueryResult)
}

::google::protobuf::uint8* QueryResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.QueryResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query_text = 1;
  if (this->query_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query_text().data(), static_cast<int>(this->query_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.QueryResult.query_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query_text(), target);
  }

  // float speech_recognition_confidence = 2;
  if (this->speech_recognition_confidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->speech_recognition_confidence(), target);
  }

  // string action = 3;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), static_cast<int>(this->action().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.QueryResult.action");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->action(), target);
  }

  // .google.protobuf.Struct parameters = 4;
  if (this->has_parameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->parameters_, deterministic, target);
  }

  // bool all_required_params_present = 5;
  if (this->all_required_params_present() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->all_required_params_present(), target);
  }

  // string fulfillment_text = 6;
  if (this->fulfillment_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fulfillment_text().data(), static_cast<int>(this->fulfillment_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.QueryResult.fulfillment_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->fulfillment_text(), target);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message fulfillment_messages = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fulfillment_messages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->fulfillment_messages(static_cast<int>(i)), deterministic, target);
  }

  // string webhook_source = 8;
  if (this->webhook_source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->webhook_source().data(), static_cast<int>(this->webhook_source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.QueryResult.webhook_source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->webhook_source(), target);
  }

  // .google.protobuf.Struct webhook_payload = 9;
  if (this->has_webhook_payload()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->webhook_payload_, deterministic, target);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Context output_contexts = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_contexts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->output_contexts(static_cast<int>(i)), deterministic, target);
  }

  // .google.cloud.dialogflow.v2beta1.Intent intent = 11;
  if (this->has_intent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, *this->intent_, deterministic, target);
  }

  // float intent_detection_confidence = 12;
  if (this->intent_detection_confidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->intent_detection_confidence(), target);
  }

  // .google.protobuf.Struct diagnostic_info = 14;
  if (this->has_diagnostic_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, *this->diagnostic_info_, deterministic, target);
  }

  // string language_code = 15;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.QueryResult.language_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->language_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.QueryResult)
  return target;
}

size_t QueryResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.QueryResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message fulfillment_messages = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->fulfillment_messages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fulfillment_messages(static_cast<int>(i)));
    }
  }

  // repeated .google.cloud.dialogflow.v2beta1.Context output_contexts = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->output_contexts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->output_contexts(static_cast<int>(i)));
    }
  }

  // string query_text = 1;
  if (this->query_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query_text());
  }

  // string action = 3;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->action());
  }

  // string fulfillment_text = 6;
  if (this->fulfillment_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fulfillment_text());
  }

  // string webhook_source = 8;
  if (this->webhook_source().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->webhook_source());
  }

  // string language_code = 15;
  if (this->language_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language_code());
  }

  // .google.protobuf.Struct parameters = 4;
  if (this->has_parameters()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->parameters_);
  }

  // .google.protobuf.Struct webhook_payload = 9;
  if (this->has_webhook_payload()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->webhook_payload_);
  }

  // .google.cloud.dialogflow.v2beta1.Intent intent = 11;
  if (this->has_intent()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->intent_);
  }

  // .google.protobuf.Struct diagnostic_info = 14;
  if (this->has_diagnostic_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->diagnostic_info_);
  }

  // float speech_recognition_confidence = 2;
  if (this->speech_recognition_confidence() != 0) {
    total_size += 1 + 4;
  }

  // bool all_required_params_present = 5;
  if (this->all_required_params_present() != 0) {
    total_size += 1 + 1;
  }

  // float intent_detection_confidence = 12;
  if (this->intent_detection_confidence() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.QueryResult)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.QueryResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.QueryResult)
    MergeFrom(*source);
  }
}

void QueryResult::MergeFrom(const QueryResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.QueryResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fulfillment_messages_.MergeFrom(from.fulfillment_messages_);
  output_contexts_.MergeFrom(from.output_contexts_);
  if (from.query_text().size() > 0) {
    set_query_text(from.query_text());
  }
  if (from.action().size() > 0) {
    set_action(from.action());
  }
  if (from.fulfillment_text().size() > 0) {
    set_fulfillment_text(from.fulfillment_text());
  }
  if (from.webhook_source().size() > 0) {
    set_webhook_source(from.webhook_source());
  }
  if (from.language_code().size() > 0) {
    set_language_code(from.language_code());
  }
  if (from.has_parameters()) {
    mutable_parameters()->::google::protobuf::Struct::MergeFrom(from.parameters());
  }
  if (from.has_webhook_payload()) {
    mutable_webhook_payload()->::google::protobuf::Struct::MergeFrom(from.webhook_payload());
  }
  if (from.has_intent()) {
    mutable_intent()->::google::cloud::dialogflow::v2beta1::Intent::MergeFrom(from.intent());
  }
  if (from.has_diagnostic_info()) {
    mutable_diagnostic_info()->::google::protobuf::Struct::MergeFrom(from.diagnostic_info());
  }
  if (from.speech_recognition_confidence() != 0) {
    set_speech_recognition_confidence(from.speech_recognition_confidence());
  }
  if (from.all_required_params_present() != 0) {
    set_all_required_params_present(from.all_required_params_present());
  }
  if (from.intent_detection_confidence() != 0) {
    set_intent_detection_confidence(from.intent_detection_confidence());
  }
}

void QueryResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.QueryResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryResult::CopyFrom(const QueryResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.QueryResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryResult::IsInitialized() const {
  return true;
}

void QueryResult::Swap(QueryResult* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    QueryResult* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void QueryResult::UnsafeArenaSwap(QueryResult* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void QueryResult::InternalSwap(QueryResult* other) {
  using std::swap;
  fulfillment_messages_.InternalSwap(&other->fulfillment_messages_);
  output_contexts_.InternalSwap(&other->output_contexts_);
  query_text_.Swap(&other->query_text_);
  action_.Swap(&other->action_);
  fulfillment_text_.Swap(&other->fulfillment_text_);
  webhook_source_.Swap(&other->webhook_source_);
  language_code_.Swap(&other->language_code_);
  swap(parameters_, other->parameters_);
  swap(webhook_payload_, other->webhook_payload_);
  swap(intent_, other->intent_);
  swap(diagnostic_info_, other->diagnostic_info_);
  swap(speech_recognition_confidence_, other->speech_recognition_confidence_);
  swap(all_required_params_present_, other->all_required_params_present_);
  swap(intent_detection_confidence_, other->intent_detection_confidence_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryResult::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StreamingDetectIntentRequest::InitAsDefaultInstance() {
  ::google::cloud::dialogflow::v2beta1::_StreamingDetectIntentRequest_default_instance_._instance.get_mutable()->query_params_ = const_cast< ::google::cloud::dialogflow::v2beta1::QueryParameters*>(
      ::google::cloud::dialogflow::v2beta1::QueryParameters::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_StreamingDetectIntentRequest_default_instance_._instance.get_mutable()->query_input_ = const_cast< ::google::cloud::dialogflow::v2beta1::QueryInput*>(
      ::google::cloud::dialogflow::v2beta1::QueryInput::internal_default_instance());
}
void StreamingDetectIntentRequest::_slow_mutable_query_params() {
  query_params_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::QueryParameters >(
      GetArenaNoVirtual());
}
void StreamingDetectIntentRequest::unsafe_arena_set_allocated_query_params(
    ::google::cloud::dialogflow::v2beta1::QueryParameters* query_params) {
  if (GetArenaNoVirtual() == NULL) {
    delete query_params_;
  }
  query_params_ = query_params;
  if (query_params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.query_params)
}
void StreamingDetectIntentRequest::_slow_mutable_query_input() {
  query_input_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::QueryInput >(
      GetArenaNoVirtual());
}
void StreamingDetectIntentRequest::unsafe_arena_set_allocated_query_input(
    ::google::cloud::dialogflow::v2beta1::QueryInput* query_input) {
  if (GetArenaNoVirtual() == NULL) {
    delete query_input_;
  }
  query_input_ = query_input;
  if (query_input) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.query_input)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StreamingDetectIntentRequest::kSessionFieldNumber;
const int StreamingDetectIntentRequest::kQueryParamsFieldNumber;
const int StreamingDetectIntentRequest::kQueryInputFieldNumber;
const int StreamingDetectIntentRequest::kSingleUtteranceFieldNumber;
const int StreamingDetectIntentRequest::kInputAudioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamingDetectIntentRequest::StreamingDetectIntentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsStreamingDetectIntentRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest)
}
StreamingDetectIntentRequest::StreamingDetectIntentRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsStreamingDetectIntentRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest)
}
StreamingDetectIntentRequest::StreamingDetectIntentRequest(const StreamingDetectIntentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session().size() > 0) {
    session_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session(),
      GetArenaNoVirtual());
  }
  input_audio_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.input_audio().size() > 0) {
    input_audio_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_audio(),
      GetArenaNoVirtual());
  }
  if (from.has_query_params()) {
    query_params_ = new ::google::cloud::dialogflow::v2beta1::QueryParameters(*from.query_params_);
  } else {
    query_params_ = NULL;
  }
  if (from.has_query_input()) {
    query_input_ = new ::google::cloud::dialogflow::v2beta1::QueryInput(*from.query_input_);
  } else {
    query_input_ = NULL;
  }
  single_utterance_ = from.single_utterance_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest)
}

void StreamingDetectIntentRequest::SharedCtor() {
  session_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_audio_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&query_params_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&single_utterance_) -
      reinterpret_cast<char*>(&query_params_)) + sizeof(single_utterance_));
  _cached_size_ = 0;
}

StreamingDetectIntentRequest::~StreamingDetectIntentRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest)
  SharedDtor();
}

void StreamingDetectIntentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  session_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_audio_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete query_params_;
  if (this != internal_default_instance()) delete query_input_;
}

void StreamingDetectIntentRequest::ArenaDtor(void* object) {
  StreamingDetectIntentRequest* _this = reinterpret_cast< StreamingDetectIntentRequest* >(object);
  (void)_this;
}
void StreamingDetectIntentRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void StreamingDetectIntentRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StreamingDetectIntentRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StreamingDetectIntentRequest& StreamingDetectIntentRequest::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsStreamingDetectIntentRequest();
  return *internal_default_instance();
}

StreamingDetectIntentRequest* StreamingDetectIntentRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<StreamingDetectIntentRequest>(arena);
}

void StreamingDetectIntentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  session_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  input_audio_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && query_params_ != NULL) {
    delete query_params_;
  }
  query_params_ = NULL;
  if (GetArenaNoVirtual() == NULL && query_input_ != NULL) {
    delete query_input_;
  }
  query_input_ = NULL;
  single_utterance_ = false;
  _internal_metadata_.Clear();
}

bool StreamingDetectIntentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string session = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session().data(), static_cast<int>(this->session().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.session"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.QueryParameters query_params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_query_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.QueryInput query_input = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_query_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool single_utterance = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &single_utterance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes input_audio = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_input_audio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest)
  return false;
#undef DO_
}

void StreamingDetectIntentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session = 1;
  if (this->session().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session().data(), static_cast<int>(this->session().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.session");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->session(), output);
  }

  // .google.cloud.dialogflow.v2beta1.QueryParameters query_params = 2;
  if (this->has_query_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->query_params_, output);
  }

  // .google.cloud.dialogflow.v2beta1.QueryInput query_input = 3;
  if (this->has_query_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->query_input_, output);
  }

  // bool single_utterance = 4;
  if (this->single_utterance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->single_utterance(), output);
  }

  // bytes input_audio = 6;
  if (this->input_audio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->input_audio(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest)
}

::google::protobuf::uint8* StreamingDetectIntentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session = 1;
  if (this->session().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session().data(), static_cast<int>(this->session().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.session");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->session(), target);
  }

  // .google.cloud.dialogflow.v2beta1.QueryParameters query_params = 2;
  if (this->has_query_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->query_params_, deterministic, target);
  }

  // .google.cloud.dialogflow.v2beta1.QueryInput query_input = 3;
  if (this->has_query_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->query_input_, deterministic, target);
  }

  // bool single_utterance = 4;
  if (this->single_utterance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->single_utterance(), target);
  }

  // bytes input_audio = 6;
  if (this->input_audio().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->input_audio(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest)
  return target;
}

size_t StreamingDetectIntentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string session = 1;
  if (this->session().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session());
  }

  // bytes input_audio = 6;
  if (this->input_audio().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->input_audio());
  }

  // .google.cloud.dialogflow.v2beta1.QueryParameters query_params = 2;
  if (this->has_query_params()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->query_params_);
  }

  // .google.cloud.dialogflow.v2beta1.QueryInput query_input = 3;
  if (this->has_query_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->query_input_);
  }

  // bool single_utterance = 4;
  if (this->single_utterance() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StreamingDetectIntentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamingDetectIntentRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StreamingDetectIntentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest)
    MergeFrom(*source);
  }
}

void StreamingDetectIntentRequest::MergeFrom(const StreamingDetectIntentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.session().size() > 0) {
    set_session(from.session());
  }
  if (from.input_audio().size() > 0) {
    set_input_audio(from.input_audio());
  }
  if (from.has_query_params()) {
    mutable_query_params()->::google::cloud::dialogflow::v2beta1::QueryParameters::MergeFrom(from.query_params());
  }
  if (from.has_query_input()) {
    mutable_query_input()->::google::cloud::dialogflow::v2beta1::QueryInput::MergeFrom(from.query_input());
  }
  if (from.single_utterance() != 0) {
    set_single_utterance(from.single_utterance());
  }
}

void StreamingDetectIntentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamingDetectIntentRequest::CopyFrom(const StreamingDetectIntentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamingDetectIntentRequest::IsInitialized() const {
  return true;
}

void StreamingDetectIntentRequest::Swap(StreamingDetectIntentRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    StreamingDetectIntentRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void StreamingDetectIntentRequest::UnsafeArenaSwap(StreamingDetectIntentRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void StreamingDetectIntentRequest::InternalSwap(StreamingDetectIntentRequest* other) {
  using std::swap;
  session_.Swap(&other->session_);
  input_audio_.Swap(&other->input_audio_);
  swap(query_params_, other->query_params_);
  swap(query_input_, other->query_input_);
  swap(single_utterance_, other->single_utterance_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StreamingDetectIntentRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StreamingDetectIntentResponse::InitAsDefaultInstance() {
  ::google::cloud::dialogflow::v2beta1::_StreamingDetectIntentResponse_default_instance_._instance.get_mutable()->recognition_result_ = const_cast< ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult*>(
      ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_StreamingDetectIntentResponse_default_instance_._instance.get_mutable()->query_result_ = const_cast< ::google::cloud::dialogflow::v2beta1::QueryResult*>(
      ::google::cloud::dialogflow::v2beta1::QueryResult::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_StreamingDetectIntentResponse_default_instance_._instance.get_mutable()->webhook_status_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
}
void StreamingDetectIntentResponse::_slow_mutable_recognition_result() {
  recognition_result_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult >(
      GetArenaNoVirtual());
}
void StreamingDetectIntentResponse::unsafe_arena_set_allocated_recognition_result(
    ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult* recognition_result) {
  if (GetArenaNoVirtual() == NULL) {
    delete recognition_result_;
  }
  recognition_result_ = recognition_result;
  if (recognition_result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.recognition_result)
}
void StreamingDetectIntentResponse::_slow_mutable_query_result() {
  query_result_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::QueryResult >(
      GetArenaNoVirtual());
}
void StreamingDetectIntentResponse::unsafe_arena_set_allocated_query_result(
    ::google::cloud::dialogflow::v2beta1::QueryResult* query_result) {
  if (GetArenaNoVirtual() == NULL) {
    delete query_result_;
  }
  query_result_ = query_result;
  if (query_result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.query_result)
}
void StreamingDetectIntentResponse::_slow_mutable_webhook_status() {
  webhook_status_ = ::google::protobuf::Arena::Create< ::google::rpc::Status >(
      GetArenaNoVirtual());
}
void StreamingDetectIntentResponse::unsafe_arena_set_allocated_webhook_status(
    ::google::rpc::Status* webhook_status) {
  if (GetArenaNoVirtual() == NULL) {
    delete webhook_status_;
  }
  webhook_status_ = webhook_status;
  if (webhook_status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.webhook_status)
}
void StreamingDetectIntentResponse::clear_webhook_status() {
  if (GetArenaNoVirtual() == NULL && webhook_status_ != NULL) {
    delete webhook_status_;
  }
  webhook_status_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StreamingDetectIntentResponse::kResponseIdFieldNumber;
const int StreamingDetectIntentResponse::kRecognitionResultFieldNumber;
const int StreamingDetectIntentResponse::kQueryResultFieldNumber;
const int StreamingDetectIntentResponse::kWebhookStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamingDetectIntentResponse::StreamingDetectIntentResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsStreamingDetectIntentResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse)
}
StreamingDetectIntentResponse::StreamingDetectIntentResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsStreamingDetectIntentResponse();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse)
}
StreamingDetectIntentResponse::StreamingDetectIntentResponse(const StreamingDetectIntentResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  response_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.response_id().size() > 0) {
    response_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_id(),
      GetArenaNoVirtual());
  }
  if (from.has_recognition_result()) {
    recognition_result_ = new ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult(*from.recognition_result_);
  } else {
    recognition_result_ = NULL;
  }
  if (from.has_query_result()) {
    query_result_ = new ::google::cloud::dialogflow::v2beta1::QueryResult(*from.query_result_);
  } else {
    query_result_ = NULL;
  }
  if (from.has_webhook_status()) {
    webhook_status_ = new ::google::rpc::Status(*from.webhook_status_);
  } else {
    webhook_status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse)
}

void StreamingDetectIntentResponse::SharedCtor() {
  response_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&recognition_result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&webhook_status_) -
      reinterpret_cast<char*>(&recognition_result_)) + sizeof(webhook_status_));
  _cached_size_ = 0;
}

StreamingDetectIntentResponse::~StreamingDetectIntentResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse)
  SharedDtor();
}

void StreamingDetectIntentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  response_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete recognition_result_;
  if (this != internal_default_instance()) delete query_result_;
  if (this != internal_default_instance()) delete webhook_status_;
}

void StreamingDetectIntentResponse::ArenaDtor(void* object) {
  StreamingDetectIntentResponse* _this = reinterpret_cast< StreamingDetectIntentResponse* >(object);
  (void)_this;
}
void StreamingDetectIntentResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void StreamingDetectIntentResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StreamingDetectIntentResponse::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StreamingDetectIntentResponse& StreamingDetectIntentResponse::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsStreamingDetectIntentResponse();
  return *internal_default_instance();
}

StreamingDetectIntentResponse* StreamingDetectIntentResponse::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<StreamingDetectIntentResponse>(arena);
}

void StreamingDetectIntentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  response_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && recognition_result_ != NULL) {
    delete recognition_result_;
  }
  recognition_result_ = NULL;
  if (GetArenaNoVirtual() == NULL && query_result_ != NULL) {
    delete query_result_;
  }
  query_result_ = NULL;
  if (GetArenaNoVirtual() == NULL && webhook_status_ != NULL) {
    delete webhook_status_;
  }
  webhook_status_ = NULL;
  _internal_metadata_.Clear();
}

bool StreamingDetectIntentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string response_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response_id().data(), static_cast<int>(this->response_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.response_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.StreamingRecognitionResult recognition_result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_recognition_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.QueryResult query_result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_query_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.rpc.Status webhook_status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_webhook_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse)
  return false;
#undef DO_
}

void StreamingDetectIntentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string response_id = 1;
  if (this->response_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_id().data(), static_cast<int>(this->response_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.response_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->response_id(), output);
  }

  // .google.cloud.dialogflow.v2beta1.StreamingRecognitionResult recognition_result = 2;
  if (this->has_recognition_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->recognition_result_, output);
  }

  // .google.cloud.dialogflow.v2beta1.QueryResult query_result = 3;
  if (this->has_query_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->query_result_, output);
  }

  // .google.rpc.Status webhook_status = 4;
  if (this->has_webhook_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->webhook_status_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse)
}

::google::protobuf::uint8* StreamingDetectIntentResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string response_id = 1;
  if (this->response_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_id().data(), static_cast<int>(this->response_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.response_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->response_id(), target);
  }

  // .google.cloud.dialogflow.v2beta1.StreamingRecognitionResult recognition_result = 2;
  if (this->has_recognition_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->recognition_result_, deterministic, target);
  }

  // .google.cloud.dialogflow.v2beta1.QueryResult query_result = 3;
  if (this->has_query_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->query_result_, deterministic, target);
  }

  // .google.rpc.Status webhook_status = 4;
  if (this->has_webhook_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->webhook_status_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse)
  return target;
}

size_t StreamingDetectIntentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string response_id = 1;
  if (this->response_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response_id());
  }

  // .google.cloud.dialogflow.v2beta1.StreamingRecognitionResult recognition_result = 2;
  if (this->has_recognition_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->recognition_result_);
  }

  // .google.cloud.dialogflow.v2beta1.QueryResult query_result = 3;
  if (this->has_query_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->query_result_);
  }

  // .google.rpc.Status webhook_status = 4;
  if (this->has_webhook_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->webhook_status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StreamingDetectIntentResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamingDetectIntentResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StreamingDetectIntentResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse)
    MergeFrom(*source);
  }
}

void StreamingDetectIntentResponse::MergeFrom(const StreamingDetectIntentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.response_id().size() > 0) {
    set_response_id(from.response_id());
  }
  if (from.has_recognition_result()) {
    mutable_recognition_result()->::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult::MergeFrom(from.recognition_result());
  }
  if (from.has_query_result()) {
    mutable_query_result()->::google::cloud::dialogflow::v2beta1::QueryResult::MergeFrom(from.query_result());
  }
  if (from.has_webhook_status()) {
    mutable_webhook_status()->::google::rpc::Status::MergeFrom(from.webhook_status());
  }
}

void StreamingDetectIntentResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamingDetectIntentResponse::CopyFrom(const StreamingDetectIntentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamingDetectIntentResponse::IsInitialized() const {
  return true;
}

void StreamingDetectIntentResponse::Swap(StreamingDetectIntentResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    StreamingDetectIntentResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void StreamingDetectIntentResponse::UnsafeArenaSwap(StreamingDetectIntentResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void StreamingDetectIntentResponse::InternalSwap(StreamingDetectIntentResponse* other) {
  using std::swap;
  response_id_.Swap(&other->response_id_);
  swap(recognition_result_, other->recognition_result_);
  swap(query_result_, other->query_result_);
  swap(webhook_status_, other->webhook_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StreamingDetectIntentResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StreamingRecognitionResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StreamingRecognitionResult::kMessageTypeFieldNumber;
const int StreamingRecognitionResult::kTranscriptFieldNumber;
const int StreamingRecognitionResult::kIsFinalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamingRecognitionResult::StreamingRecognitionResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsStreamingRecognitionResult();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult)
}
StreamingRecognitionResult::StreamingRecognitionResult(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsStreamingRecognitionResult();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult)
}
StreamingRecognitionResult::StreamingRecognitionResult(const StreamingRecognitionResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  transcript_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.transcript().size() > 0) {
    transcript_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transcript(),
      GetArenaNoVirtual());
  }
  ::memcpy(&message_type_, &from.message_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_final_) -
    reinterpret_cast<char*>(&message_type_)) + sizeof(is_final_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult)
}

void StreamingRecognitionResult::SharedCtor() {
  transcript_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&message_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_final_) -
      reinterpret_cast<char*>(&message_type_)) + sizeof(is_final_));
  _cached_size_ = 0;
}

StreamingRecognitionResult::~StreamingRecognitionResult() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult)
  SharedDtor();
}

void StreamingRecognitionResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  transcript_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StreamingRecognitionResult::ArenaDtor(void* object) {
  StreamingRecognitionResult* _this = reinterpret_cast< StreamingRecognitionResult* >(object);
  (void)_this;
}
void StreamingRecognitionResult::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void StreamingRecognitionResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StreamingRecognitionResult::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StreamingRecognitionResult& StreamingRecognitionResult::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsStreamingRecognitionResult();
  return *internal_default_instance();
}

StreamingRecognitionResult* StreamingRecognitionResult::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<StreamingRecognitionResult>(arena);
}

void StreamingRecognitionResult::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transcript_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&message_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_final_) -
      reinterpret_cast<char*>(&message_type_)) + sizeof(is_final_));
  _internal_metadata_.Clear();
}

bool StreamingRecognitionResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.dialogflow.v2beta1.StreamingRecognitionResult.MessageType message_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_message_type(static_cast< ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult_MessageType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string transcript = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transcript()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->transcript().data(), static_cast<int>(this->transcript().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.StreamingRecognitionResult.transcript"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_final = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_final_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult)
  return false;
#undef DO_
}

void StreamingRecognitionResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dialogflow.v2beta1.StreamingRecognitionResult.MessageType message_type = 1;
  if (this->message_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->message_type(), output);
  }

  // string transcript = 2;
  if (this->transcript().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transcript().data(), static_cast<int>(this->transcript().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.StreamingRecognitionResult.transcript");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->transcript(), output);
  }

  // bool is_final = 3;
  if (this->is_final() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_final(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult)
}

::google::protobuf::uint8* StreamingRecognitionResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dialogflow.v2beta1.StreamingRecognitionResult.MessageType message_type = 1;
  if (this->message_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->message_type(), target);
  }

  // string transcript = 2;
  if (this->transcript().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transcript().data(), static_cast<int>(this->transcript().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.StreamingRecognitionResult.transcript");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->transcript(), target);
  }

  // bool is_final = 3;
  if (this->is_final() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_final(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult)
  return target;
}

size_t StreamingRecognitionResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string transcript = 2;
  if (this->transcript().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->transcript());
  }

  // .google.cloud.dialogflow.v2beta1.StreamingRecognitionResult.MessageType message_type = 1;
  if (this->message_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->message_type());
  }

  // bool is_final = 3;
  if (this->is_final() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StreamingRecognitionResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamingRecognitionResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StreamingRecognitionResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult)
    MergeFrom(*source);
  }
}

void StreamingRecognitionResult::MergeFrom(const StreamingRecognitionResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.transcript().size() > 0) {
    set_transcript(from.transcript());
  }
  if (from.message_type() != 0) {
    set_message_type(from.message_type());
  }
  if (from.is_final() != 0) {
    set_is_final(from.is_final());
  }
}

void StreamingRecognitionResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamingRecognitionResult::CopyFrom(const StreamingRecognitionResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamingRecognitionResult::IsInitialized() const {
  return true;
}

void StreamingRecognitionResult::Swap(StreamingRecognitionResult* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    StreamingRecognitionResult* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void StreamingRecognitionResult::UnsafeArenaSwap(StreamingRecognitionResult* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void StreamingRecognitionResult::InternalSwap(StreamingRecognitionResult* other) {
  using std::swap;
  transcript_.Swap(&other->transcript_);
  swap(message_type_, other->message_type_);
  swap(is_final_, other->is_final_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StreamingRecognitionResult::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InputAudioConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputAudioConfig::kAudioEncodingFieldNumber;
const int InputAudioConfig::kSampleRateHertzFieldNumber;
const int InputAudioConfig::kLanguageCodeFieldNumber;
const int InputAudioConfig::kPhraseHintsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputAudioConfig::InputAudioConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsInputAudioConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.InputAudioConfig)
}
InputAudioConfig::InputAudioConfig(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  phrase_hints_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsInputAudioConfig();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.InputAudioConfig)
}
InputAudioConfig::InputAudioConfig(const InputAudioConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      phrase_hints_(from.phrase_hints_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.language_code().size() > 0) {
    language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_code(),
      GetArenaNoVirtual());
  }
  ::memcpy(&audio_encoding_, &from.audio_encoding_,
    static_cast<size_t>(reinterpret_cast<char*>(&sample_rate_hertz_) -
    reinterpret_cast<char*>(&audio_encoding_)) + sizeof(sample_rate_hertz_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.InputAudioConfig)
}

void InputAudioConfig::SharedCtor() {
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&audio_encoding_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sample_rate_hertz_) -
      reinterpret_cast<char*>(&audio_encoding_)) + sizeof(sample_rate_hertz_));
  _cached_size_ = 0;
}

InputAudioConfig::~InputAudioConfig() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.InputAudioConfig)
  SharedDtor();
}

void InputAudioConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  language_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InputAudioConfig::ArenaDtor(void* object) {
  InputAudioConfig* _this = reinterpret_cast< InputAudioConfig* >(object);
  (void)_this;
}
void InputAudioConfig::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void InputAudioConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InputAudioConfig::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InputAudioConfig& InputAudioConfig::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsInputAudioConfig();
  return *internal_default_instance();
}

InputAudioConfig* InputAudioConfig::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<InputAudioConfig>(arena);
}

void InputAudioConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.InputAudioConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  phrase_hints_.Clear();
  language_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&audio_encoding_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sample_rate_hertz_) -
      reinterpret_cast<char*>(&audio_encoding_)) + sizeof(sample_rate_hertz_));
  _internal_metadata_.Clear();
}

bool InputAudioConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.InputAudioConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.dialogflow.v2beta1.AudioEncoding audio_encoding = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_audio_encoding(static_cast< ::google::cloud::dialogflow::v2beta1::AudioEncoding >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sample_rate_hertz = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sample_rate_hertz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string language_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language_code().data(), static_cast<int>(this->language_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.InputAudioConfig.language_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string phrase_hints = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_phrase_hints()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phrase_hints(this->phrase_hints_size() - 1).data(),
            static_cast<int>(this->phrase_hints(this->phrase_hints_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.InputAudioConfig.phrase_hints"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.InputAudioConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.InputAudioConfig)
  return false;
#undef DO_
}

void InputAudioConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.InputAudioConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dialogflow.v2beta1.AudioEncoding audio_encoding = 1;
  if (this->audio_encoding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->audio_encoding(), output);
  }

  // int32 sample_rate_hertz = 2;
  if (this->sample_rate_hertz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sample_rate_hertz(), output);
  }

  // string language_code = 3;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.InputAudioConfig.language_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->language_code(), output);
  }

  // repeated string phrase_hints = 4;
  for (int i = 0, n = this->phrase_hints_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phrase_hints(i).data(), static_cast<int>(this->phrase_hints(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.InputAudioConfig.phrase_hints");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->phrase_hints(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.InputAudioConfig)
}

::google::protobuf::uint8* InputAudioConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.InputAudioConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dialogflow.v2beta1.AudioEncoding audio_encoding = 1;
  if (this->audio_encoding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->audio_encoding(), target);
  }

  // int32 sample_rate_hertz = 2;
  if (this->sample_rate_hertz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sample_rate_hertz(), target);
  }

  // string language_code = 3;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.InputAudioConfig.language_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->language_code(), target);
  }

  // repeated string phrase_hints = 4;
  for (int i = 0, n = this->phrase_hints_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phrase_hints(i).data(), static_cast<int>(this->phrase_hints(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.InputAudioConfig.phrase_hints");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->phrase_hints(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.InputAudioConfig)
  return target;
}

size_t InputAudioConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.InputAudioConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string phrase_hints = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->phrase_hints_size());
  for (int i = 0, n = this->phrase_hints_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->phrase_hints(i));
  }

  // string language_code = 3;
  if (this->language_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language_code());
  }

  // .google.cloud.dialogflow.v2beta1.AudioEncoding audio_encoding = 1;
  if (this->audio_encoding() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->audio_encoding());
  }

  // int32 sample_rate_hertz = 2;
  if (this->sample_rate_hertz() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sample_rate_hertz());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InputAudioConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.InputAudioConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const InputAudioConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InputAudioConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.InputAudioConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.InputAudioConfig)
    MergeFrom(*source);
  }
}

void InputAudioConfig::MergeFrom(const InputAudioConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.InputAudioConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  phrase_hints_.MergeFrom(from.phrase_hints_);
  if (from.language_code().size() > 0) {
    set_language_code(from.language_code());
  }
  if (from.audio_encoding() != 0) {
    set_audio_encoding(from.audio_encoding());
  }
  if (from.sample_rate_hertz() != 0) {
    set_sample_rate_hertz(from.sample_rate_hertz());
  }
}

void InputAudioConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.InputAudioConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputAudioConfig::CopyFrom(const InputAudioConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.InputAudioConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputAudioConfig::IsInitialized() const {
  return true;
}

void InputAudioConfig::Swap(InputAudioConfig* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    InputAudioConfig* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void InputAudioConfig::UnsafeArenaSwap(InputAudioConfig* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void InputAudioConfig::InternalSwap(InputAudioConfig* other) {
  using std::swap;
  phrase_hints_.InternalSwap(&other->phrase_hints_);
  language_code_.Swap(&other->language_code_);
  swap(audio_encoding_, other->audio_encoding_);
  swap(sample_rate_hertz_, other->sample_rate_hertz_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InputAudioConfig::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TextInput::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TextInput::kTextFieldNumber;
const int TextInput::kLanguageCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TextInput::TextInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsTextInput();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.TextInput)
}
TextInput::TextInput(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsTextInput();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.TextInput)
}
TextInput::TextInput(const TextInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text(),
      GetArenaNoVirtual());
  }
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.language_code().size() > 0) {
    language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_code(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.TextInput)
}

void TextInput::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TextInput::~TextInput() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.TextInput)
  SharedDtor();
}

void TextInput::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TextInput::ArenaDtor(void* object) {
  TextInput* _this = reinterpret_cast< TextInput* >(object);
  (void)_this;
}
void TextInput::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TextInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TextInput::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TextInput& TextInput::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsTextInput();
  return *internal_default_instance();
}

TextInput* TextInput::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TextInput>(arena);
}

void TextInput::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.TextInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  language_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool TextInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.TextInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.TextInput.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string language_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language_code().data(), static_cast<int>(this->language_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.TextInput.language_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.TextInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.TextInput)
  return false;
#undef DO_
}

void TextInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.TextInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.TextInput.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.TextInput.language_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->language_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.TextInput)
}

::google::protobuf::uint8* TextInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.TextInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.TextInput.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.TextInput.language_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->language_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.TextInput)
  return target;
}

size_t TextInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.TextInput)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TextInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.TextInput)
  GOOGLE_DCHECK_NE(&from, this);
  const TextInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TextInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.TextInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.TextInput)
    MergeFrom(*source);
  }
}

void TextInput::MergeFrom(const TextInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.TextInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {
    set_text(from.text());
  }
  if (from.language_code().size() > 0) {
    set_language_code(from.language_code());
  }
}

void TextInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.TextInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextInput::CopyFrom(const TextInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.TextInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextInput::IsInitialized() const {
  return true;
}

void TextInput::Swap(TextInput* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TextInput* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TextInput::UnsafeArenaSwap(TextInput* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TextInput::InternalSwap(TextInput* other) {
  using std::swap;
  text_.Swap(&other->text_);
  language_code_.Swap(&other->language_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TextInput::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventInput::InitAsDefaultInstance() {
  ::google::cloud::dialogflow::v2beta1::_EventInput_default_instance_._instance.get_mutable()->parameters_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
}
void EventInput::_slow_mutable_parameters() {
  parameters_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Struct >(
      GetArenaNoVirtual());
}
void EventInput::unsafe_arena_set_allocated_parameters(
    ::google::protobuf::Struct* parameters) {
  if (GetArenaNoVirtual() == NULL) {
    delete parameters_;
  }
  parameters_ = parameters;
  if (parameters) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.EventInput.parameters)
}
void EventInput::clear_parameters() {
  if (GetArenaNoVirtual() == NULL && parameters_ != NULL) {
    delete parameters_;
  }
  parameters_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventInput::kNameFieldNumber;
const int EventInput::kParametersFieldNumber;
const int EventInput::kLanguageCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventInput::EventInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsEventInput();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.EventInput)
}
EventInput::EventInput(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsEventInput();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.EventInput)
}
EventInput::EventInput(const EventInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.language_code().size() > 0) {
    language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_code(),
      GetArenaNoVirtual());
  }
  if (from.has_parameters()) {
    parameters_ = new ::google::protobuf::Struct(*from.parameters_);
  } else {
    parameters_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.EventInput)
}

void EventInput::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parameters_ = NULL;
  _cached_size_ = 0;
}

EventInput::~EventInput() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.EventInput)
  SharedDtor();
}

void EventInput::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete parameters_;
}

void EventInput::ArenaDtor(void* object) {
  EventInput* _this = reinterpret_cast< EventInput* >(object);
  (void)_this;
}
void EventInput::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void EventInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventInput::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventInput& EventInput::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsEventInput();
  return *internal_default_instance();
}

EventInput* EventInput::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<EventInput>(arena);
}

void EventInput::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.EventInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  language_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && parameters_ != NULL) {
    delete parameters_;
  }
  parameters_ = NULL;
  _internal_metadata_.Clear();
}

bool EventInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.EventInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.EventInput.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct parameters = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string language_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language_code().data(), static_cast<int>(this->language_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.EventInput.language_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.EventInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.EventInput)
  return false;
#undef DO_
}

void EventInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.EventInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.EventInput.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.protobuf.Struct parameters = 2;
  if (this->has_parameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->parameters_, output);
  }

  // string language_code = 3;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.EventInput.language_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->language_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.EventInput)
}

::google::protobuf::uint8* EventInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.EventInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.EventInput.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.protobuf.Struct parameters = 2;
  if (this->has_parameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->parameters_, deterministic, target);
  }

  // string language_code = 3;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.EventInput.language_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->language_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.EventInput)
  return target;
}

size_t EventInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.EventInput)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string language_code = 3;
  if (this->language_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language_code());
  }

  // .google.protobuf.Struct parameters = 2;
  if (this->has_parameters()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->parameters_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.EventInput)
  GOOGLE_DCHECK_NE(&from, this);
  const EventInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.EventInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.EventInput)
    MergeFrom(*source);
  }
}

void EventInput::MergeFrom(const EventInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.EventInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.language_code().size() > 0) {
    set_language_code(from.language_code());
  }
  if (from.has_parameters()) {
    mutable_parameters()->::google::protobuf::Struct::MergeFrom(from.parameters());
  }
}

void EventInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.EventInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventInput::CopyFrom(const EventInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.EventInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventInput::IsInitialized() const {
  return true;
}

void EventInput::Swap(EventInput* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    EventInput* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void EventInput::UnsafeArenaSwap(EventInput* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void EventInput::InternalSwap(EventInput* other) {
  using std::swap;
  name_.Swap(&other->name_);
  language_code_.Swap(&other->language_code_);
  swap(parameters_, other->parameters_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EventInput::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)
