// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/v2beta1/intent.proto

#include "google/cloud/dialogflow/v2beta1/intent.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {
class Intent_TrainingPhrase_PartDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intent_TrainingPhrase_Part>
      _instance;
} _Intent_TrainingPhrase_Part_default_instance_;
class Intent_TrainingPhraseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intent_TrainingPhrase>
      _instance;
} _Intent_TrainingPhrase_default_instance_;
class Intent_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intent_Parameter>
      _instance;
} _Intent_Parameter_default_instance_;
class Intent_Message_TextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intent_Message_Text>
      _instance;
} _Intent_Message_Text_default_instance_;
class Intent_Message_ImageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intent_Message_Image>
      _instance;
} _Intent_Message_Image_default_instance_;
class Intent_Message_QuickRepliesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intent_Message_QuickReplies>
      _instance;
} _Intent_Message_QuickReplies_default_instance_;
class Intent_Message_Card_ButtonDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intent_Message_Card_Button>
      _instance;
} _Intent_Message_Card_Button_default_instance_;
class Intent_Message_CardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intent_Message_Card>
      _instance;
} _Intent_Message_Card_default_instance_;
class Intent_Message_SimpleResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intent_Message_SimpleResponse>
      _instance;
} _Intent_Message_SimpleResponse_default_instance_;
class Intent_Message_SimpleResponsesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intent_Message_SimpleResponses>
      _instance;
} _Intent_Message_SimpleResponses_default_instance_;
class Intent_Message_BasicCard_Button_OpenUriActionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intent_Message_BasicCard_Button_OpenUriAction>
      _instance;
} _Intent_Message_BasicCard_Button_OpenUriAction_default_instance_;
class Intent_Message_BasicCard_ButtonDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intent_Message_BasicCard_Button>
      _instance;
} _Intent_Message_BasicCard_Button_default_instance_;
class Intent_Message_BasicCardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intent_Message_BasicCard>
      _instance;
} _Intent_Message_BasicCard_default_instance_;
class Intent_Message_SuggestionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intent_Message_Suggestion>
      _instance;
} _Intent_Message_Suggestion_default_instance_;
class Intent_Message_SuggestionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intent_Message_Suggestions>
      _instance;
} _Intent_Message_Suggestions_default_instance_;
class Intent_Message_LinkOutSuggestionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intent_Message_LinkOutSuggestion>
      _instance;
} _Intent_Message_LinkOutSuggestion_default_instance_;
class Intent_Message_ListSelect_ItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intent_Message_ListSelect_Item>
      _instance;
} _Intent_Message_ListSelect_Item_default_instance_;
class Intent_Message_ListSelectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intent_Message_ListSelect>
      _instance;
} _Intent_Message_ListSelect_default_instance_;
class Intent_Message_CarouselSelect_ItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intent_Message_CarouselSelect_Item>
      _instance;
} _Intent_Message_CarouselSelect_Item_default_instance_;
class Intent_Message_CarouselSelectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intent_Message_CarouselSelect>
      _instance;
} _Intent_Message_CarouselSelect_default_instance_;
class Intent_Message_SelectItemInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intent_Message_SelectItemInfo>
      _instance;
} _Intent_Message_SelectItemInfo_default_instance_;
class Intent_MessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intent_Message>
      _instance;
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_Text* text_;
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* image_;
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies* quick_replies_;
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_Card* card_;
  const ::google::protobuf::Struct* payload_;
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses* simple_responses_;
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard* basic_card_;
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions* suggestions_;
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion* link_out_suggestion_;
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect* list_select_;
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect* carousel_select_;
} _Intent_Message_default_instance_;
class Intent_FollowupIntentInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intent_FollowupIntentInfo>
      _instance;
} _Intent_FollowupIntentInfo_default_instance_;
class IntentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intent>
      _instance;
} _Intent_default_instance_;
class ListIntentsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListIntentsRequest>
      _instance;
} _ListIntentsRequest_default_instance_;
class ListIntentsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListIntentsResponse>
      _instance;
} _ListIntentsResponse_default_instance_;
class GetIntentRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetIntentRequest>
      _instance;
} _GetIntentRequest_default_instance_;
class CreateIntentRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateIntentRequest>
      _instance;
} _CreateIntentRequest_default_instance_;
class UpdateIntentRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateIntentRequest>
      _instance;
} _UpdateIntentRequest_default_instance_;
class DeleteIntentRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteIntentRequest>
      _instance;
} _DeleteIntentRequest_default_instance_;
class BatchUpdateIntentsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchUpdateIntentsRequest>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr intent_batch_uri_;
  const ::google::cloud::dialogflow::v2beta1::IntentBatch* intent_batch_inline_;
} _BatchUpdateIntentsRequest_default_instance_;
class BatchUpdateIntentsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchUpdateIntentsResponse>
      _instance;
} _BatchUpdateIntentsResponse_default_instance_;
class BatchDeleteIntentsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchDeleteIntentsRequest>
      _instance;
} _BatchDeleteIntentsRequest_default_instance_;
class IntentBatchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IntentBatch>
      _instance;
} _IntentBatch_default_instance_;
}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto {
void InitDefaultsIntent_TrainingPhrase_PartImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_Intent_TrainingPhrase_Part_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Part();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Part::InitAsDefaultInstance();
}

void InitDefaultsIntent_TrainingPhrase_Part() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntent_TrainingPhrase_PartImpl);
}

void InitDefaultsIntent_TrainingPhraseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_TrainingPhrase_Part();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_Intent_TrainingPhrase_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase::InitAsDefaultInstance();
}

void InitDefaultsIntent_TrainingPhrase() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntent_TrainingPhraseImpl);
}

void InitDefaultsIntent_ParameterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_Intent_Parameter_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::Intent_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::Intent_Parameter::InitAsDefaultInstance();
}

void InitDefaultsIntent_Parameter() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntent_ParameterImpl);
}

void InitDefaultsIntent_Message_TextImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_Intent_Message_Text_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::Intent_Message_Text();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Text::InitAsDefaultInstance();
}

void InitDefaultsIntent_Message_Text() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntent_Message_TextImpl);
}

void InitDefaultsIntent_Message_ImageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_Intent_Message_Image_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::Intent_Message_Image();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Image::InitAsDefaultInstance();
}

void InitDefaultsIntent_Message_Image() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntent_Message_ImageImpl);
}

void InitDefaultsIntent_Message_QuickRepliesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_Intent_Message_QuickReplies_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies::InitAsDefaultInstance();
}

void InitDefaultsIntent_Message_QuickReplies() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntent_Message_QuickRepliesImpl);
}

void InitDefaultsIntent_Message_Card_ButtonImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_Intent_Message_Card_Button_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::Intent_Message_Card_Button();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Card_Button::InitAsDefaultInstance();
}

void InitDefaultsIntent_Message_Card_Button() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntent_Message_Card_ButtonImpl);
}

void InitDefaultsIntent_Message_CardImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Card_Button();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_Intent_Message_Card_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::Intent_Message_Card();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Card::InitAsDefaultInstance();
}

void InitDefaultsIntent_Message_Card() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntent_Message_CardImpl);
}

void InitDefaultsIntent_Message_SimpleResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_Intent_Message_SimpleResponse_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponse::InitAsDefaultInstance();
}

void InitDefaultsIntent_Message_SimpleResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntent_Message_SimpleResponseImpl);
}

void InitDefaultsIntent_Message_SimpleResponsesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_SimpleResponse();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_Intent_Message_SimpleResponses_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses::InitAsDefaultInstance();
}

void InitDefaultsIntent_Message_SimpleResponses() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntent_Message_SimpleResponsesImpl);
}

void InitDefaultsIntent_Message_BasicCard_Button_OpenUriActionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_Intent_Message_BasicCard_Button_OpenUriAction_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction::InitAsDefaultInstance();
}

void InitDefaultsIntent_Message_BasicCard_Button_OpenUriAction() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntent_Message_BasicCard_Button_OpenUriActionImpl);
}

void InitDefaultsIntent_Message_BasicCard_ButtonImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_BasicCard_Button_OpenUriAction();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_Intent_Message_BasicCard_Button_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button::InitAsDefaultInstance();
}

void InitDefaultsIntent_Message_BasicCard_Button() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntent_Message_BasicCard_ButtonImpl);
}

void InitDefaultsIntent_Message_BasicCardImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Image();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_BasicCard_Button();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_Intent_Message_BasicCard_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard::InitAsDefaultInstance();
}

void InitDefaultsIntent_Message_BasicCard() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntent_Message_BasicCardImpl);
}

void InitDefaultsIntent_Message_SuggestionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_Intent_Message_Suggestion_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestion::InitAsDefaultInstance();
}

void InitDefaultsIntent_Message_Suggestion() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntent_Message_SuggestionImpl);
}

void InitDefaultsIntent_Message_SuggestionsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Suggestion();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_Intent_Message_Suggestions_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions::InitAsDefaultInstance();
}

void InitDefaultsIntent_Message_Suggestions() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntent_Message_SuggestionsImpl);
}

void InitDefaultsIntent_Message_LinkOutSuggestionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_Intent_Message_LinkOutSuggestion_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion::InitAsDefaultInstance();
}

void InitDefaultsIntent_Message_LinkOutSuggestion() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntent_Message_LinkOutSuggestionImpl);
}

void InitDefaultsIntent_Message_ListSelect_ItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_SelectItemInfo();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Image();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_Intent_Message_ListSelect_Item_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect_Item();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect_Item::InitAsDefaultInstance();
}

void InitDefaultsIntent_Message_ListSelect_Item() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntent_Message_ListSelect_ItemImpl);
}

void InitDefaultsIntent_Message_ListSelectImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_ListSelect_Item();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_Intent_Message_ListSelect_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect::InitAsDefaultInstance();
}

void InitDefaultsIntent_Message_ListSelect() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntent_Message_ListSelectImpl);
}

void InitDefaultsIntent_Message_CarouselSelect_ItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_SelectItemInfo();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Image();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_Intent_Message_CarouselSelect_Item_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect_Item();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect_Item::InitAsDefaultInstance();
}

void InitDefaultsIntent_Message_CarouselSelect_Item() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntent_Message_CarouselSelect_ItemImpl);
}

void InitDefaultsIntent_Message_CarouselSelectImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_CarouselSelect_Item();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_Intent_Message_CarouselSelect_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect::InitAsDefaultInstance();
}

void InitDefaultsIntent_Message_CarouselSelect() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntent_Message_CarouselSelectImpl);
}

void InitDefaultsIntent_Message_SelectItemInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_Intent_Message_SelectItemInfo_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo::InitAsDefaultInstance();
}

void InitDefaultsIntent_Message_SelectItemInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntent_Message_SelectItemInfoImpl);
}

void InitDefaultsIntent_MessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Text();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Image();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_QuickReplies();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Card();
  protobuf_google_2fprotobuf_2fstruct_2eproto::InitDefaultsListValue();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_SimpleResponses();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_BasicCard();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Suggestions();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_LinkOutSuggestion();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_ListSelect();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_CarouselSelect();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_Intent_Message_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::Intent_Message();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::Intent_Message::InitAsDefaultInstance();
}

void InitDefaultsIntent_Message() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntent_MessageImpl);
}

void InitDefaultsIntent_FollowupIntentInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_Intent_FollowupIntentInfo_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::Intent_FollowupIntentInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::Intent_FollowupIntentInfo::InitAsDefaultInstance();
}

void InitDefaultsIntent_FollowupIntentInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntent_FollowupIntentInfoImpl);
}

void InitDefaultsIntentImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_TrainingPhrase();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fcontext_2eproto::InitDefaultsContext();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Parameter();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message();
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_FollowupIntentInfo();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_Intent_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::Intent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::Intent::InitAsDefaultInstance();
}

void InitDefaultsIntent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntentImpl);
}

void InitDefaultsListIntentsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_ListIntentsRequest_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::ListIntentsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::ListIntentsRequest::InitAsDefaultInstance();
}

void InitDefaultsListIntentsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListIntentsRequestImpl);
}

void InitDefaultsListIntentsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_ListIntentsResponse_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::ListIntentsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::ListIntentsResponse::InitAsDefaultInstance();
}

void InitDefaultsListIntentsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListIntentsResponseImpl);
}

void InitDefaultsGetIntentRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_GetIntentRequest_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::GetIntentRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::GetIntentRequest::InitAsDefaultInstance();
}

void InitDefaultsGetIntentRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetIntentRequestImpl);
}

void InitDefaultsCreateIntentRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_CreateIntentRequest_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::CreateIntentRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::CreateIntentRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateIntentRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateIntentRequestImpl);
}

void InitDefaultsUpdateIntentRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent();
  protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::InitDefaultsFieldMask();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_UpdateIntentRequest_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::UpdateIntentRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::UpdateIntentRequest::InitAsDefaultInstance();
}

void InitDefaultsUpdateIntentRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateIntentRequestImpl);
}

void InitDefaultsDeleteIntentRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_DeleteIntentRequest_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::DeleteIntentRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::DeleteIntentRequest::InitAsDefaultInstance();
}

void InitDefaultsDeleteIntentRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeleteIntentRequestImpl);
}

void InitDefaultsBatchUpdateIntentsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntentBatch();
  protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::InitDefaultsFieldMask();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_BatchUpdateIntentsRequest_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::BatchUpdateIntentsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::BatchUpdateIntentsRequest::InitAsDefaultInstance();
}

void InitDefaultsBatchUpdateIntentsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBatchUpdateIntentsRequestImpl);
}

void InitDefaultsBatchUpdateIntentsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_BatchUpdateIntentsResponse_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::BatchUpdateIntentsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::BatchUpdateIntentsResponse::InitAsDefaultInstance();
}

void InitDefaultsBatchUpdateIntentsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBatchUpdateIntentsResponseImpl);
}

void InitDefaultsBatchDeleteIntentsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_BatchDeleteIntentsRequest_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::BatchDeleteIntentsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::BatchDeleteIntentsRequest::InitAsDefaultInstance();
}

void InitDefaultsBatchDeleteIntentsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBatchDeleteIntentsRequestImpl);
}

void InitDefaultsIntentBatchImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_IntentBatch_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::IntentBatch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::IntentBatch::InitAsDefaultInstance();
}

void InitDefaultsIntentBatch() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntentBatchImpl);
}

::google::protobuf::Metadata file_level_metadata[34];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Part, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Part, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Part, entity_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Part, alias_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Part, user_defined_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase, parts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase, times_added_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Parameter, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Parameter, display_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Parameter, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Parameter, default_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Parameter, entity_type_display_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Parameter, mandatory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Parameter, prompts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Parameter, is_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_Text, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_Text, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_Image, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_Image, image_uri_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies, quick_replies_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_Card_Button, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_Card_Button, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_Card_Button, postback_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_Card, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_Card, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_Card, subtitle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_Card, image_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_Card, buttons_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponse, text_to_speech_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponse, ssml_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponse, display_text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses, simple_responses_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction, uri_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button, open_uri_action_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard, subtitle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard, formatted_text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard, image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard, buttons_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestion, title_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions, suggestions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion, destination_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion, uri_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect_Item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect_Item, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect_Item, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect_Item, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect_Item, image_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect_Item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect_Item, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect_Item, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect_Item, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect_Item, image_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo, synonyms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::cloud::dialogflow::v2beta1::Intent_MessageDefaultTypeInternal, text_),
  offsetof(::google::cloud::dialogflow::v2beta1::Intent_MessageDefaultTypeInternal, image_),
  offsetof(::google::cloud::dialogflow::v2beta1::Intent_MessageDefaultTypeInternal, quick_replies_),
  offsetof(::google::cloud::dialogflow::v2beta1::Intent_MessageDefaultTypeInternal, card_),
  offsetof(::google::cloud::dialogflow::v2beta1::Intent_MessageDefaultTypeInternal, payload_),
  offsetof(::google::cloud::dialogflow::v2beta1::Intent_MessageDefaultTypeInternal, simple_responses_),
  offsetof(::google::cloud::dialogflow::v2beta1::Intent_MessageDefaultTypeInternal, basic_card_),
  offsetof(::google::cloud::dialogflow::v2beta1::Intent_MessageDefaultTypeInternal, suggestions_),
  offsetof(::google::cloud::dialogflow::v2beta1::Intent_MessageDefaultTypeInternal, link_out_suggestion_),
  offsetof(::google::cloud::dialogflow::v2beta1::Intent_MessageDefaultTypeInternal, list_select_),
  offsetof(::google::cloud::dialogflow::v2beta1::Intent_MessageDefaultTypeInternal, carousel_select_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message, platform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_Message, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_FollowupIntentInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_FollowupIntentInfo, followup_intent_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent_FollowupIntentInfo, parent_followup_intent_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent, display_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent, webhook_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent, priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent, is_fallback_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent, ml_enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent, input_context_names_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent, events_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent, training_phrases_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent, output_contexts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent, reset_contexts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent, parameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent, messages_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent, default_response_platforms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent, root_followup_intent_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent, parent_followup_intent_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::Intent, followup_intent_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::ListIntentsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::ListIntentsRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::ListIntentsRequest, language_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::ListIntentsRequest, intent_view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::ListIntentsRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::ListIntentsRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::ListIntentsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::ListIntentsResponse, intents_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::ListIntentsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::GetIntentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::GetIntentRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::GetIntentRequest, language_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::GetIntentRequest, intent_view_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::CreateIntentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::CreateIntentRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::CreateIntentRequest, intent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::CreateIntentRequest, language_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::CreateIntentRequest, intent_view_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::UpdateIntentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::UpdateIntentRequest, intent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::UpdateIntentRequest, language_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::UpdateIntentRequest, update_mask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::UpdateIntentRequest, intent_view_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::DeleteIntentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::DeleteIntentRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::BatchUpdateIntentsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::BatchUpdateIntentsRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::BatchUpdateIntentsRequest, parent_),
  offsetof(::google::cloud::dialogflow::v2beta1::BatchUpdateIntentsRequestDefaultTypeInternal, intent_batch_uri_),
  offsetof(::google::cloud::dialogflow::v2beta1::BatchUpdateIntentsRequestDefaultTypeInternal, intent_batch_inline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::BatchUpdateIntentsRequest, language_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::BatchUpdateIntentsRequest, update_mask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::BatchUpdateIntentsRequest, intent_view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::BatchUpdateIntentsRequest, intent_batch_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::BatchUpdateIntentsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::BatchUpdateIntentsResponse, intents_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::BatchDeleteIntentsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::BatchDeleteIntentsRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::BatchDeleteIntentsRequest, intents_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::IntentBatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::IntentBatch, intents_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Part)},
  { 9, -1, sizeof(::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase)},
  { 18, -1, sizeof(::google::cloud::dialogflow::v2beta1::Intent_Parameter)},
  { 31, -1, sizeof(::google::cloud::dialogflow::v2beta1::Intent_Message_Text)},
  { 37, -1, sizeof(::google::cloud::dialogflow::v2beta1::Intent_Message_Image)},
  { 43, -1, sizeof(::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies)},
  { 50, -1, sizeof(::google::cloud::dialogflow::v2beta1::Intent_Message_Card_Button)},
  { 57, -1, sizeof(::google::cloud::dialogflow::v2beta1::Intent_Message_Card)},
  { 66, -1, sizeof(::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponse)},
  { 74, -1, sizeof(::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses)},
  { 80, -1, sizeof(::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction)},
  { 86, -1, sizeof(::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button)},
  { 93, -1, sizeof(::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard)},
  { 103, -1, sizeof(::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestion)},
  { 109, -1, sizeof(::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions)},
  { 115, -1, sizeof(::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion)},
  { 122, -1, sizeof(::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect_Item)},
  { 131, -1, sizeof(::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect)},
  { 138, -1, sizeof(::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect_Item)},
  { 147, -1, sizeof(::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect)},
  { 153, -1, sizeof(::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo)},
  { 160, -1, sizeof(::google::cloud::dialogflow::v2beta1::Intent_Message)},
  { 178, -1, sizeof(::google::cloud::dialogflow::v2beta1::Intent_FollowupIntentInfo)},
  { 185, -1, sizeof(::google::cloud::dialogflow::v2beta1::Intent)},
  { 208, -1, sizeof(::google::cloud::dialogflow::v2beta1::ListIntentsRequest)},
  { 218, -1, sizeof(::google::cloud::dialogflow::v2beta1::ListIntentsResponse)},
  { 225, -1, sizeof(::google::cloud::dialogflow::v2beta1::GetIntentRequest)},
  { 233, -1, sizeof(::google::cloud::dialogflow::v2beta1::CreateIntentRequest)},
  { 242, -1, sizeof(::google::cloud::dialogflow::v2beta1::UpdateIntentRequest)},
  { 251, -1, sizeof(::google::cloud::dialogflow::v2beta1::DeleteIntentRequest)},
  { 257, -1, sizeof(::google::cloud::dialogflow::v2beta1::BatchUpdateIntentsRequest)},
  { 269, -1, sizeof(::google::cloud::dialogflow::v2beta1::BatchUpdateIntentsResponse)},
  { 275, -1, sizeof(::google::cloud::dialogflow::v2beta1::BatchDeleteIntentsRequest)},
  { 282, -1, sizeof(::google::cloud::dialogflow::v2beta1::IntentBatch)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_Intent_TrainingPhrase_Part_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_Intent_TrainingPhrase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_Intent_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_Text_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_Image_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_QuickReplies_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_Card_Button_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_Card_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_SimpleResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_SimpleResponses_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_BasicCard_Button_OpenUriAction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_BasicCard_Button_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_BasicCard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_Suggestion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_Suggestions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_LinkOutSuggestion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_ListSelect_Item_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_ListSelect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_CarouselSelect_Item_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_CarouselSelect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_SelectItemInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_Intent_FollowupIntentInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_Intent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_ListIntentsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_ListIntentsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_GetIntentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_CreateIntentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_UpdateIntentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_DeleteIntentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_BatchUpdateIntentsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_BatchUpdateIntentsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_BatchDeleteIntentsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_IntentBatch_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/cloud/dialogflow/v2beta1/intent.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 34);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n,google/cloud/dialogflow/v2beta1/intent"
      ".proto\022\037google.cloud.dialogflow.v2beta1\032"
      "\034google/api/annotations.proto\032-google/cl"
      "oud/dialogflow/v2beta1/context.proto\032#go"
      "ogle/longrunning/operations.proto\032\033googl"
      "e/protobuf/empty.proto\032 google/protobuf/"
      "field_mask.proto\032\034google/protobuf/struct"
      ".proto\"\366!\n\006Intent\022\014\n\004name\030\001 \001(\t\022\024\n\014displ"
      "ay_name\030\002 \001(\t\022K\n\rwebhook_state\030\006 \001(\01624.g"
      "oogle.cloud.dialogflow.v2beta1.Intent.We"
      "bhookState\022\020\n\010priority\030\003 \001(\005\022\023\n\013is_fallb"
      "ack\030\004 \001(\010\022\022\n\nml_enabled\030\005 \001(\010\022\033\n\023input_c"
      "ontext_names\030\007 \003(\t\022\016\n\006events\030\010 \003(\t\022P\n\020tr"
      "aining_phrases\030\t \003(\01326.google.cloud.dial"
      "ogflow.v2beta1.Intent.TrainingPhrase\022\016\n\006"
      "action\030\n \001(\t\022A\n\017output_contexts\030\013 \003(\0132(."
      "google.cloud.dialogflow.v2beta1.Context\022"
      "\026\n\016reset_contexts\030\014 \001(\010\022E\n\nparameters\030\r "
      "\003(\01321.google.cloud.dialogflow.v2beta1.In"
      "tent.Parameter\022A\n\010messages\030\016 \003(\0132/.googl"
      "e.cloud.dialogflow.v2beta1.Intent.Messag"
      "e\022\\\n\032default_response_platforms\030\017 \003(\01628."
      "google.cloud.dialogflow.v2beta1.Intent.M"
      "essage.Platform\022!\n\031root_followup_intent_"
      "name\030\020 \001(\t\022#\n\033parent_followup_intent_nam"
      "e\030\021 \001(\t\022X\n\024followup_intent_info\030\022 \003(\0132:."
      "google.cloud.dialogflow.v2beta1.Intent.F"
      "ollowupIntentInfo\032\331\002\n\016TrainingPhrase\022\014\n\004"
      "name\030\001 \001(\t\022I\n\004type\030\002 \001(\0162;.google.cloud."
      "dialogflow.v2beta1.Intent.TrainingPhrase"
      ".Type\022J\n\005parts\030\003 \003(\0132;.google.cloud.dial"
      "ogflow.v2beta1.Intent.TrainingPhrase.Par"
      "t\022\031\n\021times_added_count\030\004 \001(\005\032N\n\004Part\022\014\n\004"
      "text\030\001 \001(\t\022\023\n\013entity_type\030\002 \001(\t\022\r\n\005alias"
      "\030\003 \001(\t\022\024\n\014user_defined\030\004 \001(\010\"7\n\004Type\022\024\n\020"
      "TYPE_UNSPECIFIED\020\000\022\013\n\007EXAMPLE\020\001\022\014\n\010TEMPL"
      "ATE\020\002\032\254\001\n\tParameter\022\014\n\004name\030\001 \001(\t\022\024\n\014dis"
      "play_name\030\002 \001(\t\022\r\n\005value\030\003 \001(\t\022\025\n\rdefaul"
      "t_value\030\004 \001(\t\022 \n\030entity_type_display_nam"
      "e\030\005 \001(\t\022\021\n\tmandatory\030\006 \001(\010\022\017\n\007prompts\030\007 "
      "\003(\t\022\017\n\007is_list\030\010 \001(\010\032\361\025\n\007Message\022D\n\004text"
      "\030\001 \001(\01324.google.cloud.dialogflow.v2beta1"
      ".Intent.Message.TextH\000\022F\n\005image\030\002 \001(\01325."
      "google.cloud.dialogflow.v2beta1.Intent.M"
      "essage.ImageH\000\022U\n\rquick_replies\030\003 \001(\0132<."
      "google.cloud.dialogflow.v2beta1.Intent.M"
      "essage.QuickRepliesH\000\022D\n\004card\030\004 \001(\01324.go"
      "ogle.cloud.dialogflow.v2beta1.Intent.Mes"
      "sage.CardH\000\022*\n\007payload\030\005 \001(\0132\027.google.pr"
      "otobuf.StructH\000\022[\n\020simple_responses\030\007 \001("
      "\0132\?.google.cloud.dialogflow.v2beta1.Inte"
      "nt.Message.SimpleResponsesH\000\022O\n\nbasic_ca"
      "rd\030\010 \001(\01329.google.cloud.dialogflow.v2bet"
      "a1.Intent.Message.BasicCardH\000\022R\n\013suggest"
      "ions\030\t \001(\0132;.google.cloud.dialogflow.v2b"
      "eta1.Intent.Message.SuggestionsH\000\022`\n\023lin"
      "k_out_suggestion\030\n \001(\0132A.google.cloud.di"
      "alogflow.v2beta1.Intent.Message.LinkOutS"
      "uggestionH\000\022Q\n\013list_select\030\013 \001(\0132:.googl"
      "e.cloud.dialogflow.v2beta1.Intent.Messag"
      "e.ListSelectH\000\022Y\n\017carousel_select\030\014 \001(\0132"
      ">.google.cloud.dialogflow.v2beta1.Intent"
      ".Message.CarouselSelectH\000\022J\n\010platform\030\006 "
      "\001(\01628.google.cloud.dialogflow.v2beta1.In"
      "tent.Message.Platform\032\024\n\004Text\022\014\n\004text\030\001 "
      "\003(\t\032\032\n\005Image\022\021\n\timage_uri\030\001 \001(\t\0324\n\014Quick"
      "Replies\022\r\n\005title\030\001 \001(\t\022\025\n\rquick_replies\030"
      "\002 \003(\t\032\262\001\n\004Card\022\r\n\005title\030\001 \001(\t\022\020\n\010subtitl"
      "e\030\002 \001(\t\022\021\n\timage_uri\030\003 \001(\t\022L\n\007buttons\030\004 "
      "\003(\0132;.google.cloud.dialogflow.v2beta1.In"
      "tent.Message.Card.Button\032(\n\006Button\022\014\n\004te"
      "xt\030\001 \001(\t\022\020\n\010postback\030\002 \001(\t\032L\n\016SimpleResp"
      "onse\022\026\n\016text_to_speech\030\001 \001(\t\022\014\n\004ssml\030\002 \001"
      "(\t\022\024\n\014display_text\030\003 \001(\t\032k\n\017SimpleRespon"
      "ses\022X\n\020simple_responses\030\001 \003(\0132>.google.c"
      "loud.dialogflow.v2beta1.Intent.Message.S"
      "impleResponse\032\376\002\n\tBasicCard\022\r\n\005title\030\001 \001"
      "(\t\022\020\n\010subtitle\030\002 \001(\t\022\026\n\016formatted_text\030\003"
      " \001(\t\022D\n\005image\030\004 \001(\01325.google.cloud.dialo"
      "gflow.v2beta1.Intent.Message.Image\022Q\n\007bu"
      "ttons\030\005 \003(\0132@.google.cloud.dialogflow.v2"
      "beta1.Intent.Message.BasicCard.Button\032\236\001"
      "\n\006Button\022\r\n\005title\030\001 \001(\t\022g\n\017open_uri_acti"
      "on\030\002 \001(\0132N.google.cloud.dialogflow.v2bet"
      "a1.Intent.Message.BasicCard.Button.OpenU"
      "riAction\032\034\n\rOpenUriAction\022\013\n\003uri\030\001 \001(\t\032\033"
      "\n\nSuggestion\022\r\n\005title\030\001 \001(\t\032^\n\013Suggestio"
      "ns\022O\n\013suggestions\030\001 \003(\0132:.google.cloud.d"
      "ialogflow.v2beta1.Intent.Message.Suggest"
      "ion\032:\n\021LinkOutSuggestion\022\030\n\020destination_"
      "name\030\001 \001(\t\022\013\n\003uri\030\002 \001(\t\032\254\002\n\nListSelect\022\r"
      "\n\005title\030\001 \001(\t\022N\n\005items\030\002 \003(\0132\?.google.cl"
      "oud.dialogflow.v2beta1.Intent.Message.Li"
      "stSelect.Item\032\276\001\n\004Item\022L\n\004info\030\001 \001(\0132>.g"
      "oogle.cloud.dialogflow.v2beta1.Intent.Me"
      "ssage.SelectItemInfo\022\r\n\005title\030\002 \001(\t\022\023\n\013d"
      "escription\030\003 \001(\t\022D\n\005image\030\004 \001(\01325.google"
      ".cloud.dialogflow.v2beta1.Intent.Message"
      ".Image\032\245\002\n\016CarouselSelect\022R\n\005items\030\001 \003(\013"
      "2C.google.cloud.dialogflow.v2beta1.Inten"
      "t.Message.CarouselSelect.Item\032\276\001\n\004Item\022L"
      "\n\004info\030\001 \001(\0132>.google.cloud.dialogflow.v"
      "2beta1.Intent.Message.SelectItemInfo\022\r\n\005"
      "title\030\002 \001(\t\022\023\n\013description\030\003 \001(\t\022D\n\005imag"
      "e\030\004 \001(\01325.google.cloud.dialogflow.v2beta"
      "1.Intent.Message.Image\032/\n\016SelectItemInfo"
      "\022\013\n\003key\030\001 \001(\t\022\020\n\010synonyms\030\002 \003(\t\"\213\001\n\010Plat"
      "form\022\030\n\024PLATFORM_UNSPECIFIED\020\000\022\014\n\010FACEBO"
      "OK\020\001\022\t\n\005SLACK\020\002\022\014\n\010TELEGRAM\020\003\022\007\n\003KIK\020\004\022\t"
      "\n\005SKYPE\020\005\022\010\n\004LINE\020\006\022\t\n\005VIBER\020\007\022\025\n\021ACTION"
      "S_ON_GOOGLE\020\010B\t\n\007message\032W\n\022FollowupInte"
      "ntInfo\022\034\n\024followup_intent_name\030\001 \001(\t\022#\n\033"
      "parent_followup_intent_name\030\002 \001(\t\"t\n\014Web"
      "hookState\022\035\n\031WEBHOOK_STATE_UNSPECIFIED\020\000"
      "\022\031\n\025WEBHOOK_STATE_ENABLED\020\001\022*\n&WEBHOOK_S"
      "TATE_ENABLED_FOR_SLOT_FILLING\020\002\"\244\001\n\022List"
      "IntentsRequest\022\016\n\006parent\030\001 \001(\t\022\025\n\rlangua"
      "ge_code\030\002 \001(\t\022@\n\013intent_view\030\003 \001(\0162+.goo"
      "gle.cloud.dialogflow.v2beta1.IntentView\022"
      "\021\n\tpage_size\030\004 \001(\005\022\022\n\npage_token\030\005 \001(\t\"h"
      "\n\023ListIntentsResponse\0228\n\007intents\030\001 \003(\0132\'"
      ".google.cloud.dialogflow.v2beta1.Intent\022"
      "\027\n\017next_page_token\030\002 \001(\t\"y\n\020GetIntentReq"
      "uest\022\014\n\004name\030\001 \001(\t\022\025\n\rlanguage_code\030\002 \001("
      "\t\022@\n\013intent_view\030\003 \001(\0162+.google.cloud.di"
      "alogflow.v2beta1.IntentView\"\267\001\n\023CreateIn"
      "tentRequest\022\016\n\006parent\030\001 \001(\t\0227\n\006intent\030\002 "
      "\001(\0132\'.google.cloud.dialogflow.v2beta1.In"
      "tent\022\025\n\rlanguage_code\030\003 \001(\t\022@\n\013intent_vi"
      "ew\030\004 \001(\0162+.google.cloud.dialogflow.v2bet"
      "a1.IntentView\"\330\001\n\023UpdateIntentRequest\0227\n"
      "\006intent\030\001 \001(\0132\'.google.cloud.dialogflow."
      "v2beta1.Intent\022\025\n\rlanguage_code\030\002 \001(\t\022/\n"
      "\013update_mask\030\003 \001(\0132\032.google.protobuf.Fie"
      "ldMask\022@\n\013intent_view\030\004 \001(\0162+.google.clo"
      "ud.dialogflow.v2beta1.IntentView\"#\n\023Dele"
      "teIntentRequest\022\014\n\004name\030\001 \001(\t\"\256\002\n\031BatchU"
      "pdateIntentsRequest\022\016\n\006parent\030\001 \001(\t\022\032\n\020i"
      "ntent_batch_uri\030\002 \001(\tH\000\022K\n\023intent_batch_"
      "inline\030\003 \001(\0132,.google.cloud.dialogflow.v"
      "2beta1.IntentBatchH\000\022\025\n\rlanguage_code\030\004 "
      "\001(\t\022/\n\013update_mask\030\005 \001(\0132\032.google.protob"
      "uf.FieldMask\022@\n\013intent_view\030\006 \001(\0162+.goog"
      "le.cloud.dialogflow.v2beta1.IntentViewB\016"
      "\n\014intent_batch\"V\n\032BatchUpdateIntentsResp"
      "onse\0228\n\007intents\030\001 \003(\0132\'.google.cloud.dia"
      "logflow.v2beta1.Intent\"e\n\031BatchDeleteInt"
      "entsRequest\022\016\n\006parent\030\001 \001(\t\0228\n\007intents\030\002"
      " \003(\0132\'.google.cloud.dialogflow.v2beta1.I"
      "ntent\"G\n\013IntentBatch\0228\n\007intents\030\001 \003(\0132\'."
      "google.cloud.dialogflow.v2beta1.Intent*\?"
      "\n\nIntentView\022\033\n\027INTENT_VIEW_UNSPECIFIED\020"
      "\000\022\024\n\020INTENT_VIEW_FULL\020\0012\262\t\n\007Intents\022\254\001\n\013"
      "ListIntents\0223.google.cloud.dialogflow.v2"
      "beta1.ListIntentsRequest\0324.google.cloud."
      "dialogflow.v2beta1.ListIntentsResponse\"2"
      "\202\323\344\223\002,\022*/v2beta1/{parent=projects/*/agen"
      "t}/intents\022\233\001\n\tGetIntent\0221.google.cloud."
      "dialogflow.v2beta1.GetIntentRequest\032\'.go"
      "ogle.cloud.dialogflow.v2beta1.Intent\"2\202\323"
      "\344\223\002,\022*/v2beta1/{name=projects/*/agent/in"
      "tents/*}\022\251\001\n\014CreateIntent\0224.google.cloud"
      ".dialogflow.v2beta1.CreateIntentRequest\032"
      "\'.google.cloud.dialogflow.v2beta1.Intent"
      "\":\202\323\344\223\0024\"*/v2beta1/{parent=projects/*/ag"
      "ent}/intents:\006intent\022\260\001\n\014UpdateIntent\0224."
      "google.cloud.dialogflow.v2beta1.UpdateIn"
      "tentRequest\032\'.google.cloud.dialogflow.v2"
      "beta1.Intent\"A\202\323\344\223\002;21/v2beta1/{intent.n"
      "ame=projects/*/agent/intents/*}:\006intent\022"
      "\220\001\n\014DeleteIntent\0224.google.cloud.dialogfl"
      "ow.v2beta1.DeleteIntentRequest\032\026.google."
      "protobuf.Empty\"2\202\323\344\223\002,**/v2beta1/{name=p"
      "rojects/*/agent/intents/*}\022\262\001\n\022BatchUpda"
      "teIntents\022:.google.cloud.dialogflow.v2be"
      "ta1.BatchUpdateIntentsRequest\032\035.google.l"
      "ongrunning.Operation\"A\202\323\344\223\002;\"6/v2beta1/{"
      "parent=projects/*/agent}/intents:batchUp"
      "date:\001*\022\262\001\n\022BatchDeleteIntents\022:.google."
      "cloud.dialogflow.v2beta1.BatchDeleteInte"
      "ntsRequest\032\035.google.longrunning.Operatio"
      "n\"A\202\323\344\223\002;\"6/v2beta1/{parent=projects/*/a"
      "gent}/intents:batchDelete:\001*B\251\001\n#com.goo"
      "gle.cloud.dialogflow.v2beta1B\013IntentProt"
      "oP\001ZIgoogle.golang.org/genproto/googleap"
      "is/cloud/dialogflow/v2beta1;dialogflow\370\001"
      "\001\242\002\002DF\252\002\037Google.Cloud.Dialogflow.V2beta1"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 7488);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/dialogflow/v2beta1/intent.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fcontext_2eproto::AddDescriptors();
  ::protobuf_google_2flongrunning_2foperations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {
const ::google::protobuf::EnumDescriptor* Intent_TrainingPhrase_Type_descriptor() {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_enum_descriptors[0];
}
bool Intent_TrainingPhrase_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Intent_TrainingPhrase_Type Intent_TrainingPhrase::TYPE_UNSPECIFIED;
const Intent_TrainingPhrase_Type Intent_TrainingPhrase::EXAMPLE;
const Intent_TrainingPhrase_Type Intent_TrainingPhrase::TEMPLATE;
const Intent_TrainingPhrase_Type Intent_TrainingPhrase::Type_MIN;
const Intent_TrainingPhrase_Type Intent_TrainingPhrase::Type_MAX;
const int Intent_TrainingPhrase::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Intent_Message_Platform_descriptor() {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_enum_descriptors[1];
}
bool Intent_Message_Platform_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Intent_Message_Platform Intent_Message::PLATFORM_UNSPECIFIED;
const Intent_Message_Platform Intent_Message::FACEBOOK;
const Intent_Message_Platform Intent_Message::SLACK;
const Intent_Message_Platform Intent_Message::TELEGRAM;
const Intent_Message_Platform Intent_Message::KIK;
const Intent_Message_Platform Intent_Message::SKYPE;
const Intent_Message_Platform Intent_Message::LINE;
const Intent_Message_Platform Intent_Message::VIBER;
const Intent_Message_Platform Intent_Message::ACTIONS_ON_GOOGLE;
const Intent_Message_Platform Intent_Message::Platform_MIN;
const Intent_Message_Platform Intent_Message::Platform_MAX;
const int Intent_Message::Platform_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Intent_WebhookState_descriptor() {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_enum_descriptors[2];
}
bool Intent_WebhookState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Intent_WebhookState Intent::WEBHOOK_STATE_UNSPECIFIED;
const Intent_WebhookState Intent::WEBHOOK_STATE_ENABLED;
const Intent_WebhookState Intent::WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING;
const Intent_WebhookState Intent::WebhookState_MIN;
const Intent_WebhookState Intent::WebhookState_MAX;
const int Intent::WebhookState_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* IntentView_descriptor() {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_enum_descriptors[3];
}
bool IntentView_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Intent_TrainingPhrase_Part::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intent_TrainingPhrase_Part::kTextFieldNumber;
const int Intent_TrainingPhrase_Part::kEntityTypeFieldNumber;
const int Intent_TrainingPhrase_Part::kAliasFieldNumber;
const int Intent_TrainingPhrase_Part::kUserDefinedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intent_TrainingPhrase_Part::Intent_TrainingPhrase_Part()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_TrainingPhrase_Part();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part)
}
Intent_TrainingPhrase_Part::Intent_TrainingPhrase_Part(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_TrainingPhrase_Part();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part)
}
Intent_TrainingPhrase_Part::Intent_TrainingPhrase_Part(const Intent_TrainingPhrase_Part& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text(),
      GetArenaNoVirtual());
  }
  entity_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.entity_type().size() > 0) {
    entity_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entity_type(),
      GetArenaNoVirtual());
  }
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.alias().size() > 0) {
    alias_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias(),
      GetArenaNoVirtual());
  }
  user_defined_ = from.user_defined_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part)
}

void Intent_TrainingPhrase_Part::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entity_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_defined_ = false;
  _cached_size_ = 0;
}

Intent_TrainingPhrase_Part::~Intent_TrainingPhrase_Part() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part)
  SharedDtor();
}

void Intent_TrainingPhrase_Part::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entity_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alias_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Intent_TrainingPhrase_Part::ArenaDtor(void* object) {
  Intent_TrainingPhrase_Part* _this = reinterpret_cast< Intent_TrainingPhrase_Part* >(object);
  (void)_this;
}
void Intent_TrainingPhrase_Part::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Intent_TrainingPhrase_Part::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Intent_TrainingPhrase_Part::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intent_TrainingPhrase_Part& Intent_TrainingPhrase_Part::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_TrainingPhrase_Part();
  return *internal_default_instance();
}

Intent_TrainingPhrase_Part* Intent_TrainingPhrase_Part::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Intent_TrainingPhrase_Part>(arena);
}

void Intent_TrainingPhrase_Part::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  entity_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  alias_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  user_defined_ = false;
  _internal_metadata_.Clear();
}

bool Intent_TrainingPhrase_Part::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string entity_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entity_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->entity_type().data(), static_cast<int>(this->entity_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.entity_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string alias = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alias()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->alias().data(), static_cast<int>(this->alias().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.alias"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool user_defined = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &user_defined_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part)
  return false;
#undef DO_
}

void Intent_TrainingPhrase_Part::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // string entity_type = 2;
  if (this->entity_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entity_type().data(), static_cast<int>(this->entity_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.entity_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->entity_type(), output);
  }

  // string alias = 3;
  if (this->alias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alias().data(), static_cast<int>(this->alias().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.alias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->alias(), output);
  }

  // bool user_defined = 4;
  if (this->user_defined() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->user_defined(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part)
}

::google::protobuf::uint8* Intent_TrainingPhrase_Part::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // string entity_type = 2;
  if (this->entity_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entity_type().data(), static_cast<int>(this->entity_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.entity_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->entity_type(), target);
  }

  // string alias = 3;
  if (this->alias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alias().data(), static_cast<int>(this->alias().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.alias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->alias(), target);
  }

  // bool user_defined = 4;
  if (this->user_defined() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->user_defined(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part)
  return target;
}

size_t Intent_TrainingPhrase_Part::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // string entity_type = 2;
  if (this->entity_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->entity_type());
  }

  // string alias = 3;
  if (this->alias().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->alias());
  }

  // bool user_defined = 4;
  if (this->user_defined() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intent_TrainingPhrase_Part::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part)
  GOOGLE_DCHECK_NE(&from, this);
  const Intent_TrainingPhrase_Part* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intent_TrainingPhrase_Part>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part)
    MergeFrom(*source);
  }
}

void Intent_TrainingPhrase_Part::MergeFrom(const Intent_TrainingPhrase_Part& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {
    set_text(from.text());
  }
  if (from.entity_type().size() > 0) {
    set_entity_type(from.entity_type());
  }
  if (from.alias().size() > 0) {
    set_alias(from.alias());
  }
  if (from.user_defined() != 0) {
    set_user_defined(from.user_defined());
  }
}

void Intent_TrainingPhrase_Part::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intent_TrainingPhrase_Part::CopyFrom(const Intent_TrainingPhrase_Part& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent_TrainingPhrase_Part::IsInitialized() const {
  return true;
}

void Intent_TrainingPhrase_Part::Swap(Intent_TrainingPhrase_Part* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Intent_TrainingPhrase_Part* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Intent_TrainingPhrase_Part::UnsafeArenaSwap(Intent_TrainingPhrase_Part* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Intent_TrainingPhrase_Part::InternalSwap(Intent_TrainingPhrase_Part* other) {
  using std::swap;
  text_.Swap(&other->text_);
  entity_type_.Swap(&other->entity_type_);
  alias_.Swap(&other->alias_);
  swap(user_defined_, other->user_defined_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Intent_TrainingPhrase_Part::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Intent_TrainingPhrase::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intent_TrainingPhrase::kNameFieldNumber;
const int Intent_TrainingPhrase::kTypeFieldNumber;
const int Intent_TrainingPhrase::kPartsFieldNumber;
const int Intent_TrainingPhrase::kTimesAddedCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intent_TrainingPhrase::Intent_TrainingPhrase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_TrainingPhrase();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase)
}
Intent_TrainingPhrase::Intent_TrainingPhrase(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  parts_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_TrainingPhrase();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase)
}
Intent_TrainingPhrase::Intent_TrainingPhrase(const Intent_TrainingPhrase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      parts_(from.parts_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&times_added_count_) -
    reinterpret_cast<char*>(&type_)) + sizeof(times_added_count_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase)
}

void Intent_TrainingPhrase::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&times_added_count_) -
      reinterpret_cast<char*>(&type_)) + sizeof(times_added_count_));
  _cached_size_ = 0;
}

Intent_TrainingPhrase::~Intent_TrainingPhrase() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase)
  SharedDtor();
}

void Intent_TrainingPhrase::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Intent_TrainingPhrase::ArenaDtor(void* object) {
  Intent_TrainingPhrase* _this = reinterpret_cast< Intent_TrainingPhrase* >(object);
  (void)_this;
}
void Intent_TrainingPhrase::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Intent_TrainingPhrase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Intent_TrainingPhrase::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intent_TrainingPhrase& Intent_TrainingPhrase::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_TrainingPhrase();
  return *internal_default_instance();
}

Intent_TrainingPhrase* Intent_TrainingPhrase::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Intent_TrainingPhrase>(arena);
}

void Intent_TrainingPhrase::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parts_.Clear();
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&times_added_count_) -
      reinterpret_cast<char*>(&type_)) + sizeof(times_added_count_));
  _internal_metadata_.Clear();
}

bool Intent_TrainingPhrase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Type type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part parts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_parts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 times_added_count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &times_added_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase)
  return false;
#undef DO_
}

void Intent_TrainingPhrase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Type type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part parts = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->parts(static_cast<int>(i)), output);
  }

  // int32 times_added_count = 4;
  if (this->times_added_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->times_added_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase)
}

::google::protobuf::uint8* Intent_TrainingPhrase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Type type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part parts = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->parts(static_cast<int>(i)), deterministic, target);
  }

  // int32 times_added_count = 4;
  if (this->times_added_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->times_added_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase)
  return target;
}

size_t Intent_TrainingPhrase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part parts = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->parts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->parts(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Type type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // int32 times_added_count = 4;
  if (this->times_added_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->times_added_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intent_TrainingPhrase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase)
  GOOGLE_DCHECK_NE(&from, this);
  const Intent_TrainingPhrase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intent_TrainingPhrase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase)
    MergeFrom(*source);
  }
}

void Intent_TrainingPhrase::MergeFrom(const Intent_TrainingPhrase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parts_.MergeFrom(from.parts_);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.times_added_count() != 0) {
    set_times_added_count(from.times_added_count());
  }
}

void Intent_TrainingPhrase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intent_TrainingPhrase::CopyFrom(const Intent_TrainingPhrase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent_TrainingPhrase::IsInitialized() const {
  return true;
}

void Intent_TrainingPhrase::Swap(Intent_TrainingPhrase* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Intent_TrainingPhrase* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Intent_TrainingPhrase::UnsafeArenaSwap(Intent_TrainingPhrase* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Intent_TrainingPhrase::InternalSwap(Intent_TrainingPhrase* other) {
  using std::swap;
  parts_.InternalSwap(&other->parts_);
  name_.Swap(&other->name_);
  swap(type_, other->type_);
  swap(times_added_count_, other->times_added_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Intent_TrainingPhrase::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Intent_Parameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intent_Parameter::kNameFieldNumber;
const int Intent_Parameter::kDisplayNameFieldNumber;
const int Intent_Parameter::kValueFieldNumber;
const int Intent_Parameter::kDefaultValueFieldNumber;
const int Intent_Parameter::kEntityTypeDisplayNameFieldNumber;
const int Intent_Parameter::kMandatoryFieldNumber;
const int Intent_Parameter::kPromptsFieldNumber;
const int Intent_Parameter::kIsListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intent_Parameter::Intent_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Parameter();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.Intent.Parameter)
}
Intent_Parameter::Intent_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  prompts_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Parameter();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.Intent.Parameter)
}
Intent_Parameter::Intent_Parameter(const Intent_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      prompts_(from.prompts_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name(),
      GetArenaNoVirtual());
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value(),
      GetArenaNoVirtual());
  }
  default_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.default_value().size() > 0) {
    default_value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_value(),
      GetArenaNoVirtual());
  }
  entity_type_display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.entity_type_display_name().size() > 0) {
    entity_type_display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entity_type_display_name(),
      GetArenaNoVirtual());
  }
  ::memcpy(&mandatory_, &from.mandatory_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_list_) -
    reinterpret_cast<char*>(&mandatory_)) + sizeof(is_list_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.Intent.Parameter)
}

void Intent_Parameter::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entity_type_display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mandatory_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_list_) -
      reinterpret_cast<char*>(&mandatory_)) + sizeof(is_list_));
  _cached_size_ = 0;
}

Intent_Parameter::~Intent_Parameter() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.Intent.Parameter)
  SharedDtor();
}

void Intent_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entity_type_display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Intent_Parameter::ArenaDtor(void* object) {
  Intent_Parameter* _this = reinterpret_cast< Intent_Parameter* >(object);
  (void)_this;
}
void Intent_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Intent_Parameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Intent_Parameter::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intent_Parameter& Intent_Parameter::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Parameter();
  return *internal_default_instance();
}

Intent_Parameter* Intent_Parameter::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Intent_Parameter>(arena);
}

void Intent_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.Intent.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prompts_.Clear();
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  display_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  value_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  default_value_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  entity_type_display_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&mandatory_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_list_) -
      reinterpret_cast<char*>(&mandatory_)) + sizeof(is_list_));
  _internal_metadata_.Clear();
}

bool Intent_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.Intent.Parameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Parameter.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Parameter.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Parameter.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string default_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->default_value().data(), static_cast<int>(this->default_value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Parameter.default_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string entity_type_display_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entity_type_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->entity_type_display_name().data(), static_cast<int>(this->entity_type_display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Parameter.entity_type_display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool mandatory = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &mandatory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string prompts = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_prompts()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->prompts(this->prompts_size() - 1).data(),
            static_cast<int>(this->prompts(this->prompts_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Parameter.prompts"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_list_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.Intent.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.Intent.Parameter)
  return false;
#undef DO_
}

void Intent_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.Intent.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Parameter.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Parameter.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->display_name(), output);
  }

  // string value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Parameter.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->value(), output);
  }

  // string default_value = 4;
  if (this->default_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_value().data(), static_cast<int>(this->default_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Parameter.default_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->default_value(), output);
  }

  // string entity_type_display_name = 5;
  if (this->entity_type_display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entity_type_display_name().data(), static_cast<int>(this->entity_type_display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Parameter.entity_type_display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->entity_type_display_name(), output);
  }

  // bool mandatory = 6;
  if (this->mandatory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->mandatory(), output);
  }

  // repeated string prompts = 7;
  for (int i = 0, n = this->prompts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prompts(i).data(), static_cast<int>(this->prompts(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Parameter.prompts");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->prompts(i), output);
  }

  // bool is_list = 8;
  if (this->is_list() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_list(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.Intent.Parameter)
}

::google::protobuf::uint8* Intent_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.Intent.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Parameter.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Parameter.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->display_name(), target);
  }

  // string value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Parameter.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->value(), target);
  }

  // string default_value = 4;
  if (this->default_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_value().data(), static_cast<int>(this->default_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Parameter.default_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->default_value(), target);
  }

  // string entity_type_display_name = 5;
  if (this->entity_type_display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entity_type_display_name().data(), static_cast<int>(this->entity_type_display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Parameter.entity_type_display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->entity_type_display_name(), target);
  }

  // bool mandatory = 6;
  if (this->mandatory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->mandatory(), target);
  }

  // repeated string prompts = 7;
  for (int i = 0, n = this->prompts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prompts(i).data(), static_cast<int>(this->prompts(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Parameter.prompts");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->prompts(i), target);
  }

  // bool is_list = 8;
  if (this->is_list() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_list(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.Intent.Parameter)
  return target;
}

size_t Intent_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.Intent.Parameter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string prompts = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->prompts_size());
  for (int i = 0, n = this->prompts_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->prompts(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // string value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // string default_value = 4;
  if (this->default_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->default_value());
  }

  // string entity_type_display_name = 5;
  if (this->entity_type_display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->entity_type_display_name());
  }

  // bool mandatory = 6;
  if (this->mandatory() != 0) {
    total_size += 1 + 1;
  }

  // bool is_list = 8;
  if (this->is_list() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intent_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const Intent_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intent_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.Intent.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.Intent.Parameter)
    MergeFrom(*source);
  }
}

void Intent_Parameter::MergeFrom(const Intent_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  prompts_.MergeFrom(from.prompts_);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.display_name().size() > 0) {
    set_display_name(from.display_name());
  }
  if (from.value().size() > 0) {
    set_value(from.value());
  }
  if (from.default_value().size() > 0) {
    set_default_value(from.default_value());
  }
  if (from.entity_type_display_name().size() > 0) {
    set_entity_type_display_name(from.entity_type_display_name());
  }
  if (from.mandatory() != 0) {
    set_mandatory(from.mandatory());
  }
  if (from.is_list() != 0) {
    set_is_list(from.is_list());
  }
}

void Intent_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intent_Parameter::CopyFrom(const Intent_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent_Parameter::IsInitialized() const {
  return true;
}

void Intent_Parameter::Swap(Intent_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Intent_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Intent_Parameter::UnsafeArenaSwap(Intent_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Intent_Parameter::InternalSwap(Intent_Parameter* other) {
  using std::swap;
  prompts_.InternalSwap(&other->prompts_);
  name_.Swap(&other->name_);
  display_name_.Swap(&other->display_name_);
  value_.Swap(&other->value_);
  default_value_.Swap(&other->default_value_);
  entity_type_display_name_.Swap(&other->entity_type_display_name_);
  swap(mandatory_, other->mandatory_);
  swap(is_list_, other->is_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Intent_Parameter::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Intent_Message_Text::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intent_Message_Text::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intent_Message_Text::Intent_Message_Text()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Text();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.Intent.Message.Text)
}
Intent_Message_Text::Intent_Message_Text(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  text_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Text();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.Text)
}
Intent_Message_Text::Intent_Message_Text(const Intent_Message_Text& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      text_(from.text_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.Text)
}

void Intent_Message_Text::SharedCtor() {
  _cached_size_ = 0;
}

Intent_Message_Text::~Intent_Message_Text() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.Intent.Message.Text)
  SharedDtor();
}

void Intent_Message_Text::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void Intent_Message_Text::ArenaDtor(void* object) {
  Intent_Message_Text* _this = reinterpret_cast< Intent_Message_Text* >(object);
  (void)_this;
}
void Intent_Message_Text::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Intent_Message_Text::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Intent_Message_Text::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intent_Message_Text& Intent_Message_Text::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Text();
  return *internal_default_instance();
}

Intent_Message_Text* Intent_Message_Text::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Intent_Message_Text>(arena);
}

void Intent_Message_Text::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.Intent.Message.Text)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.Clear();
  _internal_metadata_.Clear();
}

bool Intent_Message_Text::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.Intent.Message.Text)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text(this->text_size() - 1).data(),
            static_cast<int>(this->text(this->text_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.Text.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.Intent.Message.Text)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.Intent.Message.Text)
  return false;
#undef DO_
}

void Intent_Message_Text::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.Intent.Message.Text)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string text = 1;
  for (int i = 0, n = this->text_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text(i).data(), static_cast<int>(this->text(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.Text.text");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->text(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.Intent.Message.Text)
}

::google::protobuf::uint8* Intent_Message_Text::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.Intent.Message.Text)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string text = 1;
  for (int i = 0, n = this->text_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text(i).data(), static_cast<int>(this->text(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.Text.text");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->text(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.Intent.Message.Text)
  return target;
}

size_t Intent_Message_Text::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.Intent.Message.Text)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string text = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->text_size());
  for (int i = 0, n = this->text_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->text(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intent_Message_Text::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.Text)
  GOOGLE_DCHECK_NE(&from, this);
  const Intent_Message_Text* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intent_Message_Text>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.Intent.Message.Text)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.Intent.Message.Text)
    MergeFrom(*source);
  }
}

void Intent_Message_Text::MergeFrom(const Intent_Message_Text& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.Text)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  text_.MergeFrom(from.text_);
}

void Intent_Message_Text::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.Text)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intent_Message_Text::CopyFrom(const Intent_Message_Text& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.Text)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent_Message_Text::IsInitialized() const {
  return true;
}

void Intent_Message_Text::Swap(Intent_Message_Text* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Intent_Message_Text* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Intent_Message_Text::UnsafeArenaSwap(Intent_Message_Text* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Intent_Message_Text::InternalSwap(Intent_Message_Text* other) {
  using std::swap;
  text_.InternalSwap(&other->text_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Intent_Message_Text::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Intent_Message_Image::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intent_Message_Image::kImageUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intent_Message_Image::Intent_Message_Image()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Image();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.Intent.Message.Image)
}
Intent_Message_Image::Intent_Message_Image(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Image();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.Image)
}
Intent_Message_Image::Intent_Message_Image(const Intent_Message_Image& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  image_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_uri().size() > 0) {
    image_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_uri(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.Image)
}

void Intent_Message_Image::SharedCtor() {
  image_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Intent_Message_Image::~Intent_Message_Image() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.Intent.Message.Image)
  SharedDtor();
}

void Intent_Message_Image::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  image_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Intent_Message_Image::ArenaDtor(void* object) {
  Intent_Message_Image* _this = reinterpret_cast< Intent_Message_Image* >(object);
  (void)_this;
}
void Intent_Message_Image::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Intent_Message_Image::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Intent_Message_Image::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intent_Message_Image& Intent_Message_Image::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Image();
  return *internal_default_instance();
}

Intent_Message_Image* Intent_Message_Image::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Intent_Message_Image>(arena);
}

void Intent_Message_Image::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.Intent.Message.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_uri_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool Intent_Message_Image::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.Intent.Message.Image)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string image_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image_uri().data(), static_cast<int>(this->image_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.Image.image_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.Intent.Message.Image)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.Intent.Message.Image)
  return false;
#undef DO_
}

void Intent_Message_Image::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.Intent.Message.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string image_uri = 1;
  if (this->image_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_uri().data(), static_cast<int>(this->image_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.Image.image_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->image_uri(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.Intent.Message.Image)
}

::google::protobuf::uint8* Intent_Message_Image::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.Intent.Message.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string image_uri = 1;
  if (this->image_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_uri().data(), static_cast<int>(this->image_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.Image.image_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->image_uri(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.Intent.Message.Image)
  return target;
}

size_t Intent_Message_Image::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.Intent.Message.Image)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string image_uri = 1;
  if (this->image_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_uri());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intent_Message_Image::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.Image)
  GOOGLE_DCHECK_NE(&from, this);
  const Intent_Message_Image* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intent_Message_Image>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.Intent.Message.Image)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.Intent.Message.Image)
    MergeFrom(*source);
  }
}

void Intent_Message_Image::MergeFrom(const Intent_Message_Image& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.Image)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.image_uri().size() > 0) {
    set_image_uri(from.image_uri());
  }
}

void Intent_Message_Image::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intent_Message_Image::CopyFrom(const Intent_Message_Image& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent_Message_Image::IsInitialized() const {
  return true;
}

void Intent_Message_Image::Swap(Intent_Message_Image* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Intent_Message_Image* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Intent_Message_Image::UnsafeArenaSwap(Intent_Message_Image* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Intent_Message_Image::InternalSwap(Intent_Message_Image* other) {
  using std::swap;
  image_uri_.Swap(&other->image_uri_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Intent_Message_Image::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Intent_Message_QuickReplies::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intent_Message_QuickReplies::kTitleFieldNumber;
const int Intent_Message_QuickReplies::kQuickRepliesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intent_Message_QuickReplies::Intent_Message_QuickReplies()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_QuickReplies();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies)
}
Intent_Message_QuickReplies::Intent_Message_QuickReplies(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  quick_replies_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_QuickReplies();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies)
}
Intent_Message_QuickReplies::Intent_Message_QuickReplies(const Intent_Message_QuickReplies& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      quick_replies_(from.quick_replies_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies)
}

void Intent_Message_QuickReplies::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Intent_Message_QuickReplies::~Intent_Message_QuickReplies() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies)
  SharedDtor();
}

void Intent_Message_QuickReplies::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Intent_Message_QuickReplies::ArenaDtor(void* object) {
  Intent_Message_QuickReplies* _this = reinterpret_cast< Intent_Message_QuickReplies* >(object);
  (void)_this;
}
void Intent_Message_QuickReplies::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Intent_Message_QuickReplies::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Intent_Message_QuickReplies::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intent_Message_QuickReplies& Intent_Message_QuickReplies::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_QuickReplies();
  return *internal_default_instance();
}

Intent_Message_QuickReplies* Intent_Message_QuickReplies::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Intent_Message_QuickReplies>(arena);
}

void Intent_Message_QuickReplies::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quick_replies_.Clear();
  title_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool Intent_Message_QuickReplies::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string quick_replies = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_quick_replies()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->quick_replies(this->quick_replies_size() - 1).data(),
            static_cast<int>(this->quick_replies(this->quick_replies_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.quick_replies"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies)
  return false;
#undef DO_
}

void Intent_Message_QuickReplies::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // repeated string quick_replies = 2;
  for (int i = 0, n = this->quick_replies_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->quick_replies(i).data(), static_cast<int>(this->quick_replies(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.quick_replies");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->quick_replies(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies)
}

::google::protobuf::uint8* Intent_Message_QuickReplies::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // repeated string quick_replies = 2;
  for (int i = 0, n = this->quick_replies_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->quick_replies(i).data(), static_cast<int>(this->quick_replies(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.quick_replies");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->quick_replies(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies)
  return target;
}

size_t Intent_Message_QuickReplies::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string quick_replies = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->quick_replies_size());
  for (int i = 0, n = this->quick_replies_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->quick_replies(i));
  }

  // string title = 1;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intent_Message_QuickReplies::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies)
  GOOGLE_DCHECK_NE(&from, this);
  const Intent_Message_QuickReplies* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intent_Message_QuickReplies>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies)
    MergeFrom(*source);
  }
}

void Intent_Message_QuickReplies::MergeFrom(const Intent_Message_QuickReplies& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  quick_replies_.MergeFrom(from.quick_replies_);
  if (from.title().size() > 0) {
    set_title(from.title());
  }
}

void Intent_Message_QuickReplies::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intent_Message_QuickReplies::CopyFrom(const Intent_Message_QuickReplies& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent_Message_QuickReplies::IsInitialized() const {
  return true;
}

void Intent_Message_QuickReplies::Swap(Intent_Message_QuickReplies* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Intent_Message_QuickReplies* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Intent_Message_QuickReplies::UnsafeArenaSwap(Intent_Message_QuickReplies* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Intent_Message_QuickReplies::InternalSwap(Intent_Message_QuickReplies* other) {
  using std::swap;
  quick_replies_.InternalSwap(&other->quick_replies_);
  title_.Swap(&other->title_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Intent_Message_QuickReplies::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Intent_Message_Card_Button::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intent_Message_Card_Button::kTextFieldNumber;
const int Intent_Message_Card_Button::kPostbackFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intent_Message_Card_Button::Intent_Message_Card_Button()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Card_Button();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button)
}
Intent_Message_Card_Button::Intent_Message_Card_Button(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Card_Button();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button)
}
Intent_Message_Card_Button::Intent_Message_Card_Button(const Intent_Message_Card_Button& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text(),
      GetArenaNoVirtual());
  }
  postback_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.postback().size() > 0) {
    postback_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.postback(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button)
}

void Intent_Message_Card_Button::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  postback_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Intent_Message_Card_Button::~Intent_Message_Card_Button() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button)
  SharedDtor();
}

void Intent_Message_Card_Button::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  postback_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Intent_Message_Card_Button::ArenaDtor(void* object) {
  Intent_Message_Card_Button* _this = reinterpret_cast< Intent_Message_Card_Button* >(object);
  (void)_this;
}
void Intent_Message_Card_Button::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Intent_Message_Card_Button::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Intent_Message_Card_Button::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intent_Message_Card_Button& Intent_Message_Card_Button::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Card_Button();
  return *internal_default_instance();
}

Intent_Message_Card_Button* Intent_Message_Card_Button::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Intent_Message_Card_Button>(arena);
}

void Intent_Message_Card_Button::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  postback_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool Intent_Message_Card_Button::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string postback = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_postback()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->postback().data(), static_cast<int>(this->postback().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.postback"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button)
  return false;
#undef DO_
}

void Intent_Message_Card_Button::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // string postback = 2;
  if (this->postback().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->postback().data(), static_cast<int>(this->postback().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.postback");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->postback(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button)
}

::google::protobuf::uint8* Intent_Message_Card_Button::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // string postback = 2;
  if (this->postback().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->postback().data(), static_cast<int>(this->postback().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.postback");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->postback(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button)
  return target;
}

size_t Intent_Message_Card_Button::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // string postback = 2;
  if (this->postback().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->postback());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intent_Message_Card_Button::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button)
  GOOGLE_DCHECK_NE(&from, this);
  const Intent_Message_Card_Button* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intent_Message_Card_Button>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button)
    MergeFrom(*source);
  }
}

void Intent_Message_Card_Button::MergeFrom(const Intent_Message_Card_Button& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {
    set_text(from.text());
  }
  if (from.postback().size() > 0) {
    set_postback(from.postback());
  }
}

void Intent_Message_Card_Button::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intent_Message_Card_Button::CopyFrom(const Intent_Message_Card_Button& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent_Message_Card_Button::IsInitialized() const {
  return true;
}

void Intent_Message_Card_Button::Swap(Intent_Message_Card_Button* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Intent_Message_Card_Button* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Intent_Message_Card_Button::UnsafeArenaSwap(Intent_Message_Card_Button* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Intent_Message_Card_Button::InternalSwap(Intent_Message_Card_Button* other) {
  using std::swap;
  text_.Swap(&other->text_);
  postback_.Swap(&other->postback_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Intent_Message_Card_Button::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Intent_Message_Card::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intent_Message_Card::kTitleFieldNumber;
const int Intent_Message_Card::kSubtitleFieldNumber;
const int Intent_Message_Card::kImageUriFieldNumber;
const int Intent_Message_Card::kButtonsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intent_Message_Card::Intent_Message_Card()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Card();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.Intent.Message.Card)
}
Intent_Message_Card::Intent_Message_Card(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  buttons_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Card();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.Card)
}
Intent_Message_Card::Intent_Message_Card(const Intent_Message_Card& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      buttons_(from.buttons_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title(),
      GetArenaNoVirtual());
  }
  subtitle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subtitle().size() > 0) {
    subtitle_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subtitle(),
      GetArenaNoVirtual());
  }
  image_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_uri().size() > 0) {
    image_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_uri(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.Card)
}

void Intent_Message_Card::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subtitle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Intent_Message_Card::~Intent_Message_Card() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.Intent.Message.Card)
  SharedDtor();
}

void Intent_Message_Card::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subtitle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Intent_Message_Card::ArenaDtor(void* object) {
  Intent_Message_Card* _this = reinterpret_cast< Intent_Message_Card* >(object);
  (void)_this;
}
void Intent_Message_Card::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Intent_Message_Card::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Intent_Message_Card::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intent_Message_Card& Intent_Message_Card::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Card();
  return *internal_default_instance();
}

Intent_Message_Card* Intent_Message_Card::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Intent_Message_Card>(arena);
}

void Intent_Message_Card::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.Intent.Message.Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buttons_.Clear();
  title_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  subtitle_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  image_uri_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool Intent_Message_Card::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.Intent.Message.Card)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.Card.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subtitle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subtitle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subtitle().data(), static_cast<int>(this->subtitle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.Card.subtitle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string image_uri = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image_uri().data(), static_cast<int>(this->image_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.Card.image_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button buttons = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_buttons()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.Intent.Message.Card)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.Intent.Message.Card)
  return false;
#undef DO_
}

void Intent_Message_Card::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.Intent.Message.Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.Card.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // string subtitle = 2;
  if (this->subtitle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subtitle().data(), static_cast<int>(this->subtitle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.Card.subtitle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->subtitle(), output);
  }

  // string image_uri = 3;
  if (this->image_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_uri().data(), static_cast<int>(this->image_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.Card.image_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->image_uri(), output);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button buttons = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->buttons_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->buttons(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.Intent.Message.Card)
}

::google::protobuf::uint8* Intent_Message_Card::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.Intent.Message.Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.Card.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // string subtitle = 2;
  if (this->subtitle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subtitle().data(), static_cast<int>(this->subtitle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.Card.subtitle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->subtitle(), target);
  }

  // string image_uri = 3;
  if (this->image_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_uri().data(), static_cast<int>(this->image_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.Card.image_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->image_uri(), target);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button buttons = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->buttons_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->buttons(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.Intent.Message.Card)
  return target;
}

size_t Intent_Message_Card::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.Intent.Message.Card)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button buttons = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->buttons_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->buttons(static_cast<int>(i)));
    }
  }

  // string title = 1;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string subtitle = 2;
  if (this->subtitle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subtitle());
  }

  // string image_uri = 3;
  if (this->image_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_uri());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intent_Message_Card::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.Card)
  GOOGLE_DCHECK_NE(&from, this);
  const Intent_Message_Card* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intent_Message_Card>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.Intent.Message.Card)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.Intent.Message.Card)
    MergeFrom(*source);
  }
}

void Intent_Message_Card::MergeFrom(const Intent_Message_Card& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.Card)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  buttons_.MergeFrom(from.buttons_);
  if (from.title().size() > 0) {
    set_title(from.title());
  }
  if (from.subtitle().size() > 0) {
    set_subtitle(from.subtitle());
  }
  if (from.image_uri().size() > 0) {
    set_image_uri(from.image_uri());
  }
}

void Intent_Message_Card::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.Card)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intent_Message_Card::CopyFrom(const Intent_Message_Card& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.Card)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent_Message_Card::IsInitialized() const {
  return true;
}

void Intent_Message_Card::Swap(Intent_Message_Card* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Intent_Message_Card* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Intent_Message_Card::UnsafeArenaSwap(Intent_Message_Card* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Intent_Message_Card::InternalSwap(Intent_Message_Card* other) {
  using std::swap;
  buttons_.InternalSwap(&other->buttons_);
  title_.Swap(&other->title_);
  subtitle_.Swap(&other->subtitle_);
  image_uri_.Swap(&other->image_uri_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Intent_Message_Card::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Intent_Message_SimpleResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intent_Message_SimpleResponse::kTextToSpeechFieldNumber;
const int Intent_Message_SimpleResponse::kSsmlFieldNumber;
const int Intent_Message_SimpleResponse::kDisplayTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intent_Message_SimpleResponse::Intent_Message_SimpleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_SimpleResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse)
}
Intent_Message_SimpleResponse::Intent_Message_SimpleResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_SimpleResponse();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse)
}
Intent_Message_SimpleResponse::Intent_Message_SimpleResponse(const Intent_Message_SimpleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_to_speech_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text_to_speech().size() > 0) {
    text_to_speech_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_to_speech(),
      GetArenaNoVirtual());
  }
  ssml_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ssml().size() > 0) {
    ssml_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ssml(),
      GetArenaNoVirtual());
  }
  display_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_text().size() > 0) {
    display_text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_text(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse)
}

void Intent_Message_SimpleResponse::SharedCtor() {
  text_to_speech_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ssml_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Intent_Message_SimpleResponse::~Intent_Message_SimpleResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse)
  SharedDtor();
}

void Intent_Message_SimpleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  text_to_speech_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ssml_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Intent_Message_SimpleResponse::ArenaDtor(void* object) {
  Intent_Message_SimpleResponse* _this = reinterpret_cast< Intent_Message_SimpleResponse* >(object);
  (void)_this;
}
void Intent_Message_SimpleResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Intent_Message_SimpleResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Intent_Message_SimpleResponse::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intent_Message_SimpleResponse& Intent_Message_SimpleResponse::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_SimpleResponse();
  return *internal_default_instance();
}

Intent_Message_SimpleResponse* Intent_Message_SimpleResponse::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Intent_Message_SimpleResponse>(arena);
}

void Intent_Message_SimpleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_to_speech_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ssml_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  display_text_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool Intent_Message_SimpleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text_to_speech = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text_to_speech()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text_to_speech().data(), static_cast<int>(this->text_to_speech().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.text_to_speech"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ssml = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ssml()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ssml().data(), static_cast<int>(this->ssml().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.ssml"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_text = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_text().data(), static_cast<int>(this->display_text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.display_text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse)
  return false;
#undef DO_
}

void Intent_Message_SimpleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text_to_speech = 1;
  if (this->text_to_speech().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text_to_speech().data(), static_cast<int>(this->text_to_speech().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.text_to_speech");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text_to_speech(), output);
  }

  // string ssml = 2;
  if (this->ssml().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ssml().data(), static_cast<int>(this->ssml().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.ssml");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ssml(), output);
  }

  // string display_text = 3;
  if (this->display_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_text().data(), static_cast<int>(this->display_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.display_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->display_text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse)
}

::google::protobuf::uint8* Intent_Message_SimpleResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text_to_speech = 1;
  if (this->text_to_speech().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text_to_speech().data(), static_cast<int>(this->text_to_speech().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.text_to_speech");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text_to_speech(), target);
  }

  // string ssml = 2;
  if (this->ssml().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ssml().data(), static_cast<int>(this->ssml().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.ssml");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ssml(), target);
  }

  // string display_text = 3;
  if (this->display_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_text().data(), static_cast<int>(this->display_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.display_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->display_text(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse)
  return target;
}

size_t Intent_Message_SimpleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string text_to_speech = 1;
  if (this->text_to_speech().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text_to_speech());
  }

  // string ssml = 2;
  if (this->ssml().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ssml());
  }

  // string display_text = 3;
  if (this->display_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intent_Message_SimpleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Intent_Message_SimpleResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intent_Message_SimpleResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse)
    MergeFrom(*source);
  }
}

void Intent_Message_SimpleResponse::MergeFrom(const Intent_Message_SimpleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text_to_speech().size() > 0) {
    set_text_to_speech(from.text_to_speech());
  }
  if (from.ssml().size() > 0) {
    set_ssml(from.ssml());
  }
  if (from.display_text().size() > 0) {
    set_display_text(from.display_text());
  }
}

void Intent_Message_SimpleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intent_Message_SimpleResponse::CopyFrom(const Intent_Message_SimpleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent_Message_SimpleResponse::IsInitialized() const {
  return true;
}

void Intent_Message_SimpleResponse::Swap(Intent_Message_SimpleResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Intent_Message_SimpleResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Intent_Message_SimpleResponse::UnsafeArenaSwap(Intent_Message_SimpleResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Intent_Message_SimpleResponse::InternalSwap(Intent_Message_SimpleResponse* other) {
  using std::swap;
  text_to_speech_.Swap(&other->text_to_speech_);
  ssml_.Swap(&other->ssml_);
  display_text_.Swap(&other->display_text_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Intent_Message_SimpleResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Intent_Message_SimpleResponses::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intent_Message_SimpleResponses::kSimpleResponsesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intent_Message_SimpleResponses::Intent_Message_SimpleResponses()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_SimpleResponses();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses)
}
Intent_Message_SimpleResponses::Intent_Message_SimpleResponses(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  simple_responses_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_SimpleResponses();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses)
}
Intent_Message_SimpleResponses::Intent_Message_SimpleResponses(const Intent_Message_SimpleResponses& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      simple_responses_(from.simple_responses_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses)
}

void Intent_Message_SimpleResponses::SharedCtor() {
  _cached_size_ = 0;
}

Intent_Message_SimpleResponses::~Intent_Message_SimpleResponses() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses)
  SharedDtor();
}

void Intent_Message_SimpleResponses::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void Intent_Message_SimpleResponses::ArenaDtor(void* object) {
  Intent_Message_SimpleResponses* _this = reinterpret_cast< Intent_Message_SimpleResponses* >(object);
  (void)_this;
}
void Intent_Message_SimpleResponses::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Intent_Message_SimpleResponses::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Intent_Message_SimpleResponses::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intent_Message_SimpleResponses& Intent_Message_SimpleResponses::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_SimpleResponses();
  return *internal_default_instance();
}

Intent_Message_SimpleResponses* Intent_Message_SimpleResponses::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Intent_Message_SimpleResponses>(arena);
}

void Intent_Message_SimpleResponses::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  simple_responses_.Clear();
  _internal_metadata_.Clear();
}

bool Intent_Message_SimpleResponses::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse simple_responses = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_simple_responses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses)
  return false;
#undef DO_
}

void Intent_Message_SimpleResponses::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse simple_responses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->simple_responses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->simple_responses(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses)
}

::google::protobuf::uint8* Intent_Message_SimpleResponses::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse simple_responses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->simple_responses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->simple_responses(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses)
  return target;
}

size_t Intent_Message_SimpleResponses::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse simple_responses = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->simple_responses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->simple_responses(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intent_Message_SimpleResponses::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses)
  GOOGLE_DCHECK_NE(&from, this);
  const Intent_Message_SimpleResponses* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intent_Message_SimpleResponses>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses)
    MergeFrom(*source);
  }
}

void Intent_Message_SimpleResponses::MergeFrom(const Intent_Message_SimpleResponses& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  simple_responses_.MergeFrom(from.simple_responses_);
}

void Intent_Message_SimpleResponses::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intent_Message_SimpleResponses::CopyFrom(const Intent_Message_SimpleResponses& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent_Message_SimpleResponses::IsInitialized() const {
  return true;
}

void Intent_Message_SimpleResponses::Swap(Intent_Message_SimpleResponses* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Intent_Message_SimpleResponses* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Intent_Message_SimpleResponses::UnsafeArenaSwap(Intent_Message_SimpleResponses* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Intent_Message_SimpleResponses::InternalSwap(Intent_Message_SimpleResponses* other) {
  using std::swap;
  simple_responses_.InternalSwap(&other->simple_responses_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Intent_Message_SimpleResponses::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Intent_Message_BasicCard_Button_OpenUriAction::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intent_Message_BasicCard_Button_OpenUriAction::kUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intent_Message_BasicCard_Button_OpenUriAction::Intent_Message_BasicCard_Button_OpenUriAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_BasicCard_Button_OpenUriAction();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction)
}
Intent_Message_BasicCard_Button_OpenUriAction::Intent_Message_BasicCard_Button_OpenUriAction(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_BasicCard_Button_OpenUriAction();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction)
}
Intent_Message_BasicCard_Button_OpenUriAction::Intent_Message_BasicCard_Button_OpenUriAction(const Intent_Message_BasicCard_Button_OpenUriAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction)
}

void Intent_Message_BasicCard_Button_OpenUriAction::SharedCtor() {
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Intent_Message_BasicCard_Button_OpenUriAction::~Intent_Message_BasicCard_Button_OpenUriAction() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction)
  SharedDtor();
}

void Intent_Message_BasicCard_Button_OpenUriAction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Intent_Message_BasicCard_Button_OpenUriAction::ArenaDtor(void* object) {
  Intent_Message_BasicCard_Button_OpenUriAction* _this = reinterpret_cast< Intent_Message_BasicCard_Button_OpenUriAction* >(object);
  (void)_this;
}
void Intent_Message_BasicCard_Button_OpenUriAction::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Intent_Message_BasicCard_Button_OpenUriAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Intent_Message_BasicCard_Button_OpenUriAction::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intent_Message_BasicCard_Button_OpenUriAction& Intent_Message_BasicCard_Button_OpenUriAction::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_BasicCard_Button_OpenUriAction();
  return *internal_default_instance();
}

Intent_Message_BasicCard_Button_OpenUriAction* Intent_Message_BasicCard_Button_OpenUriAction::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Intent_Message_BasicCard_Button_OpenUriAction>(arena);
}

void Intent_Message_BasicCard_Button_OpenUriAction::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool Intent_Message_BasicCard_Button_OpenUriAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction)
  return false;
#undef DO_
}

void Intent_Message_BasicCard_Button_OpenUriAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uri(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction)
}

::google::protobuf::uint8* Intent_Message_BasicCard_Button_OpenUriAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uri(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction)
  return target;
}

size_t Intent_Message_BasicCard_Button_OpenUriAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uri = 1;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intent_Message_BasicCard_Button_OpenUriAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction)
  GOOGLE_DCHECK_NE(&from, this);
  const Intent_Message_BasicCard_Button_OpenUriAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intent_Message_BasicCard_Button_OpenUriAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction)
    MergeFrom(*source);
  }
}

void Intent_Message_BasicCard_Button_OpenUriAction::MergeFrom(const Intent_Message_BasicCard_Button_OpenUriAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uri().size() > 0) {
    set_uri(from.uri());
  }
}

void Intent_Message_BasicCard_Button_OpenUriAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intent_Message_BasicCard_Button_OpenUriAction::CopyFrom(const Intent_Message_BasicCard_Button_OpenUriAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent_Message_BasicCard_Button_OpenUriAction::IsInitialized() const {
  return true;
}

void Intent_Message_BasicCard_Button_OpenUriAction::Swap(Intent_Message_BasicCard_Button_OpenUriAction* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Intent_Message_BasicCard_Button_OpenUriAction* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Intent_Message_BasicCard_Button_OpenUriAction::UnsafeArenaSwap(Intent_Message_BasicCard_Button_OpenUriAction* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Intent_Message_BasicCard_Button_OpenUriAction::InternalSwap(Intent_Message_BasicCard_Button_OpenUriAction* other) {
  using std::swap;
  uri_.Swap(&other->uri_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Intent_Message_BasicCard_Button_OpenUriAction::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Intent_Message_BasicCard_Button::InitAsDefaultInstance() {
  ::google::cloud::dialogflow::v2beta1::_Intent_Message_BasicCard_Button_default_instance_._instance.get_mutable()->open_uri_action_ = const_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction*>(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction::internal_default_instance());
}
void Intent_Message_BasicCard_Button::_slow_mutable_open_uri_action() {
  open_uri_action_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction >(
      GetArenaNoVirtual());
}
void Intent_Message_BasicCard_Button::unsafe_arena_set_allocated_open_uri_action(
    ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction* open_uri_action) {
  if (GetArenaNoVirtual() == NULL) {
    delete open_uri_action_;
  }
  open_uri_action_ = open_uri_action;
  if (open_uri_action) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.open_uri_action)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intent_Message_BasicCard_Button::kTitleFieldNumber;
const int Intent_Message_BasicCard_Button::kOpenUriActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intent_Message_BasicCard_Button::Intent_Message_BasicCard_Button()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_BasicCard_Button();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button)
}
Intent_Message_BasicCard_Button::Intent_Message_BasicCard_Button(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_BasicCard_Button();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button)
}
Intent_Message_BasicCard_Button::Intent_Message_BasicCard_Button(const Intent_Message_BasicCard_Button& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title(),
      GetArenaNoVirtual());
  }
  if (from.has_open_uri_action()) {
    open_uri_action_ = new ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction(*from.open_uri_action_);
  } else {
    open_uri_action_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button)
}

void Intent_Message_BasicCard_Button::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  open_uri_action_ = NULL;
  _cached_size_ = 0;
}

Intent_Message_BasicCard_Button::~Intent_Message_BasicCard_Button() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button)
  SharedDtor();
}

void Intent_Message_BasicCard_Button::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete open_uri_action_;
}

void Intent_Message_BasicCard_Button::ArenaDtor(void* object) {
  Intent_Message_BasicCard_Button* _this = reinterpret_cast< Intent_Message_BasicCard_Button* >(object);
  (void)_this;
}
void Intent_Message_BasicCard_Button::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Intent_Message_BasicCard_Button::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Intent_Message_BasicCard_Button::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intent_Message_BasicCard_Button& Intent_Message_BasicCard_Button::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_BasicCard_Button();
  return *internal_default_instance();
}

Intent_Message_BasicCard_Button* Intent_Message_BasicCard_Button::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Intent_Message_BasicCard_Button>(arena);
}

void Intent_Message_BasicCard_Button::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && open_uri_action_ != NULL) {
    delete open_uri_action_;
  }
  open_uri_action_ = NULL;
  _internal_metadata_.Clear();
}

bool Intent_Message_BasicCard_Button::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction open_uri_action = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_open_uri_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button)
  return false;
#undef DO_
}

void Intent_Message_BasicCard_Button::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction open_uri_action = 2;
  if (this->has_open_uri_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->open_uri_action_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button)
}

::google::protobuf::uint8* Intent_Message_BasicCard_Button::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction open_uri_action = 2;
  if (this->has_open_uri_action()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->open_uri_action_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button)
  return target;
}

size_t Intent_Message_BasicCard_Button::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string title = 1;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction open_uri_action = 2;
  if (this->has_open_uri_action()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->open_uri_action_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intent_Message_BasicCard_Button::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button)
  GOOGLE_DCHECK_NE(&from, this);
  const Intent_Message_BasicCard_Button* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intent_Message_BasicCard_Button>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button)
    MergeFrom(*source);
  }
}

void Intent_Message_BasicCard_Button::MergeFrom(const Intent_Message_BasicCard_Button& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {
    set_title(from.title());
  }
  if (from.has_open_uri_action()) {
    mutable_open_uri_action()->::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction::MergeFrom(from.open_uri_action());
  }
}

void Intent_Message_BasicCard_Button::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intent_Message_BasicCard_Button::CopyFrom(const Intent_Message_BasicCard_Button& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent_Message_BasicCard_Button::IsInitialized() const {
  return true;
}

void Intent_Message_BasicCard_Button::Swap(Intent_Message_BasicCard_Button* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Intent_Message_BasicCard_Button* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Intent_Message_BasicCard_Button::UnsafeArenaSwap(Intent_Message_BasicCard_Button* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Intent_Message_BasicCard_Button::InternalSwap(Intent_Message_BasicCard_Button* other) {
  using std::swap;
  title_.Swap(&other->title_);
  swap(open_uri_action_, other->open_uri_action_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Intent_Message_BasicCard_Button::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Intent_Message_BasicCard::InitAsDefaultInstance() {
  ::google::cloud::dialogflow::v2beta1::_Intent_Message_BasicCard_default_instance_._instance.get_mutable()->image_ = const_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_Image*>(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_Image::internal_default_instance());
}
void Intent_Message_BasicCard::_slow_mutable_image() {
  image_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::Intent_Message_Image >(
      GetArenaNoVirtual());
}
void Intent_Message_BasicCard::unsafe_arena_set_allocated_image(
    ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* image) {
  if (GetArenaNoVirtual() == NULL) {
    delete image_;
  }
  image_ = image;
  if (image) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.image)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intent_Message_BasicCard::kTitleFieldNumber;
const int Intent_Message_BasicCard::kSubtitleFieldNumber;
const int Intent_Message_BasicCard::kFormattedTextFieldNumber;
const int Intent_Message_BasicCard::kImageFieldNumber;
const int Intent_Message_BasicCard::kButtonsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intent_Message_BasicCard::Intent_Message_BasicCard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_BasicCard();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard)
}
Intent_Message_BasicCard::Intent_Message_BasicCard(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  buttons_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_BasicCard();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard)
}
Intent_Message_BasicCard::Intent_Message_BasicCard(const Intent_Message_BasicCard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      buttons_(from.buttons_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title(),
      GetArenaNoVirtual());
  }
  subtitle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subtitle().size() > 0) {
    subtitle_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subtitle(),
      GetArenaNoVirtual());
  }
  formatted_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.formatted_text().size() > 0) {
    formatted_text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.formatted_text(),
      GetArenaNoVirtual());
  }
  if (from.has_image()) {
    image_ = new ::google::cloud::dialogflow::v2beta1::Intent_Message_Image(*from.image_);
  } else {
    image_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard)
}

void Intent_Message_BasicCard::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subtitle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  formatted_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_ = NULL;
  _cached_size_ = 0;
}

Intent_Message_BasicCard::~Intent_Message_BasicCard() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard)
  SharedDtor();
}

void Intent_Message_BasicCard::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subtitle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  formatted_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete image_;
}

void Intent_Message_BasicCard::ArenaDtor(void* object) {
  Intent_Message_BasicCard* _this = reinterpret_cast< Intent_Message_BasicCard* >(object);
  (void)_this;
}
void Intent_Message_BasicCard::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Intent_Message_BasicCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Intent_Message_BasicCard::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intent_Message_BasicCard& Intent_Message_BasicCard::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_BasicCard();
  return *internal_default_instance();
}

Intent_Message_BasicCard* Intent_Message_BasicCard::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Intent_Message_BasicCard>(arena);
}

void Intent_Message_BasicCard::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buttons_.Clear();
  title_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  subtitle_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  formatted_text_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && image_ != NULL) {
    delete image_;
  }
  image_ = NULL;
  _internal_metadata_.Clear();
}

bool Intent_Message_BasicCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subtitle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subtitle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subtitle().data(), static_cast<int>(this->subtitle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.subtitle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string formatted_text = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_formatted_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->formatted_text().data(), static_cast<int>(this->formatted_text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.formatted_text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.Intent.Message.Image image = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button buttons = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_buttons()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard)
  return false;
#undef DO_
}

void Intent_Message_BasicCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // string subtitle = 2;
  if (this->subtitle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subtitle().data(), static_cast<int>(this->subtitle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.subtitle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->subtitle(), output);
  }

  // string formatted_text = 3;
  if (this->formatted_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->formatted_text().data(), static_cast<int>(this->formatted_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.formatted_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->formatted_text(), output);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Image image = 4;
  if (this->has_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->image_, output);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button buttons = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->buttons_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->buttons(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard)
}

::google::protobuf::uint8* Intent_Message_BasicCard::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // string subtitle = 2;
  if (this->subtitle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subtitle().data(), static_cast<int>(this->subtitle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.subtitle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->subtitle(), target);
  }

  // string formatted_text = 3;
  if (this->formatted_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->formatted_text().data(), static_cast<int>(this->formatted_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.formatted_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->formatted_text(), target);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Image image = 4;
  if (this->has_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->image_, deterministic, target);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button buttons = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->buttons_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->buttons(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard)
  return target;
}

size_t Intent_Message_BasicCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button buttons = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->buttons_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->buttons(static_cast<int>(i)));
    }
  }

  // string title = 1;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string subtitle = 2;
  if (this->subtitle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subtitle());
  }

  // string formatted_text = 3;
  if (this->formatted_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->formatted_text());
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Image image = 4;
  if (this->has_image()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->image_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intent_Message_BasicCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard)
  GOOGLE_DCHECK_NE(&from, this);
  const Intent_Message_BasicCard* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intent_Message_BasicCard>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard)
    MergeFrom(*source);
  }
}

void Intent_Message_BasicCard::MergeFrom(const Intent_Message_BasicCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  buttons_.MergeFrom(from.buttons_);
  if (from.title().size() > 0) {
    set_title(from.title());
  }
  if (from.subtitle().size() > 0) {
    set_subtitle(from.subtitle());
  }
  if (from.formatted_text().size() > 0) {
    set_formatted_text(from.formatted_text());
  }
  if (from.has_image()) {
    mutable_image()->::google::cloud::dialogflow::v2beta1::Intent_Message_Image::MergeFrom(from.image());
  }
}

void Intent_Message_BasicCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intent_Message_BasicCard::CopyFrom(const Intent_Message_BasicCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent_Message_BasicCard::IsInitialized() const {
  return true;
}

void Intent_Message_BasicCard::Swap(Intent_Message_BasicCard* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Intent_Message_BasicCard* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Intent_Message_BasicCard::UnsafeArenaSwap(Intent_Message_BasicCard* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Intent_Message_BasicCard::InternalSwap(Intent_Message_BasicCard* other) {
  using std::swap;
  buttons_.InternalSwap(&other->buttons_);
  title_.Swap(&other->title_);
  subtitle_.Swap(&other->subtitle_);
  formatted_text_.Swap(&other->formatted_text_);
  swap(image_, other->image_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Intent_Message_BasicCard::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Intent_Message_Suggestion::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intent_Message_Suggestion::kTitleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intent_Message_Suggestion::Intent_Message_Suggestion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Suggestion();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion)
}
Intent_Message_Suggestion::Intent_Message_Suggestion(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Suggestion();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion)
}
Intent_Message_Suggestion::Intent_Message_Suggestion(const Intent_Message_Suggestion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion)
}

void Intent_Message_Suggestion::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Intent_Message_Suggestion::~Intent_Message_Suggestion() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion)
  SharedDtor();
}

void Intent_Message_Suggestion::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Intent_Message_Suggestion::ArenaDtor(void* object) {
  Intent_Message_Suggestion* _this = reinterpret_cast< Intent_Message_Suggestion* >(object);
  (void)_this;
}
void Intent_Message_Suggestion::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Intent_Message_Suggestion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Intent_Message_Suggestion::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intent_Message_Suggestion& Intent_Message_Suggestion::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Suggestion();
  return *internal_default_instance();
}

Intent_Message_Suggestion* Intent_Message_Suggestion::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Intent_Message_Suggestion>(arena);
}

void Intent_Message_Suggestion::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool Intent_Message_Suggestion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion)
  return false;
#undef DO_
}

void Intent_Message_Suggestion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion)
}

::google::protobuf::uint8* Intent_Message_Suggestion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion)
  return target;
}

size_t Intent_Message_Suggestion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string title = 1;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intent_Message_Suggestion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion)
  GOOGLE_DCHECK_NE(&from, this);
  const Intent_Message_Suggestion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intent_Message_Suggestion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion)
    MergeFrom(*source);
  }
}

void Intent_Message_Suggestion::MergeFrom(const Intent_Message_Suggestion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {
    set_title(from.title());
  }
}

void Intent_Message_Suggestion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intent_Message_Suggestion::CopyFrom(const Intent_Message_Suggestion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent_Message_Suggestion::IsInitialized() const {
  return true;
}

void Intent_Message_Suggestion::Swap(Intent_Message_Suggestion* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Intent_Message_Suggestion* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Intent_Message_Suggestion::UnsafeArenaSwap(Intent_Message_Suggestion* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Intent_Message_Suggestion::InternalSwap(Intent_Message_Suggestion* other) {
  using std::swap;
  title_.Swap(&other->title_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Intent_Message_Suggestion::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Intent_Message_Suggestions::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intent_Message_Suggestions::kSuggestionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intent_Message_Suggestions::Intent_Message_Suggestions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Suggestions();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions)
}
Intent_Message_Suggestions::Intent_Message_Suggestions(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  suggestions_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Suggestions();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions)
}
Intent_Message_Suggestions::Intent_Message_Suggestions(const Intent_Message_Suggestions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      suggestions_(from.suggestions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions)
}

void Intent_Message_Suggestions::SharedCtor() {
  _cached_size_ = 0;
}

Intent_Message_Suggestions::~Intent_Message_Suggestions() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions)
  SharedDtor();
}

void Intent_Message_Suggestions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void Intent_Message_Suggestions::ArenaDtor(void* object) {
  Intent_Message_Suggestions* _this = reinterpret_cast< Intent_Message_Suggestions* >(object);
  (void)_this;
}
void Intent_Message_Suggestions::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Intent_Message_Suggestions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Intent_Message_Suggestions::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intent_Message_Suggestions& Intent_Message_Suggestions::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Suggestions();
  return *internal_default_instance();
}

Intent_Message_Suggestions* Intent_Message_Suggestions::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Intent_Message_Suggestions>(arena);
}

void Intent_Message_Suggestions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suggestions_.Clear();
  _internal_metadata_.Clear();
}

bool Intent_Message_Suggestions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion suggestions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_suggestions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions)
  return false;
#undef DO_
}

void Intent_Message_Suggestions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion suggestions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->suggestions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->suggestions(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions)
}

::google::protobuf::uint8* Intent_Message_Suggestions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion suggestions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->suggestions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->suggestions(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions)
  return target;
}

size_t Intent_Message_Suggestions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion suggestions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->suggestions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->suggestions(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intent_Message_Suggestions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions)
  GOOGLE_DCHECK_NE(&from, this);
  const Intent_Message_Suggestions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intent_Message_Suggestions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions)
    MergeFrom(*source);
  }
}

void Intent_Message_Suggestions::MergeFrom(const Intent_Message_Suggestions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  suggestions_.MergeFrom(from.suggestions_);
}

void Intent_Message_Suggestions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intent_Message_Suggestions::CopyFrom(const Intent_Message_Suggestions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent_Message_Suggestions::IsInitialized() const {
  return true;
}

void Intent_Message_Suggestions::Swap(Intent_Message_Suggestions* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Intent_Message_Suggestions* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Intent_Message_Suggestions::UnsafeArenaSwap(Intent_Message_Suggestions* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Intent_Message_Suggestions::InternalSwap(Intent_Message_Suggestions* other) {
  using std::swap;
  suggestions_.InternalSwap(&other->suggestions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Intent_Message_Suggestions::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Intent_Message_LinkOutSuggestion::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intent_Message_LinkOutSuggestion::kDestinationNameFieldNumber;
const int Intent_Message_LinkOutSuggestion::kUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intent_Message_LinkOutSuggestion::Intent_Message_LinkOutSuggestion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_LinkOutSuggestion();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion)
}
Intent_Message_LinkOutSuggestion::Intent_Message_LinkOutSuggestion(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_LinkOutSuggestion();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion)
}
Intent_Message_LinkOutSuggestion::Intent_Message_LinkOutSuggestion(const Intent_Message_LinkOutSuggestion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  destination_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.destination_name().size() > 0) {
    destination_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_name(),
      GetArenaNoVirtual());
  }
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion)
}

void Intent_Message_LinkOutSuggestion::SharedCtor() {
  destination_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Intent_Message_LinkOutSuggestion::~Intent_Message_LinkOutSuggestion() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion)
  SharedDtor();
}

void Intent_Message_LinkOutSuggestion::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  destination_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Intent_Message_LinkOutSuggestion::ArenaDtor(void* object) {
  Intent_Message_LinkOutSuggestion* _this = reinterpret_cast< Intent_Message_LinkOutSuggestion* >(object);
  (void)_this;
}
void Intent_Message_LinkOutSuggestion::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Intent_Message_LinkOutSuggestion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Intent_Message_LinkOutSuggestion::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intent_Message_LinkOutSuggestion& Intent_Message_LinkOutSuggestion::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_LinkOutSuggestion();
  return *internal_default_instance();
}

Intent_Message_LinkOutSuggestion* Intent_Message_LinkOutSuggestion::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Intent_Message_LinkOutSuggestion>(arena);
}

void Intent_Message_LinkOutSuggestion::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  destination_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  uri_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool Intent_Message_LinkOutSuggestion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string destination_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destination_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destination_name().data(), static_cast<int>(this->destination_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.destination_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uri = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion)
  return false;
#undef DO_
}

void Intent_Message_LinkOutSuggestion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string destination_name = 1;
  if (this->destination_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination_name().data(), static_cast<int>(this->destination_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.destination_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->destination_name(), output);
  }

  // string uri = 2;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uri(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion)
}

::google::protobuf::uint8* Intent_Message_LinkOutSuggestion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string destination_name = 1;
  if (this->destination_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination_name().data(), static_cast<int>(this->destination_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.destination_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->destination_name(), target);
  }

  // string uri = 2;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uri(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion)
  return target;
}

size_t Intent_Message_LinkOutSuggestion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string destination_name = 1;
  if (this->destination_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destination_name());
  }

  // string uri = 2;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intent_Message_LinkOutSuggestion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion)
  GOOGLE_DCHECK_NE(&from, this);
  const Intent_Message_LinkOutSuggestion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intent_Message_LinkOutSuggestion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion)
    MergeFrom(*source);
  }
}

void Intent_Message_LinkOutSuggestion::MergeFrom(const Intent_Message_LinkOutSuggestion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.destination_name().size() > 0) {
    set_destination_name(from.destination_name());
  }
  if (from.uri().size() > 0) {
    set_uri(from.uri());
  }
}

void Intent_Message_LinkOutSuggestion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intent_Message_LinkOutSuggestion::CopyFrom(const Intent_Message_LinkOutSuggestion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent_Message_LinkOutSuggestion::IsInitialized() const {
  return true;
}

void Intent_Message_LinkOutSuggestion::Swap(Intent_Message_LinkOutSuggestion* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Intent_Message_LinkOutSuggestion* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Intent_Message_LinkOutSuggestion::UnsafeArenaSwap(Intent_Message_LinkOutSuggestion* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Intent_Message_LinkOutSuggestion::InternalSwap(Intent_Message_LinkOutSuggestion* other) {
  using std::swap;
  destination_name_.Swap(&other->destination_name_);
  uri_.Swap(&other->uri_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Intent_Message_LinkOutSuggestion::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Intent_Message_ListSelect_Item::InitAsDefaultInstance() {
  ::google::cloud::dialogflow::v2beta1::_Intent_Message_ListSelect_Item_default_instance_._instance.get_mutable()->info_ = const_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo*>(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_Intent_Message_ListSelect_Item_default_instance_._instance.get_mutable()->image_ = const_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_Image*>(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_Image::internal_default_instance());
}
void Intent_Message_ListSelect_Item::_slow_mutable_info() {
  info_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo >(
      GetArenaNoVirtual());
}
void Intent_Message_ListSelect_Item::unsafe_arena_set_allocated_info(
    ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* info) {
  if (GetArenaNoVirtual() == NULL) {
    delete info_;
  }
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.info)
}
void Intent_Message_ListSelect_Item::_slow_mutable_image() {
  image_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::Intent_Message_Image >(
      GetArenaNoVirtual());
}
void Intent_Message_ListSelect_Item::unsafe_arena_set_allocated_image(
    ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* image) {
  if (GetArenaNoVirtual() == NULL) {
    delete image_;
  }
  image_ = image;
  if (image) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.image)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intent_Message_ListSelect_Item::kInfoFieldNumber;
const int Intent_Message_ListSelect_Item::kTitleFieldNumber;
const int Intent_Message_ListSelect_Item::kDescriptionFieldNumber;
const int Intent_Message_ListSelect_Item::kImageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intent_Message_ListSelect_Item::Intent_Message_ListSelect_Item()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_ListSelect_Item();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item)
}
Intent_Message_ListSelect_Item::Intent_Message_ListSelect_Item(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_ListSelect_Item();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item)
}
Intent_Message_ListSelect_Item::Intent_Message_ListSelect_Item(const Intent_Message_ListSelect_Item& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title(),
      GetArenaNoVirtual());
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description(),
      GetArenaNoVirtual());
  }
  if (from.has_info()) {
    info_ = new ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  if (from.has_image()) {
    image_ = new ::google::cloud::dialogflow::v2beta1::Intent_Message_Image(*from.image_);
  } else {
    image_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item)
}

void Intent_Message_ListSelect_Item::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&image_) -
      reinterpret_cast<char*>(&info_)) + sizeof(image_));
  _cached_size_ = 0;
}

Intent_Message_ListSelect_Item::~Intent_Message_ListSelect_Item() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item)
  SharedDtor();
}

void Intent_Message_ListSelect_Item::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete info_;
  if (this != internal_default_instance()) delete image_;
}

void Intent_Message_ListSelect_Item::ArenaDtor(void* object) {
  Intent_Message_ListSelect_Item* _this = reinterpret_cast< Intent_Message_ListSelect_Item* >(object);
  (void)_this;
}
void Intent_Message_ListSelect_Item::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Intent_Message_ListSelect_Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Intent_Message_ListSelect_Item::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intent_Message_ListSelect_Item& Intent_Message_ListSelect_Item::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_ListSelect_Item();
  return *internal_default_instance();
}

Intent_Message_ListSelect_Item* Intent_Message_ListSelect_Item::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Intent_Message_ListSelect_Item>(arena);
}

void Intent_Message_ListSelect_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  if (GetArenaNoVirtual() == NULL && image_ != NULL) {
    delete image_;
  }
  image_ = NULL;
  _internal_metadata_.Clear();
}

bool Intent_Message_ListSelect_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.Intent.Message.Image image = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item)
  return false;
#undef DO_
}

void Intent_Message_ListSelect_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Image image = 4;
  if (this->has_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->image_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item)
}

::google::protobuf::uint8* Intent_Message_ListSelect_Item::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->info_, deterministic, target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Image image = 4;
  if (this->has_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->image_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item)
  return target;
}

size_t Intent_Message_ListSelect_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Image image = 4;
  if (this->has_image()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->image_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intent_Message_ListSelect_Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item)
  GOOGLE_DCHECK_NE(&from, this);
  const Intent_Message_ListSelect_Item* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intent_Message_ListSelect_Item>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item)
    MergeFrom(*source);
  }
}

void Intent_Message_ListSelect_Item::MergeFrom(const Intent_Message_ListSelect_Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {
    set_title(from.title());
  }
  if (from.description().size() > 0) {
    set_description(from.description());
  }
  if (from.has_info()) {
    mutable_info()->::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo::MergeFrom(from.info());
  }
  if (from.has_image()) {
    mutable_image()->::google::cloud::dialogflow::v2beta1::Intent_Message_Image::MergeFrom(from.image());
  }
}

void Intent_Message_ListSelect_Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intent_Message_ListSelect_Item::CopyFrom(const Intent_Message_ListSelect_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent_Message_ListSelect_Item::IsInitialized() const {
  return true;
}

void Intent_Message_ListSelect_Item::Swap(Intent_Message_ListSelect_Item* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Intent_Message_ListSelect_Item* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Intent_Message_ListSelect_Item::UnsafeArenaSwap(Intent_Message_ListSelect_Item* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Intent_Message_ListSelect_Item::InternalSwap(Intent_Message_ListSelect_Item* other) {
  using std::swap;
  title_.Swap(&other->title_);
  description_.Swap(&other->description_);
  swap(info_, other->info_);
  swap(image_, other->image_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Intent_Message_ListSelect_Item::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Intent_Message_ListSelect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intent_Message_ListSelect::kTitleFieldNumber;
const int Intent_Message_ListSelect::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intent_Message_ListSelect::Intent_Message_ListSelect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_ListSelect();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect)
}
Intent_Message_ListSelect::Intent_Message_ListSelect(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  items_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_ListSelect();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect)
}
Intent_Message_ListSelect::Intent_Message_ListSelect(const Intent_Message_ListSelect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect)
}

void Intent_Message_ListSelect::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Intent_Message_ListSelect::~Intent_Message_ListSelect() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect)
  SharedDtor();
}

void Intent_Message_ListSelect::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Intent_Message_ListSelect::ArenaDtor(void* object) {
  Intent_Message_ListSelect* _this = reinterpret_cast< Intent_Message_ListSelect* >(object);
  (void)_this;
}
void Intent_Message_ListSelect::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Intent_Message_ListSelect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Intent_Message_ListSelect::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intent_Message_ListSelect& Intent_Message_ListSelect::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_ListSelect();
  return *internal_default_instance();
}

Intent_Message_ListSelect* Intent_Message_ListSelect::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Intent_Message_ListSelect>(arena);
}

void Intent_Message_ListSelect::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  title_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool Intent_Message_ListSelect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item items = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect)
  return false;
#undef DO_
}

void Intent_Message_ListSelect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->items(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect)
}

::google::protobuf::uint8* Intent_Message_ListSelect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->items(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect)
  return target;
}

size_t Intent_Message_ListSelect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item items = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  // string title = 1;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intent_Message_ListSelect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect)
  GOOGLE_DCHECK_NE(&from, this);
  const Intent_Message_ListSelect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intent_Message_ListSelect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect)
    MergeFrom(*source);
  }
}

void Intent_Message_ListSelect::MergeFrom(const Intent_Message_ListSelect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (from.title().size() > 0) {
    set_title(from.title());
  }
}

void Intent_Message_ListSelect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intent_Message_ListSelect::CopyFrom(const Intent_Message_ListSelect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent_Message_ListSelect::IsInitialized() const {
  return true;
}

void Intent_Message_ListSelect::Swap(Intent_Message_ListSelect* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Intent_Message_ListSelect* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Intent_Message_ListSelect::UnsafeArenaSwap(Intent_Message_ListSelect* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Intent_Message_ListSelect::InternalSwap(Intent_Message_ListSelect* other) {
  using std::swap;
  items_.InternalSwap(&other->items_);
  title_.Swap(&other->title_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Intent_Message_ListSelect::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Intent_Message_CarouselSelect_Item::InitAsDefaultInstance() {
  ::google::cloud::dialogflow::v2beta1::_Intent_Message_CarouselSelect_Item_default_instance_._instance.get_mutable()->info_ = const_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo*>(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_Intent_Message_CarouselSelect_Item_default_instance_._instance.get_mutable()->image_ = const_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_Image*>(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_Image::internal_default_instance());
}
void Intent_Message_CarouselSelect_Item::_slow_mutable_info() {
  info_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo >(
      GetArenaNoVirtual());
}
void Intent_Message_CarouselSelect_Item::unsafe_arena_set_allocated_info(
    ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* info) {
  if (GetArenaNoVirtual() == NULL) {
    delete info_;
  }
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.info)
}
void Intent_Message_CarouselSelect_Item::_slow_mutable_image() {
  image_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::Intent_Message_Image >(
      GetArenaNoVirtual());
}
void Intent_Message_CarouselSelect_Item::unsafe_arena_set_allocated_image(
    ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* image) {
  if (GetArenaNoVirtual() == NULL) {
    delete image_;
  }
  image_ = image;
  if (image) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.image)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intent_Message_CarouselSelect_Item::kInfoFieldNumber;
const int Intent_Message_CarouselSelect_Item::kTitleFieldNumber;
const int Intent_Message_CarouselSelect_Item::kDescriptionFieldNumber;
const int Intent_Message_CarouselSelect_Item::kImageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intent_Message_CarouselSelect_Item::Intent_Message_CarouselSelect_Item()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_CarouselSelect_Item();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item)
}
Intent_Message_CarouselSelect_Item::Intent_Message_CarouselSelect_Item(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_CarouselSelect_Item();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item)
}
Intent_Message_CarouselSelect_Item::Intent_Message_CarouselSelect_Item(const Intent_Message_CarouselSelect_Item& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title(),
      GetArenaNoVirtual());
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description(),
      GetArenaNoVirtual());
  }
  if (from.has_info()) {
    info_ = new ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  if (from.has_image()) {
    image_ = new ::google::cloud::dialogflow::v2beta1::Intent_Message_Image(*from.image_);
  } else {
    image_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item)
}

void Intent_Message_CarouselSelect_Item::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&image_) -
      reinterpret_cast<char*>(&info_)) + sizeof(image_));
  _cached_size_ = 0;
}

Intent_Message_CarouselSelect_Item::~Intent_Message_CarouselSelect_Item() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item)
  SharedDtor();
}

void Intent_Message_CarouselSelect_Item::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete info_;
  if (this != internal_default_instance()) delete image_;
}

void Intent_Message_CarouselSelect_Item::ArenaDtor(void* object) {
  Intent_Message_CarouselSelect_Item* _this = reinterpret_cast< Intent_Message_CarouselSelect_Item* >(object);
  (void)_this;
}
void Intent_Message_CarouselSelect_Item::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Intent_Message_CarouselSelect_Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Intent_Message_CarouselSelect_Item::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intent_Message_CarouselSelect_Item& Intent_Message_CarouselSelect_Item::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_CarouselSelect_Item();
  return *internal_default_instance();
}

Intent_Message_CarouselSelect_Item* Intent_Message_CarouselSelect_Item::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Intent_Message_CarouselSelect_Item>(arena);
}

void Intent_Message_CarouselSelect_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  if (GetArenaNoVirtual() == NULL && image_ != NULL) {
    delete image_;
  }
  image_ = NULL;
  _internal_metadata_.Clear();
}

bool Intent_Message_CarouselSelect_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.Intent.Message.Image image = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item)
  return false;
#undef DO_
}

void Intent_Message_CarouselSelect_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Image image = 4;
  if (this->has_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->image_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item)
}

::google::protobuf::uint8* Intent_Message_CarouselSelect_Item::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->info_, deterministic, target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Image image = 4;
  if (this->has_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->image_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item)
  return target;
}

size_t Intent_Message_CarouselSelect_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Image image = 4;
  if (this->has_image()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->image_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intent_Message_CarouselSelect_Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item)
  GOOGLE_DCHECK_NE(&from, this);
  const Intent_Message_CarouselSelect_Item* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intent_Message_CarouselSelect_Item>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item)
    MergeFrom(*source);
  }
}

void Intent_Message_CarouselSelect_Item::MergeFrom(const Intent_Message_CarouselSelect_Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {
    set_title(from.title());
  }
  if (from.description().size() > 0) {
    set_description(from.description());
  }
  if (from.has_info()) {
    mutable_info()->::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo::MergeFrom(from.info());
  }
  if (from.has_image()) {
    mutable_image()->::google::cloud::dialogflow::v2beta1::Intent_Message_Image::MergeFrom(from.image());
  }
}

void Intent_Message_CarouselSelect_Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intent_Message_CarouselSelect_Item::CopyFrom(const Intent_Message_CarouselSelect_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent_Message_CarouselSelect_Item::IsInitialized() const {
  return true;
}

void Intent_Message_CarouselSelect_Item::Swap(Intent_Message_CarouselSelect_Item* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Intent_Message_CarouselSelect_Item* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Intent_Message_CarouselSelect_Item::UnsafeArenaSwap(Intent_Message_CarouselSelect_Item* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Intent_Message_CarouselSelect_Item::InternalSwap(Intent_Message_CarouselSelect_Item* other) {
  using std::swap;
  title_.Swap(&other->title_);
  description_.Swap(&other->description_);
  swap(info_, other->info_);
  swap(image_, other->image_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Intent_Message_CarouselSelect_Item::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Intent_Message_CarouselSelect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intent_Message_CarouselSelect::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intent_Message_CarouselSelect::Intent_Message_CarouselSelect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_CarouselSelect();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect)
}
Intent_Message_CarouselSelect::Intent_Message_CarouselSelect(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  items_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_CarouselSelect();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect)
}
Intent_Message_CarouselSelect::Intent_Message_CarouselSelect(const Intent_Message_CarouselSelect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect)
}

void Intent_Message_CarouselSelect::SharedCtor() {
  _cached_size_ = 0;
}

Intent_Message_CarouselSelect::~Intent_Message_CarouselSelect() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect)
  SharedDtor();
}

void Intent_Message_CarouselSelect::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void Intent_Message_CarouselSelect::ArenaDtor(void* object) {
  Intent_Message_CarouselSelect* _this = reinterpret_cast< Intent_Message_CarouselSelect* >(object);
  (void)_this;
}
void Intent_Message_CarouselSelect::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Intent_Message_CarouselSelect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Intent_Message_CarouselSelect::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intent_Message_CarouselSelect& Intent_Message_CarouselSelect::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_CarouselSelect();
  return *internal_default_instance();
}

Intent_Message_CarouselSelect* Intent_Message_CarouselSelect::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Intent_Message_CarouselSelect>(arena);
}

void Intent_Message_CarouselSelect::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear();
}

bool Intent_Message_CarouselSelect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect)
  return false;
#undef DO_
}

void Intent_Message_CarouselSelect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect)
}

::google::protobuf::uint8* Intent_Message_CarouselSelect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->items(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect)
  return target;
}

size_t Intent_Message_CarouselSelect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item items = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intent_Message_CarouselSelect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect)
  GOOGLE_DCHECK_NE(&from, this);
  const Intent_Message_CarouselSelect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intent_Message_CarouselSelect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect)
    MergeFrom(*source);
  }
}

void Intent_Message_CarouselSelect::MergeFrom(const Intent_Message_CarouselSelect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void Intent_Message_CarouselSelect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intent_Message_CarouselSelect::CopyFrom(const Intent_Message_CarouselSelect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent_Message_CarouselSelect::IsInitialized() const {
  return true;
}

void Intent_Message_CarouselSelect::Swap(Intent_Message_CarouselSelect* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Intent_Message_CarouselSelect* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Intent_Message_CarouselSelect::UnsafeArenaSwap(Intent_Message_CarouselSelect* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Intent_Message_CarouselSelect::InternalSwap(Intent_Message_CarouselSelect* other) {
  using std::swap;
  items_.InternalSwap(&other->items_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Intent_Message_CarouselSelect::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Intent_Message_SelectItemInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intent_Message_SelectItemInfo::kKeyFieldNumber;
const int Intent_Message_SelectItemInfo::kSynonymsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intent_Message_SelectItemInfo::Intent_Message_SelectItemInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_SelectItemInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo)
}
Intent_Message_SelectItemInfo::Intent_Message_SelectItemInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  synonyms_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_SelectItemInfo();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo)
}
Intent_Message_SelectItemInfo::Intent_Message_SelectItemInfo(const Intent_Message_SelectItemInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      synonyms_(from.synonyms_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo)
}

void Intent_Message_SelectItemInfo::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Intent_Message_SelectItemInfo::~Intent_Message_SelectItemInfo() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo)
  SharedDtor();
}

void Intent_Message_SelectItemInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Intent_Message_SelectItemInfo::ArenaDtor(void* object) {
  Intent_Message_SelectItemInfo* _this = reinterpret_cast< Intent_Message_SelectItemInfo* >(object);
  (void)_this;
}
void Intent_Message_SelectItemInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Intent_Message_SelectItemInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Intent_Message_SelectItemInfo::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intent_Message_SelectItemInfo& Intent_Message_SelectItemInfo::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_SelectItemInfo();
  return *internal_default_instance();
}

Intent_Message_SelectItemInfo* Intent_Message_SelectItemInfo::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Intent_Message_SelectItemInfo>(arena);
}

void Intent_Message_SelectItemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  synonyms_.Clear();
  key_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool Intent_Message_SelectItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string synonyms = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_synonyms()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->synonyms(this->synonyms_size() - 1).data(),
            static_cast<int>(this->synonyms(this->synonyms_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.synonyms"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo)
  return false;
#undef DO_
}

void Intent_Message_SelectItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // repeated string synonyms = 2;
  for (int i = 0, n = this->synonyms_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->synonyms(i).data(), static_cast<int>(this->synonyms(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.synonyms");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->synonyms(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo)
}

::google::protobuf::uint8* Intent_Message_SelectItemInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // repeated string synonyms = 2;
  for (int i = 0, n = this->synonyms_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->synonyms(i).data(), static_cast<int>(this->synonyms(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.synonyms");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->synonyms(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo)
  return target;
}

size_t Intent_Message_SelectItemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string synonyms = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->synonyms_size());
  for (int i = 0, n = this->synonyms_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->synonyms(i));
  }

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intent_Message_SelectItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Intent_Message_SelectItemInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intent_Message_SelectItemInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo)
    MergeFrom(*source);
  }
}

void Intent_Message_SelectItemInfo::MergeFrom(const Intent_Message_SelectItemInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  synonyms_.MergeFrom(from.synonyms_);
  if (from.key().size() > 0) {
    set_key(from.key());
  }
}

void Intent_Message_SelectItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intent_Message_SelectItemInfo::CopyFrom(const Intent_Message_SelectItemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent_Message_SelectItemInfo::IsInitialized() const {
  return true;
}

void Intent_Message_SelectItemInfo::Swap(Intent_Message_SelectItemInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Intent_Message_SelectItemInfo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Intent_Message_SelectItemInfo::UnsafeArenaSwap(Intent_Message_SelectItemInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Intent_Message_SelectItemInfo::InternalSwap(Intent_Message_SelectItemInfo* other) {
  using std::swap;
  synonyms_.InternalSwap(&other->synonyms_);
  key_.Swap(&other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Intent_Message_SelectItemInfo::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Intent_Message::InitAsDefaultInstance() {
  ::google::cloud::dialogflow::v2beta1::_Intent_Message_default_instance_.text_ = const_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_Text*>(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_Text::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_Intent_Message_default_instance_.image_ = const_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_Image*>(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_Image::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_Intent_Message_default_instance_.quick_replies_ = const_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies*>(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_Intent_Message_default_instance_.card_ = const_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_Card*>(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_Card::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_Intent_Message_default_instance_.payload_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_Intent_Message_default_instance_.simple_responses_ = const_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses*>(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_Intent_Message_default_instance_.basic_card_ = const_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard*>(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_Intent_Message_default_instance_.suggestions_ = const_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions*>(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_Intent_Message_default_instance_.link_out_suggestion_ = const_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion*>(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_Intent_Message_default_instance_.list_select_ = const_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect*>(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_Intent_Message_default_instance_.carousel_select_ = const_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect*>(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect::internal_default_instance());
}
void Intent_Message::set_allocated_text(::google::cloud::dialogflow::v2beta1::Intent_Message_Text* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (text) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(text);
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    set_has_text();
    message_.text_ = text;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.text)
}
void Intent_Message::set_allocated_image(::google::cloud::dialogflow::v2beta1::Intent_Message_Image* image) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (image) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(image);
    if (message_arena != submessage_arena) {
      image = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, image, submessage_arena);
    }
    set_has_image();
    message_.image_ = image;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.image)
}
void Intent_Message::set_allocated_quick_replies(::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies* quick_replies) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (quick_replies) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(quick_replies);
    if (message_arena != submessage_arena) {
      quick_replies = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, quick_replies, submessage_arena);
    }
    set_has_quick_replies();
    message_.quick_replies_ = quick_replies;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.quick_replies)
}
void Intent_Message::set_allocated_card(::google::cloud::dialogflow::v2beta1::Intent_Message_Card* card) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (card) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(card);
    if (message_arena != submessage_arena) {
      card = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, card, submessage_arena);
    }
    set_has_card();
    message_.card_ = card;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.card)
}
void Intent_Message::set_allocated_payload(::google::protobuf::Struct* payload) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (payload) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(payload)->GetArena();
    if (message_arena != submessage_arena) {
      payload = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, payload, submessage_arena);
    }
    set_has_payload();
    message_.payload_ = payload;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.payload)
}
void Intent_Message::clear_payload() {
  if (has_payload()) {
    if (GetArenaNoVirtual() == NULL) {
      delete message_.payload_;
    }
    clear_has_message();
  }
}
void Intent_Message::set_allocated_simple_responses(::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses* simple_responses) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (simple_responses) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(simple_responses);
    if (message_arena != submessage_arena) {
      simple_responses = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, simple_responses, submessage_arena);
    }
    set_has_simple_responses();
    message_.simple_responses_ = simple_responses;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.simple_responses)
}
void Intent_Message::set_allocated_basic_card(::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard* basic_card) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (basic_card) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(basic_card);
    if (message_arena != submessage_arena) {
      basic_card = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, basic_card, submessage_arena);
    }
    set_has_basic_card();
    message_.basic_card_ = basic_card;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.basic_card)
}
void Intent_Message::set_allocated_suggestions(::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions* suggestions) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (suggestions) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(suggestions);
    if (message_arena != submessage_arena) {
      suggestions = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, suggestions, submessage_arena);
    }
    set_has_suggestions();
    message_.suggestions_ = suggestions;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.suggestions)
}
void Intent_Message::set_allocated_link_out_suggestion(::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion* link_out_suggestion) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (link_out_suggestion) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(link_out_suggestion);
    if (message_arena != submessage_arena) {
      link_out_suggestion = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, link_out_suggestion, submessage_arena);
    }
    set_has_link_out_suggestion();
    message_.link_out_suggestion_ = link_out_suggestion;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.link_out_suggestion)
}
void Intent_Message::set_allocated_list_select(::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect* list_select) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (list_select) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(list_select);
    if (message_arena != submessage_arena) {
      list_select = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, list_select, submessage_arena);
    }
    set_has_list_select();
    message_.list_select_ = list_select;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.list_select)
}
void Intent_Message::set_allocated_carousel_select(::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect* carousel_select) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (carousel_select) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(carousel_select);
    if (message_arena != submessage_arena) {
      carousel_select = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, carousel_select, submessage_arena);
    }
    set_has_carousel_select();
    message_.carousel_select_ = carousel_select;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.carousel_select)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intent_Message::kTextFieldNumber;
const int Intent_Message::kImageFieldNumber;
const int Intent_Message::kQuickRepliesFieldNumber;
const int Intent_Message::kCardFieldNumber;
const int Intent_Message::kPayloadFieldNumber;
const int Intent_Message::kSimpleResponsesFieldNumber;
const int Intent_Message::kBasicCardFieldNumber;
const int Intent_Message::kSuggestionsFieldNumber;
const int Intent_Message::kLinkOutSuggestionFieldNumber;
const int Intent_Message::kListSelectFieldNumber;
const int Intent_Message::kCarouselSelectFieldNumber;
const int Intent_Message::kPlatformFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intent_Message::Intent_Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.Intent.Message)
}
Intent_Message::Intent_Message(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.Intent.Message)
}
Intent_Message::Intent_Message(const Intent_Message& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  platform_ = from.platform_;
  clear_has_message();
  switch (from.message_case()) {
    case kText: {
      mutable_text()->::google::cloud::dialogflow::v2beta1::Intent_Message_Text::MergeFrom(from.text());
      break;
    }
    case kImage: {
      mutable_image()->::google::cloud::dialogflow::v2beta1::Intent_Message_Image::MergeFrom(from.image());
      break;
    }
    case kQuickReplies: {
      mutable_quick_replies()->::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies::MergeFrom(from.quick_replies());
      break;
    }
    case kCard: {
      mutable_card()->::google::cloud::dialogflow::v2beta1::Intent_Message_Card::MergeFrom(from.card());
      break;
    }
    case kPayload: {
      mutable_payload()->::google::protobuf::Struct::MergeFrom(from.payload());
      break;
    }
    case kSimpleResponses: {
      mutable_simple_responses()->::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses::MergeFrom(from.simple_responses());
      break;
    }
    case kBasicCard: {
      mutable_basic_card()->::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard::MergeFrom(from.basic_card());
      break;
    }
    case kSuggestions: {
      mutable_suggestions()->::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions::MergeFrom(from.suggestions());
      break;
    }
    case kLinkOutSuggestion: {
      mutable_link_out_suggestion()->::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion::MergeFrom(from.link_out_suggestion());
      break;
    }
    case kListSelect: {
      mutable_list_select()->::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect::MergeFrom(from.list_select());
      break;
    }
    case kCarouselSelect: {
      mutable_carousel_select()->::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect::MergeFrom(from.carousel_select());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.Intent.Message)
}

void Intent_Message::SharedCtor() {
  platform_ = 0;
  clear_has_message();
  _cached_size_ = 0;
}

Intent_Message::~Intent_Message() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.Intent.Message)
  SharedDtor();
}

void Intent_Message::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_message()) {
    clear_message();
  }
}

void Intent_Message::ArenaDtor(void* object) {
  Intent_Message* _this = reinterpret_cast< Intent_Message* >(object);
  (void)_this;
}
void Intent_Message::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Intent_Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Intent_Message::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intent_Message& Intent_Message::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message();
  return *internal_default_instance();
}

Intent_Message* Intent_Message::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Intent_Message>(arena);
}

void Intent_Message::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.dialogflow.v2beta1.Intent.Message)
  switch (message_case()) {
    case kText: {
      if (GetArenaNoVirtual() == NULL) {
        delete message_.text_;
      }
      break;
    }
    case kImage: {
      if (GetArenaNoVirtual() == NULL) {
        delete message_.image_;
      }
      break;
    }
    case kQuickReplies: {
      if (GetArenaNoVirtual() == NULL) {
        delete message_.quick_replies_;
      }
      break;
    }
    case kCard: {
      if (GetArenaNoVirtual() == NULL) {
        delete message_.card_;
      }
      break;
    }
    case kPayload: {
      if (GetArenaNoVirtual() == NULL) {
        delete message_.payload_;
      }
      break;
    }
    case kSimpleResponses: {
      if (GetArenaNoVirtual() == NULL) {
        delete message_.simple_responses_;
      }
      break;
    }
    case kBasicCard: {
      if (GetArenaNoVirtual() == NULL) {
        delete message_.basic_card_;
      }
      break;
    }
    case kSuggestions: {
      if (GetArenaNoVirtual() == NULL) {
        delete message_.suggestions_;
      }
      break;
    }
    case kLinkOutSuggestion: {
      if (GetArenaNoVirtual() == NULL) {
        delete message_.link_out_suggestion_;
      }
      break;
    }
    case kListSelect: {
      if (GetArenaNoVirtual() == NULL) {
        delete message_.list_select_;
      }
      break;
    }
    case kCarouselSelect: {
      if (GetArenaNoVirtual() == NULL) {
        delete message_.carousel_select_;
      }
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_NOT_SET;
}


void Intent_Message::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.Intent.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  platform_ = 0;
  clear_message();
  _internal_metadata_.Clear();
}

bool Intent_Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.Intent.Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.dialogflow.v2beta1.Intent.Message.Text text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.Intent.Message.Image image = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies quick_replies = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_quick_replies()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.Intent.Message.Card card = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_card()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct payload = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.Intent.Message.Platform platform = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_platform(static_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_Platform >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses simple_responses = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_simple_responses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard basic_card = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_basic_card()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions suggestions = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_suggestions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion link_out_suggestion = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_link_out_suggestion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect list_select = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_list_select()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect carousel_select = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_carousel_select()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.Intent.Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.Intent.Message)
  return false;
#undef DO_
}

void Intent_Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.Intent.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Text text = 1;
  if (has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *message_.text_, output);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Image image = 2;
  if (has_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *message_.image_, output);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies quick_replies = 3;
  if (has_quick_replies()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *message_.quick_replies_, output);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Card card = 4;
  if (has_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *message_.card_, output);
  }

  // .google.protobuf.Struct payload = 5;
  if (has_payload()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *message_.payload_, output);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Platform platform = 6;
  if (this->platform() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->platform(), output);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses simple_responses = 7;
  if (has_simple_responses()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *message_.simple_responses_, output);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard basic_card = 8;
  if (has_basic_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *message_.basic_card_, output);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions suggestions = 9;
  if (has_suggestions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *message_.suggestions_, output);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion link_out_suggestion = 10;
  if (has_link_out_suggestion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *message_.link_out_suggestion_, output);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect list_select = 11;
  if (has_list_select()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *message_.list_select_, output);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect carousel_select = 12;
  if (has_carousel_select()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *message_.carousel_select_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.Intent.Message)
}

::google::protobuf::uint8* Intent_Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.Intent.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Text text = 1;
  if (has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *message_.text_, deterministic, target);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Image image = 2;
  if (has_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *message_.image_, deterministic, target);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies quick_replies = 3;
  if (has_quick_replies()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *message_.quick_replies_, deterministic, target);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Card card = 4;
  if (has_card()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *message_.card_, deterministic, target);
  }

  // .google.protobuf.Struct payload = 5;
  if (has_payload()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *message_.payload_, deterministic, target);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Platform platform = 6;
  if (this->platform() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->platform(), target);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses simple_responses = 7;
  if (has_simple_responses()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *message_.simple_responses_, deterministic, target);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard basic_card = 8;
  if (has_basic_card()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *message_.basic_card_, deterministic, target);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions suggestions = 9;
  if (has_suggestions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *message_.suggestions_, deterministic, target);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion link_out_suggestion = 10;
  if (has_link_out_suggestion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *message_.link_out_suggestion_, deterministic, target);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect list_select = 11;
  if (has_list_select()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, *message_.list_select_, deterministic, target);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect carousel_select = 12;
  if (has_carousel_select()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, *message_.carousel_select_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.Intent.Message)
  return target;
}

size_t Intent_Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.Intent.Message)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.dialogflow.v2beta1.Intent.Message.Platform platform = 6;
  if (this->platform() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->platform());
  }

  switch (message_case()) {
    // .google.cloud.dialogflow.v2beta1.Intent.Message.Text text = 1;
    case kText: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.text_);
      break;
    }
    // .google.cloud.dialogflow.v2beta1.Intent.Message.Image image = 2;
    case kImage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.image_);
      break;
    }
    // .google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies quick_replies = 3;
    case kQuickReplies: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.quick_replies_);
      break;
    }
    // .google.cloud.dialogflow.v2beta1.Intent.Message.Card card = 4;
    case kCard: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.card_);
      break;
    }
    // .google.protobuf.Struct payload = 5;
    case kPayload: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.payload_);
      break;
    }
    // .google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses simple_responses = 7;
    case kSimpleResponses: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.simple_responses_);
      break;
    }
    // .google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard basic_card = 8;
    case kBasicCard: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.basic_card_);
      break;
    }
    // .google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions suggestions = 9;
    case kSuggestions: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.suggestions_);
      break;
    }
    // .google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion link_out_suggestion = 10;
    case kLinkOutSuggestion: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.link_out_suggestion_);
      break;
    }
    // .google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect list_select = 11;
    case kListSelect: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.list_select_);
      break;
    }
    // .google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect carousel_select = 12;
    case kCarouselSelect: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.carousel_select_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intent_Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message)
  GOOGLE_DCHECK_NE(&from, this);
  const Intent_Message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intent_Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.Intent.Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.Intent.Message)
    MergeFrom(*source);
  }
}

void Intent_Message::MergeFrom(const Intent_Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.platform() != 0) {
    set_platform(from.platform());
  }
  switch (from.message_case()) {
    case kText: {
      mutable_text()->::google::cloud::dialogflow::v2beta1::Intent_Message_Text::MergeFrom(from.text());
      break;
    }
    case kImage: {
      mutable_image()->::google::cloud::dialogflow::v2beta1::Intent_Message_Image::MergeFrom(from.image());
      break;
    }
    case kQuickReplies: {
      mutable_quick_replies()->::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies::MergeFrom(from.quick_replies());
      break;
    }
    case kCard: {
      mutable_card()->::google::cloud::dialogflow::v2beta1::Intent_Message_Card::MergeFrom(from.card());
      break;
    }
    case kPayload: {
      mutable_payload()->::google::protobuf::Struct::MergeFrom(from.payload());
      break;
    }
    case kSimpleResponses: {
      mutable_simple_responses()->::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses::MergeFrom(from.simple_responses());
      break;
    }
    case kBasicCard: {
      mutable_basic_card()->::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard::MergeFrom(from.basic_card());
      break;
    }
    case kSuggestions: {
      mutable_suggestions()->::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions::MergeFrom(from.suggestions());
      break;
    }
    case kLinkOutSuggestion: {
      mutable_link_out_suggestion()->::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion::MergeFrom(from.link_out_suggestion());
      break;
    }
    case kListSelect: {
      mutable_list_select()->::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect::MergeFrom(from.list_select());
      break;
    }
    case kCarouselSelect: {
      mutable_carousel_select()->::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect::MergeFrom(from.carousel_select());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
}

void Intent_Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intent_Message::CopyFrom(const Intent_Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent_Message::IsInitialized() const {
  return true;
}

void Intent_Message::Swap(Intent_Message* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Intent_Message* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Intent_Message::UnsafeArenaSwap(Intent_Message* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Intent_Message::InternalSwap(Intent_Message* other) {
  using std::swap;
  swap(platform_, other->platform_);
  swap(message_, other->message_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Intent_Message::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Intent_FollowupIntentInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intent_FollowupIntentInfo::kFollowupIntentNameFieldNumber;
const int Intent_FollowupIntentInfo::kParentFollowupIntentNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intent_FollowupIntentInfo::Intent_FollowupIntentInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_FollowupIntentInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo)
}
Intent_FollowupIntentInfo::Intent_FollowupIntentInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_FollowupIntentInfo();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo)
}
Intent_FollowupIntentInfo::Intent_FollowupIntentInfo(const Intent_FollowupIntentInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  followup_intent_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.followup_intent_name().size() > 0) {
    followup_intent_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.followup_intent_name(),
      GetArenaNoVirtual());
  }
  parent_followup_intent_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent_followup_intent_name().size() > 0) {
    parent_followup_intent_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_followup_intent_name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo)
}

void Intent_FollowupIntentInfo::SharedCtor() {
  followup_intent_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_followup_intent_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Intent_FollowupIntentInfo::~Intent_FollowupIntentInfo() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo)
  SharedDtor();
}

void Intent_FollowupIntentInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  followup_intent_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_followup_intent_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Intent_FollowupIntentInfo::ArenaDtor(void* object) {
  Intent_FollowupIntentInfo* _this = reinterpret_cast< Intent_FollowupIntentInfo* >(object);
  (void)_this;
}
void Intent_FollowupIntentInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Intent_FollowupIntentInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Intent_FollowupIntentInfo::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intent_FollowupIntentInfo& Intent_FollowupIntentInfo::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_FollowupIntentInfo();
  return *internal_default_instance();
}

Intent_FollowupIntentInfo* Intent_FollowupIntentInfo::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Intent_FollowupIntentInfo>(arena);
}

void Intent_FollowupIntentInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  followup_intent_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  parent_followup_intent_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool Intent_FollowupIntentInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string followup_intent_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_followup_intent_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->followup_intent_name().data(), static_cast<int>(this->followup_intent_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.followup_intent_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent_followup_intent_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent_followup_intent_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent_followup_intent_name().data(), static_cast<int>(this->parent_followup_intent_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.parent_followup_intent_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo)
  return false;
#undef DO_
}

void Intent_FollowupIntentInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string followup_intent_name = 1;
  if (this->followup_intent_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->followup_intent_name().data(), static_cast<int>(this->followup_intent_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.followup_intent_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->followup_intent_name(), output);
  }

  // string parent_followup_intent_name = 2;
  if (this->parent_followup_intent_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent_followup_intent_name().data(), static_cast<int>(this->parent_followup_intent_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.parent_followup_intent_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->parent_followup_intent_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo)
}

::google::protobuf::uint8* Intent_FollowupIntentInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string followup_intent_name = 1;
  if (this->followup_intent_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->followup_intent_name().data(), static_cast<int>(this->followup_intent_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.followup_intent_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->followup_intent_name(), target);
  }

  // string parent_followup_intent_name = 2;
  if (this->parent_followup_intent_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent_followup_intent_name().data(), static_cast<int>(this->parent_followup_intent_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.parent_followup_intent_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->parent_followup_intent_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo)
  return target;
}

size_t Intent_FollowupIntentInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string followup_intent_name = 1;
  if (this->followup_intent_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->followup_intent_name());
  }

  // string parent_followup_intent_name = 2;
  if (this->parent_followup_intent_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent_followup_intent_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intent_FollowupIntentInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Intent_FollowupIntentInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intent_FollowupIntentInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo)
    MergeFrom(*source);
  }
}

void Intent_FollowupIntentInfo::MergeFrom(const Intent_FollowupIntentInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.followup_intent_name().size() > 0) {
    set_followup_intent_name(from.followup_intent_name());
  }
  if (from.parent_followup_intent_name().size() > 0) {
    set_parent_followup_intent_name(from.parent_followup_intent_name());
  }
}

void Intent_FollowupIntentInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intent_FollowupIntentInfo::CopyFrom(const Intent_FollowupIntentInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent_FollowupIntentInfo::IsInitialized() const {
  return true;
}

void Intent_FollowupIntentInfo::Swap(Intent_FollowupIntentInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Intent_FollowupIntentInfo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Intent_FollowupIntentInfo::UnsafeArenaSwap(Intent_FollowupIntentInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Intent_FollowupIntentInfo::InternalSwap(Intent_FollowupIntentInfo* other) {
  using std::swap;
  followup_intent_name_.Swap(&other->followup_intent_name_);
  parent_followup_intent_name_.Swap(&other->parent_followup_intent_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Intent_FollowupIntentInfo::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Intent::InitAsDefaultInstance() {
}
void Intent::clear_output_contexts() {
  output_contexts_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intent::kNameFieldNumber;
const int Intent::kDisplayNameFieldNumber;
const int Intent::kWebhookStateFieldNumber;
const int Intent::kPriorityFieldNumber;
const int Intent::kIsFallbackFieldNumber;
const int Intent::kMlEnabledFieldNumber;
const int Intent::kInputContextNamesFieldNumber;
const int Intent::kEventsFieldNumber;
const int Intent::kTrainingPhrasesFieldNumber;
const int Intent::kActionFieldNumber;
const int Intent::kOutputContextsFieldNumber;
const int Intent::kResetContextsFieldNumber;
const int Intent::kParametersFieldNumber;
const int Intent::kMessagesFieldNumber;
const int Intent::kDefaultResponsePlatformsFieldNumber;
const int Intent::kRootFollowupIntentNameFieldNumber;
const int Intent::kParentFollowupIntentNameFieldNumber;
const int Intent::kFollowupIntentInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intent::Intent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.Intent)
}
Intent::Intent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  input_context_names_(arena),
  events_(arena),
  training_phrases_(arena),
  output_contexts_(arena),
  parameters_(arena),
  messages_(arena),
  default_response_platforms_(arena),
  followup_intent_info_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.Intent)
}
Intent::Intent(const Intent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      input_context_names_(from.input_context_names_),
      events_(from.events_),
      training_phrases_(from.training_phrases_),
      output_contexts_(from.output_contexts_),
      parameters_(from.parameters_),
      messages_(from.messages_),
      default_response_platforms_(from.default_response_platforms_),
      followup_intent_info_(from.followup_intent_info_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name(),
      GetArenaNoVirtual());
  }
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.action().size() > 0) {
    action_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action(),
      GetArenaNoVirtual());
  }
  root_followup_intent_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.root_followup_intent_name().size() > 0) {
    root_followup_intent_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.root_followup_intent_name(),
      GetArenaNoVirtual());
  }
  parent_followup_intent_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent_followup_intent_name().size() > 0) {
    parent_followup_intent_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_followup_intent_name(),
      GetArenaNoVirtual());
  }
  ::memcpy(&priority_, &from.priority_,
    static_cast<size_t>(reinterpret_cast<char*>(&reset_contexts_) -
    reinterpret_cast<char*>(&priority_)) + sizeof(reset_contexts_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.Intent)
}

void Intent::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  root_followup_intent_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_followup_intent_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&priority_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reset_contexts_) -
      reinterpret_cast<char*>(&priority_)) + sizeof(reset_contexts_));
  _cached_size_ = 0;
}

Intent::~Intent() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.Intent)
  SharedDtor();
}

void Intent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  root_followup_intent_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_followup_intent_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Intent::ArenaDtor(void* object) {
  Intent* _this = reinterpret_cast< Intent* >(object);
  (void)_this;
}
void Intent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Intent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Intent::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intent& Intent::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent();
  return *internal_default_instance();
}

Intent* Intent::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Intent>(arena);
}

void Intent::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.Intent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_context_names_.Clear();
  events_.Clear();
  training_phrases_.Clear();
  output_contexts_.Clear();
  parameters_.Clear();
  messages_.Clear();
  default_response_platforms_.Clear();
  followup_intent_info_.Clear();
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  display_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  action_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  root_followup_intent_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  parent_followup_intent_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&priority_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reset_contexts_) -
      reinterpret_cast<char*>(&priority_)) + sizeof(reset_contexts_));
  _internal_metadata_.Clear();
}

bool Intent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.Intent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 priority = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_fallback = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_fallback_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ml_enabled = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ml_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.Intent.WebhookState webhook_state = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_webhook_state(static_cast< ::google::cloud::dialogflow::v2beta1::Intent_WebhookState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string input_context_names = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_input_context_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->input_context_names(this->input_context_names_size() - 1).data(),
            static_cast<int>(this->input_context_names(this->input_context_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.input_context_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string events = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_events()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->events(this->events_size() - 1).data(),
            static_cast<int>(this->events(this->events_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.events"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase training_phrases = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_training_phrases()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string action = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_action()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->action().data(), static_cast<int>(this->action().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.action"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.dialogflow.v2beta1.Context output_contexts = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_output_contexts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool reset_contexts = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reset_contexts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.dialogflow.v2beta1.Intent.Parameter parameters = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.dialogflow.v2beta1.Intent.Message messages = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_messages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.Platform default_response_platforms = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_default_response_platforms(static_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_Platform >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_default_response_platforms(static_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_Platform >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string root_followup_intent_name = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_root_followup_intent_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->root_followup_intent_name().data(), static_cast<int>(this->root_followup_intent_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.root_followup_intent_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent_followup_intent_name = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent_followup_intent_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent_followup_intent_name().data(), static_cast<int>(this->parent_followup_intent_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.Intent.parent_followup_intent_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo followup_intent_info = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_followup_intent_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.Intent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.Intent)
  return false;
#undef DO_
}

void Intent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.Intent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->display_name(), output);
  }

  // int32 priority = 3;
  if (this->priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->priority(), output);
  }

  // bool is_fallback = 4;
  if (this->is_fallback() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_fallback(), output);
  }

  // bool ml_enabled = 5;
  if (this->ml_enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->ml_enabled(), output);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.WebhookState webhook_state = 6;
  if (this->webhook_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->webhook_state(), output);
  }

  // repeated string input_context_names = 7;
  for (int i = 0, n = this->input_context_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_context_names(i).data(), static_cast<int>(this->input_context_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.input_context_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->input_context_names(i), output);
  }

  // repeated string events = 8;
  for (int i = 0, n = this->events_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->events(i).data(), static_cast<int>(this->events(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.events");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->events(i), output);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase training_phrases = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->training_phrases_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->training_phrases(static_cast<int>(i)), output);
  }

  // string action = 10;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), static_cast<int>(this->action().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.action");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->action(), output);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Context output_contexts = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_contexts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->output_contexts(static_cast<int>(i)), output);
  }

  // bool reset_contexts = 12;
  if (this->reset_contexts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->reset_contexts(), output);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Parameter parameters = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parameters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->parameters(static_cast<int>(i)), output);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message messages = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->messages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->messages(static_cast<int>(i)), output);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.Platform default_response_platforms = 15;
  if (this->default_response_platforms_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_default_response_platforms_cached_byte_size_));
  }
  for (int i = 0, n = this->default_response_platforms_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->default_response_platforms(i), output);
  }

  // string root_followup_intent_name = 16;
  if (this->root_followup_intent_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->root_followup_intent_name().data(), static_cast<int>(this->root_followup_intent_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.root_followup_intent_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->root_followup_intent_name(), output);
  }

  // string parent_followup_intent_name = 17;
  if (this->parent_followup_intent_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent_followup_intent_name().data(), static_cast<int>(this->parent_followup_intent_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.parent_followup_intent_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->parent_followup_intent_name(), output);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo followup_intent_info = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->followup_intent_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->followup_intent_info(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.Intent)
}

::google::protobuf::uint8* Intent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.Intent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->display_name(), target);
  }

  // int32 priority = 3;
  if (this->priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->priority(), target);
  }

  // bool is_fallback = 4;
  if (this->is_fallback() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_fallback(), target);
  }

  // bool ml_enabled = 5;
  if (this->ml_enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->ml_enabled(), target);
  }

  // .google.cloud.dialogflow.v2beta1.Intent.WebhookState webhook_state = 6;
  if (this->webhook_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->webhook_state(), target);
  }

  // repeated string input_context_names = 7;
  for (int i = 0, n = this->input_context_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_context_names(i).data(), static_cast<int>(this->input_context_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.input_context_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->input_context_names(i), target);
  }

  // repeated string events = 8;
  for (int i = 0, n = this->events_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->events(i).data(), static_cast<int>(this->events(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.events");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->events(i), target);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase training_phrases = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->training_phrases_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->training_phrases(static_cast<int>(i)), deterministic, target);
  }

  // string action = 10;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), static_cast<int>(this->action().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.action");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->action(), target);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Context output_contexts = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_contexts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->output_contexts(static_cast<int>(i)), deterministic, target);
  }

  // bool reset_contexts = 12;
  if (this->reset_contexts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->reset_contexts(), target);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Parameter parameters = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parameters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->parameters(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message messages = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->messages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->messages(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.Platform default_response_platforms = 15;
  if (this->default_response_platforms_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _default_response_platforms_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->default_response_platforms_, target);
  }

  // string root_followup_intent_name = 16;
  if (this->root_followup_intent_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->root_followup_intent_name().data(), static_cast<int>(this->root_followup_intent_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.root_followup_intent_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->root_followup_intent_name(), target);
  }

  // string parent_followup_intent_name = 17;
  if (this->parent_followup_intent_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent_followup_intent_name().data(), static_cast<int>(this->parent_followup_intent_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.Intent.parent_followup_intent_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->parent_followup_intent_name(), target);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo followup_intent_info = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->followup_intent_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->followup_intent_info(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.Intent)
  return target;
}

size_t Intent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.Intent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string input_context_names = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->input_context_names_size());
  for (int i = 0, n = this->input_context_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->input_context_names(i));
  }

  // repeated string events = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->events_size());
  for (int i = 0, n = this->events_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->events(i));
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase training_phrases = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->training_phrases_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->training_phrases(static_cast<int>(i)));
    }
  }

  // repeated .google.cloud.dialogflow.v2beta1.Context output_contexts = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->output_contexts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->output_contexts(static_cast<int>(i)));
    }
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Parameter parameters = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->parameters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->parameters(static_cast<int>(i)));
    }
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message messages = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->messages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->messages(static_cast<int>(i)));
    }
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.Platform default_response_platforms = 15;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->default_response_platforms_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->default_response_platforms(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _default_response_platforms_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo followup_intent_info = 18;
  {
    unsigned int count = static_cast<unsigned int>(this->followup_intent_info_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->followup_intent_info(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // string action = 10;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->action());
  }

  // string root_followup_intent_name = 16;
  if (this->root_followup_intent_name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->root_followup_intent_name());
  }

  // string parent_followup_intent_name = 17;
  if (this->parent_followup_intent_name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent_followup_intent_name());
  }

  // int32 priority = 3;
  if (this->priority() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->priority());
  }

  // .google.cloud.dialogflow.v2beta1.Intent.WebhookState webhook_state = 6;
  if (this->webhook_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->webhook_state());
  }

  // bool is_fallback = 4;
  if (this->is_fallback() != 0) {
    total_size += 1 + 1;
  }

  // bool ml_enabled = 5;
  if (this->ml_enabled() != 0) {
    total_size += 1 + 1;
  }

  // bool reset_contexts = 12;
  if (this->reset_contexts() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.Intent)
  GOOGLE_DCHECK_NE(&from, this);
  const Intent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.Intent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.Intent)
    MergeFrom(*source);
  }
}

void Intent::MergeFrom(const Intent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.Intent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_context_names_.MergeFrom(from.input_context_names_);
  events_.MergeFrom(from.events_);
  training_phrases_.MergeFrom(from.training_phrases_);
  output_contexts_.MergeFrom(from.output_contexts_);
  parameters_.MergeFrom(from.parameters_);
  messages_.MergeFrom(from.messages_);
  default_response_platforms_.MergeFrom(from.default_response_platforms_);
  followup_intent_info_.MergeFrom(from.followup_intent_info_);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.display_name().size() > 0) {
    set_display_name(from.display_name());
  }
  if (from.action().size() > 0) {
    set_action(from.action());
  }
  if (from.root_followup_intent_name().size() > 0) {
    set_root_followup_intent_name(from.root_followup_intent_name());
  }
  if (from.parent_followup_intent_name().size() > 0) {
    set_parent_followup_intent_name(from.parent_followup_intent_name());
  }
  if (from.priority() != 0) {
    set_priority(from.priority());
  }
  if (from.webhook_state() != 0) {
    set_webhook_state(from.webhook_state());
  }
  if (from.is_fallback() != 0) {
    set_is_fallback(from.is_fallback());
  }
  if (from.ml_enabled() != 0) {
    set_ml_enabled(from.ml_enabled());
  }
  if (from.reset_contexts() != 0) {
    set_reset_contexts(from.reset_contexts());
  }
}

void Intent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.Intent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intent::CopyFrom(const Intent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.Intent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent::IsInitialized() const {
  return true;
}

void Intent::Swap(Intent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Intent* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Intent::UnsafeArenaSwap(Intent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Intent::InternalSwap(Intent* other) {
  using std::swap;
  input_context_names_.InternalSwap(&other->input_context_names_);
  events_.InternalSwap(&other->events_);
  training_phrases_.InternalSwap(&other->training_phrases_);
  output_contexts_.InternalSwap(&other->output_contexts_);
  parameters_.InternalSwap(&other->parameters_);
  messages_.InternalSwap(&other->messages_);
  default_response_platforms_.InternalSwap(&other->default_response_platforms_);
  followup_intent_info_.InternalSwap(&other->followup_intent_info_);
  name_.Swap(&other->name_);
  display_name_.Swap(&other->display_name_);
  action_.Swap(&other->action_);
  root_followup_intent_name_.Swap(&other->root_followup_intent_name_);
  parent_followup_intent_name_.Swap(&other->parent_followup_intent_name_);
  swap(priority_, other->priority_);
  swap(webhook_state_, other->webhook_state_);
  swap(is_fallback_, other->is_fallback_);
  swap(ml_enabled_, other->ml_enabled_);
  swap(reset_contexts_, other->reset_contexts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Intent::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListIntentsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListIntentsRequest::kParentFieldNumber;
const int ListIntentsRequest::kLanguageCodeFieldNumber;
const int ListIntentsRequest::kIntentViewFieldNumber;
const int ListIntentsRequest::kPageSizeFieldNumber;
const int ListIntentsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListIntentsRequest::ListIntentsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsListIntentsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.ListIntentsRequest)
}
ListIntentsRequest::ListIntentsRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsListIntentsRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.ListIntentsRequest)
}
ListIntentsRequest::ListIntentsRequest(const ListIntentsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.language_code().size() > 0) {
    language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_code(),
      GetArenaNoVirtual());
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token(),
      GetArenaNoVirtual());
  }
  ::memcpy(&intent_view_, &from.intent_view_,
    static_cast<size_t>(reinterpret_cast<char*>(&page_size_) -
    reinterpret_cast<char*>(&intent_view_)) + sizeof(page_size_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.ListIntentsRequest)
}

void ListIntentsRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&intent_view_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) -
      reinterpret_cast<char*>(&intent_view_)) + sizeof(page_size_));
  _cached_size_ = 0;
}

ListIntentsRequest::~ListIntentsRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.ListIntentsRequest)
  SharedDtor();
}

void ListIntentsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListIntentsRequest::ArenaDtor(void* object) {
  ListIntentsRequest* _this = reinterpret_cast< ListIntentsRequest* >(object);
  (void)_this;
}
void ListIntentsRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ListIntentsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListIntentsRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListIntentsRequest& ListIntentsRequest::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsListIntentsRequest();
  return *internal_default_instance();
}

ListIntentsRequest* ListIntentsRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ListIntentsRequest>(arena);
}

void ListIntentsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.ListIntentsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  language_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&intent_view_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) -
      reinterpret_cast<char*>(&intent_view_)) + sizeof(page_size_));
  _internal_metadata_.Clear();
}

bool ListIntentsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.ListIntentsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.ListIntentsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string language_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language_code().data(), static_cast<int>(this->language_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.ListIntentsRequest.language_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.IntentView intent_view = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_intent_view(static_cast< ::google::cloud::dialogflow::v2beta1::IntentView >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.ListIntentsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.ListIntentsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.ListIntentsRequest)
  return false;
#undef DO_
}

void ListIntentsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.ListIntentsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.ListIntentsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.ListIntentsRequest.language_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->language_code(), output);
  }

  // .google.cloud.dialogflow.v2beta1.IntentView intent_view = 3;
  if (this->intent_view() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->intent_view(), output);
  }

  // int32 page_size = 4;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->page_size(), output);
  }

  // string page_token = 5;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.ListIntentsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.ListIntentsRequest)
}

::google::protobuf::uint8* ListIntentsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.ListIntentsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.ListIntentsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.ListIntentsRequest.language_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->language_code(), target);
  }

  // .google.cloud.dialogflow.v2beta1.IntentView intent_view = 3;
  if (this->intent_view() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->intent_view(), target);
  }

  // int32 page_size = 4;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->page_size(), target);
  }

  // string page_token = 5;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.ListIntentsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.ListIntentsRequest)
  return target;
}

size_t ListIntentsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.ListIntentsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language_code());
  }

  // string page_token = 5;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // .google.cloud.dialogflow.v2beta1.IntentView intent_view = 3;
  if (this->intent_view() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->intent_view());
  }

  // int32 page_size = 4;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListIntentsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.ListIntentsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListIntentsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListIntentsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.ListIntentsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.ListIntentsRequest)
    MergeFrom(*source);
  }
}

void ListIntentsRequest::MergeFrom(const ListIntentsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.ListIntentsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.language_code().size() > 0) {
    set_language_code(from.language_code());
  }
  if (from.page_token().size() > 0) {
    set_page_token(from.page_token());
  }
  if (from.intent_view() != 0) {
    set_intent_view(from.intent_view());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListIntentsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.ListIntentsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListIntentsRequest::CopyFrom(const ListIntentsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.ListIntentsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListIntentsRequest::IsInitialized() const {
  return true;
}

void ListIntentsRequest::Swap(ListIntentsRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListIntentsRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ListIntentsRequest::UnsafeArenaSwap(ListIntentsRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListIntentsRequest::InternalSwap(ListIntentsRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_);
  language_code_.Swap(&other->language_code_);
  page_token_.Swap(&other->page_token_);
  swap(intent_view_, other->intent_view_);
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListIntentsRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListIntentsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListIntentsResponse::kIntentsFieldNumber;
const int ListIntentsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListIntentsResponse::ListIntentsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsListIntentsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.ListIntentsResponse)
}
ListIntentsResponse::ListIntentsResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  intents_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsListIntentsResponse();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.ListIntentsResponse)
}
ListIntentsResponse::ListIntentsResponse(const ListIntentsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      intents_(from.intents_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.ListIntentsResponse)
}

void ListIntentsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListIntentsResponse::~ListIntentsResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.ListIntentsResponse)
  SharedDtor();
}

void ListIntentsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListIntentsResponse::ArenaDtor(void* object) {
  ListIntentsResponse* _this = reinterpret_cast< ListIntentsResponse* >(object);
  (void)_this;
}
void ListIntentsResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ListIntentsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListIntentsResponse::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListIntentsResponse& ListIntentsResponse::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsListIntentsResponse();
  return *internal_default_instance();
}

ListIntentsResponse* ListIntentsResponse::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ListIntentsResponse>(arena);
}

void ListIntentsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.ListIntentsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  intents_.Clear();
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool ListIntentsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.ListIntentsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.dialogflow.v2beta1.Intent intents = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_intents()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.ListIntentsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.ListIntentsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.ListIntentsResponse)
  return false;
#undef DO_
}

void ListIntentsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.ListIntentsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.dialogflow.v2beta1.Intent intents = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->intents_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->intents(static_cast<int>(i)), output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.ListIntentsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.ListIntentsResponse)
}

::google::protobuf::uint8* ListIntentsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.ListIntentsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.dialogflow.v2beta1.Intent intents = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->intents_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->intents(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.ListIntentsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.ListIntentsResponse)
  return target;
}

size_t ListIntentsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.ListIntentsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.dialogflow.v2beta1.Intent intents = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->intents_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->intents(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListIntentsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.ListIntentsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListIntentsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListIntentsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.ListIntentsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.ListIntentsResponse)
    MergeFrom(*source);
  }
}

void ListIntentsResponse::MergeFrom(const ListIntentsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.ListIntentsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  intents_.MergeFrom(from.intents_);
  if (from.next_page_token().size() > 0) {
    set_next_page_token(from.next_page_token());
  }
}

void ListIntentsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.ListIntentsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListIntentsResponse::CopyFrom(const ListIntentsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.ListIntentsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListIntentsResponse::IsInitialized() const {
  return true;
}

void ListIntentsResponse::Swap(ListIntentsResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListIntentsResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ListIntentsResponse::UnsafeArenaSwap(ListIntentsResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListIntentsResponse::InternalSwap(ListIntentsResponse* other) {
  using std::swap;
  intents_.InternalSwap(&other->intents_);
  next_page_token_.Swap(&other->next_page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListIntentsResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetIntentRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetIntentRequest::kNameFieldNumber;
const int GetIntentRequest::kLanguageCodeFieldNumber;
const int GetIntentRequest::kIntentViewFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetIntentRequest::GetIntentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsGetIntentRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.GetIntentRequest)
}
GetIntentRequest::GetIntentRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsGetIntentRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.GetIntentRequest)
}
GetIntentRequest::GetIntentRequest(const GetIntentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.language_code().size() > 0) {
    language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_code(),
      GetArenaNoVirtual());
  }
  intent_view_ = from.intent_view_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.GetIntentRequest)
}

void GetIntentRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  intent_view_ = 0;
  _cached_size_ = 0;
}

GetIntentRequest::~GetIntentRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.GetIntentRequest)
  SharedDtor();
}

void GetIntentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetIntentRequest::ArenaDtor(void* object) {
  GetIntentRequest* _this = reinterpret_cast< GetIntentRequest* >(object);
  (void)_this;
}
void GetIntentRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GetIntentRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetIntentRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetIntentRequest& GetIntentRequest::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsGetIntentRequest();
  return *internal_default_instance();
}

GetIntentRequest* GetIntentRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<GetIntentRequest>(arena);
}

void GetIntentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.GetIntentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  language_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  intent_view_ = 0;
  _internal_metadata_.Clear();
}

bool GetIntentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.GetIntentRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.GetIntentRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string language_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language_code().data(), static_cast<int>(this->language_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.GetIntentRequest.language_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.IntentView intent_view = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_intent_view(static_cast< ::google::cloud::dialogflow::v2beta1::IntentView >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.GetIntentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.GetIntentRequest)
  return false;
#undef DO_
}

void GetIntentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.GetIntentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.GetIntentRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.GetIntentRequest.language_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->language_code(), output);
  }

  // .google.cloud.dialogflow.v2beta1.IntentView intent_view = 3;
  if (this->intent_view() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->intent_view(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.GetIntentRequest)
}

::google::protobuf::uint8* GetIntentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.GetIntentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.GetIntentRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.GetIntentRequest.language_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->language_code(), target);
  }

  // .google.cloud.dialogflow.v2beta1.IntentView intent_view = 3;
  if (this->intent_view() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->intent_view(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.GetIntentRequest)
  return target;
}

size_t GetIntentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.GetIntentRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language_code());
  }

  // .google.cloud.dialogflow.v2beta1.IntentView intent_view = 3;
  if (this->intent_view() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->intent_view());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetIntentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.GetIntentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIntentRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetIntentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.GetIntentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.GetIntentRequest)
    MergeFrom(*source);
  }
}

void GetIntentRequest::MergeFrom(const GetIntentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.GetIntentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.language_code().size() > 0) {
    set_language_code(from.language_code());
  }
  if (from.intent_view() != 0) {
    set_intent_view(from.intent_view());
  }
}

void GetIntentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.GetIntentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIntentRequest::CopyFrom(const GetIntentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.GetIntentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIntentRequest::IsInitialized() const {
  return true;
}

void GetIntentRequest::Swap(GetIntentRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetIntentRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GetIntentRequest::UnsafeArenaSwap(GetIntentRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetIntentRequest::InternalSwap(GetIntentRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  language_code_.Swap(&other->language_code_);
  swap(intent_view_, other->intent_view_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetIntentRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateIntentRequest::InitAsDefaultInstance() {
  ::google::cloud::dialogflow::v2beta1::_CreateIntentRequest_default_instance_._instance.get_mutable()->intent_ = const_cast< ::google::cloud::dialogflow::v2beta1::Intent*>(
      ::google::cloud::dialogflow::v2beta1::Intent::internal_default_instance());
}
void CreateIntentRequest::_slow_mutable_intent() {
  intent_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::Intent >(
      GetArenaNoVirtual());
}
void CreateIntentRequest::unsafe_arena_set_allocated_intent(
    ::google::cloud::dialogflow::v2beta1::Intent* intent) {
  if (GetArenaNoVirtual() == NULL) {
    delete intent_;
  }
  intent_ = intent;
  if (intent) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.CreateIntentRequest.intent)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateIntentRequest::kParentFieldNumber;
const int CreateIntentRequest::kIntentFieldNumber;
const int CreateIntentRequest::kLanguageCodeFieldNumber;
const int CreateIntentRequest::kIntentViewFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateIntentRequest::CreateIntentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsCreateIntentRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.CreateIntentRequest)
}
CreateIntentRequest::CreateIntentRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsCreateIntentRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.CreateIntentRequest)
}
CreateIntentRequest::CreateIntentRequest(const CreateIntentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.language_code().size() > 0) {
    language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_code(),
      GetArenaNoVirtual());
  }
  if (from.has_intent()) {
    intent_ = new ::google::cloud::dialogflow::v2beta1::Intent(*from.intent_);
  } else {
    intent_ = NULL;
  }
  intent_view_ = from.intent_view_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.CreateIntentRequest)
}

void CreateIntentRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&intent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&intent_view_) -
      reinterpret_cast<char*>(&intent_)) + sizeof(intent_view_));
  _cached_size_ = 0;
}

CreateIntentRequest::~CreateIntentRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.CreateIntentRequest)
  SharedDtor();
}

void CreateIntentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete intent_;
}

void CreateIntentRequest::ArenaDtor(void* object) {
  CreateIntentRequest* _this = reinterpret_cast< CreateIntentRequest* >(object);
  (void)_this;
}
void CreateIntentRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CreateIntentRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateIntentRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateIntentRequest& CreateIntentRequest::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsCreateIntentRequest();
  return *internal_default_instance();
}

CreateIntentRequest* CreateIntentRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<CreateIntentRequest>(arena);
}

void CreateIntentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.CreateIntentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  language_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && intent_ != NULL) {
    delete intent_;
  }
  intent_ = NULL;
  intent_view_ = 0;
  _internal_metadata_.Clear();
}

bool CreateIntentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.CreateIntentRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.CreateIntentRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.Intent intent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_intent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string language_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language_code().data(), static_cast<int>(this->language_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.CreateIntentRequest.language_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.IntentView intent_view = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_intent_view(static_cast< ::google::cloud::dialogflow::v2beta1::IntentView >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.CreateIntentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.CreateIntentRequest)
  return false;
#undef DO_
}

void CreateIntentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.CreateIntentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.CreateIntentRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // .google.cloud.dialogflow.v2beta1.Intent intent = 2;
  if (this->has_intent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->intent_, output);
  }

  // string language_code = 3;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.CreateIntentRequest.language_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->language_code(), output);
  }

  // .google.cloud.dialogflow.v2beta1.IntentView intent_view = 4;
  if (this->intent_view() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->intent_view(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.CreateIntentRequest)
}

::google::protobuf::uint8* CreateIntentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.CreateIntentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.CreateIntentRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // .google.cloud.dialogflow.v2beta1.Intent intent = 2;
  if (this->has_intent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->intent_, deterministic, target);
  }

  // string language_code = 3;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.CreateIntentRequest.language_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->language_code(), target);
  }

  // .google.cloud.dialogflow.v2beta1.IntentView intent_view = 4;
  if (this->intent_view() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->intent_view(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.CreateIntentRequest)
  return target;
}

size_t CreateIntentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.CreateIntentRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string language_code = 3;
  if (this->language_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language_code());
  }

  // .google.cloud.dialogflow.v2beta1.Intent intent = 2;
  if (this->has_intent()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->intent_);
  }

  // .google.cloud.dialogflow.v2beta1.IntentView intent_view = 4;
  if (this->intent_view() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->intent_view());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateIntentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.CreateIntentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateIntentRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateIntentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.CreateIntentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.CreateIntentRequest)
    MergeFrom(*source);
  }
}

void CreateIntentRequest::MergeFrom(const CreateIntentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.CreateIntentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.language_code().size() > 0) {
    set_language_code(from.language_code());
  }
  if (from.has_intent()) {
    mutable_intent()->::google::cloud::dialogflow::v2beta1::Intent::MergeFrom(from.intent());
  }
  if (from.intent_view() != 0) {
    set_intent_view(from.intent_view());
  }
}

void CreateIntentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.CreateIntentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateIntentRequest::CopyFrom(const CreateIntentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.CreateIntentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateIntentRequest::IsInitialized() const {
  return true;
}

void CreateIntentRequest::Swap(CreateIntentRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CreateIntentRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CreateIntentRequest::UnsafeArenaSwap(CreateIntentRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CreateIntentRequest::InternalSwap(CreateIntentRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_);
  language_code_.Swap(&other->language_code_);
  swap(intent_, other->intent_);
  swap(intent_view_, other->intent_view_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateIntentRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateIntentRequest::InitAsDefaultInstance() {
  ::google::cloud::dialogflow::v2beta1::_UpdateIntentRequest_default_instance_._instance.get_mutable()->intent_ = const_cast< ::google::cloud::dialogflow::v2beta1::Intent*>(
      ::google::cloud::dialogflow::v2beta1::Intent::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_UpdateIntentRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
}
void UpdateIntentRequest::_slow_mutable_intent() {
  intent_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::Intent >(
      GetArenaNoVirtual());
}
void UpdateIntentRequest::unsafe_arena_set_allocated_intent(
    ::google::cloud::dialogflow::v2beta1::Intent* intent) {
  if (GetArenaNoVirtual() == NULL) {
    delete intent_;
  }
  intent_ = intent;
  if (intent) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.UpdateIntentRequest.intent)
}
void UpdateIntentRequest::_slow_mutable_update_mask() {
  update_mask_ = ::google::protobuf::Arena::Create< ::google::protobuf::FieldMask >(
      GetArenaNoVirtual());
}
void UpdateIntentRequest::unsafe_arena_set_allocated_update_mask(
    ::google::protobuf::FieldMask* update_mask) {
  if (GetArenaNoVirtual() == NULL) {
    delete update_mask_;
  }
  update_mask_ = update_mask;
  if (update_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.UpdateIntentRequest.update_mask)
}
void UpdateIntentRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateIntentRequest::kIntentFieldNumber;
const int UpdateIntentRequest::kLanguageCodeFieldNumber;
const int UpdateIntentRequest::kUpdateMaskFieldNumber;
const int UpdateIntentRequest::kIntentViewFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateIntentRequest::UpdateIntentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsUpdateIntentRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.UpdateIntentRequest)
}
UpdateIntentRequest::UpdateIntentRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsUpdateIntentRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.UpdateIntentRequest)
}
UpdateIntentRequest::UpdateIntentRequest(const UpdateIntentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.language_code().size() > 0) {
    language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_code(),
      GetArenaNoVirtual());
  }
  if (from.has_intent()) {
    intent_ = new ::google::cloud::dialogflow::v2beta1::Intent(*from.intent_);
  } else {
    intent_ = NULL;
  }
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = NULL;
  }
  intent_view_ = from.intent_view_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.UpdateIntentRequest)
}

void UpdateIntentRequest::SharedCtor() {
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&intent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&intent_view_) -
      reinterpret_cast<char*>(&intent_)) + sizeof(intent_view_));
  _cached_size_ = 0;
}

UpdateIntentRequest::~UpdateIntentRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.UpdateIntentRequest)
  SharedDtor();
}

void UpdateIntentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  language_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete intent_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateIntentRequest::ArenaDtor(void* object) {
  UpdateIntentRequest* _this = reinterpret_cast< UpdateIntentRequest* >(object);
  (void)_this;
}
void UpdateIntentRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UpdateIntentRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateIntentRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateIntentRequest& UpdateIntentRequest::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsUpdateIntentRequest();
  return *internal_default_instance();
}

UpdateIntentRequest* UpdateIntentRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<UpdateIntentRequest>(arena);
}

void UpdateIntentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.UpdateIntentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  language_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && intent_ != NULL) {
    delete intent_;
  }
  intent_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
  intent_view_ = 0;
  _internal_metadata_.Clear();
}

bool UpdateIntentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.UpdateIntentRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.dialogflow.v2beta1.Intent intent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_intent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string language_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language_code().data(), static_cast<int>(this->language_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.UpdateIntentRequest.language_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask update_mask = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.IntentView intent_view = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_intent_view(static_cast< ::google::cloud::dialogflow::v2beta1::IntentView >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.UpdateIntentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.UpdateIntentRequest)
  return false;
#undef DO_
}

void UpdateIntentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.UpdateIntentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dialogflow.v2beta1.Intent intent = 1;
  if (this->has_intent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->intent_, output);
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.UpdateIntentRequest.language_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->language_code(), output);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->update_mask_, output);
  }

  // .google.cloud.dialogflow.v2beta1.IntentView intent_view = 4;
  if (this->intent_view() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->intent_view(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.UpdateIntentRequest)
}

::google::protobuf::uint8* UpdateIntentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.UpdateIntentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dialogflow.v2beta1.Intent intent = 1;
  if (this->has_intent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->intent_, deterministic, target);
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.UpdateIntentRequest.language_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->language_code(), target);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->update_mask_, deterministic, target);
  }

  // .google.cloud.dialogflow.v2beta1.IntentView intent_view = 4;
  if (this->intent_view() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->intent_view(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.UpdateIntentRequest)
  return target;
}

size_t UpdateIntentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.UpdateIntentRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string language_code = 2;
  if (this->language_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language_code());
  }

  // .google.cloud.dialogflow.v2beta1.Intent intent = 1;
  if (this->has_intent()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->intent_);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->update_mask_);
  }

  // .google.cloud.dialogflow.v2beta1.IntentView intent_view = 4;
  if (this->intent_view() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->intent_view());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateIntentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.UpdateIntentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateIntentRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateIntentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.UpdateIntentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.UpdateIntentRequest)
    MergeFrom(*source);
  }
}

void UpdateIntentRequest::MergeFrom(const UpdateIntentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.UpdateIntentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.language_code().size() > 0) {
    set_language_code(from.language_code());
  }
  if (from.has_intent()) {
    mutable_intent()->::google::cloud::dialogflow::v2beta1::Intent::MergeFrom(from.intent());
  }
  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
  if (from.intent_view() != 0) {
    set_intent_view(from.intent_view());
  }
}

void UpdateIntentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.UpdateIntentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateIntentRequest::CopyFrom(const UpdateIntentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.UpdateIntentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateIntentRequest::IsInitialized() const {
  return true;
}

void UpdateIntentRequest::Swap(UpdateIntentRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UpdateIntentRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UpdateIntentRequest::UnsafeArenaSwap(UpdateIntentRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UpdateIntentRequest::InternalSwap(UpdateIntentRequest* other) {
  using std::swap;
  language_code_.Swap(&other->language_code_);
  swap(intent_, other->intent_);
  swap(update_mask_, other->update_mask_);
  swap(intent_view_, other->intent_view_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateIntentRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteIntentRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteIntentRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteIntentRequest::DeleteIntentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsDeleteIntentRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.DeleteIntentRequest)
}
DeleteIntentRequest::DeleteIntentRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsDeleteIntentRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.DeleteIntentRequest)
}
DeleteIntentRequest::DeleteIntentRequest(const DeleteIntentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.DeleteIntentRequest)
}

void DeleteIntentRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteIntentRequest::~DeleteIntentRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.DeleteIntentRequest)
  SharedDtor();
}

void DeleteIntentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteIntentRequest::ArenaDtor(void* object) {
  DeleteIntentRequest* _this = reinterpret_cast< DeleteIntentRequest* >(object);
  (void)_this;
}
void DeleteIntentRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DeleteIntentRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteIntentRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteIntentRequest& DeleteIntentRequest::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsDeleteIntentRequest();
  return *internal_default_instance();
}

DeleteIntentRequest* DeleteIntentRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<DeleteIntentRequest>(arena);
}

void DeleteIntentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.DeleteIntentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool DeleteIntentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.DeleteIntentRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.DeleteIntentRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.DeleteIntentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.DeleteIntentRequest)
  return false;
#undef DO_
}

void DeleteIntentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.DeleteIntentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.DeleteIntentRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.DeleteIntentRequest)
}

::google::protobuf::uint8* DeleteIntentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.DeleteIntentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.DeleteIntentRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.DeleteIntentRequest)
  return target;
}

size_t DeleteIntentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.DeleteIntentRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteIntentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.DeleteIntentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteIntentRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteIntentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.DeleteIntentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.DeleteIntentRequest)
    MergeFrom(*source);
  }
}

void DeleteIntentRequest::MergeFrom(const DeleteIntentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.DeleteIntentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void DeleteIntentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.DeleteIntentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteIntentRequest::CopyFrom(const DeleteIntentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.DeleteIntentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteIntentRequest::IsInitialized() const {
  return true;
}

void DeleteIntentRequest::Swap(DeleteIntentRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeleteIntentRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DeleteIntentRequest::UnsafeArenaSwap(DeleteIntentRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeleteIntentRequest::InternalSwap(DeleteIntentRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteIntentRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BatchUpdateIntentsRequest::InitAsDefaultInstance() {
  ::google::cloud::dialogflow::v2beta1::_BatchUpdateIntentsRequest_default_instance_.intent_batch_uri_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::cloud::dialogflow::v2beta1::_BatchUpdateIntentsRequest_default_instance_.intent_batch_inline_ = const_cast< ::google::cloud::dialogflow::v2beta1::IntentBatch*>(
      ::google::cloud::dialogflow::v2beta1::IntentBatch::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_BatchUpdateIntentsRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
}
void BatchUpdateIntentsRequest::set_allocated_intent_batch_inline(::google::cloud::dialogflow::v2beta1::IntentBatch* intent_batch_inline) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_intent_batch();
  if (intent_batch_inline) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(intent_batch_inline);
    if (message_arena != submessage_arena) {
      intent_batch_inline = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, intent_batch_inline, submessage_arena);
    }
    set_has_intent_batch_inline();
    intent_batch_.intent_batch_inline_ = intent_batch_inline;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.intent_batch_inline)
}
void BatchUpdateIntentsRequest::_slow_mutable_update_mask() {
  update_mask_ = ::google::protobuf::Arena::Create< ::google::protobuf::FieldMask >(
      GetArenaNoVirtual());
}
void BatchUpdateIntentsRequest::unsafe_arena_set_allocated_update_mask(
    ::google::protobuf::FieldMask* update_mask) {
  if (GetArenaNoVirtual() == NULL) {
    delete update_mask_;
  }
  update_mask_ = update_mask;
  if (update_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.update_mask)
}
void BatchUpdateIntentsRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchUpdateIntentsRequest::kParentFieldNumber;
const int BatchUpdateIntentsRequest::kIntentBatchUriFieldNumber;
const int BatchUpdateIntentsRequest::kIntentBatchInlineFieldNumber;
const int BatchUpdateIntentsRequest::kLanguageCodeFieldNumber;
const int BatchUpdateIntentsRequest::kUpdateMaskFieldNumber;
const int BatchUpdateIntentsRequest::kIntentViewFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchUpdateIntentsRequest::BatchUpdateIntentsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsBatchUpdateIntentsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest)
}
BatchUpdateIntentsRequest::BatchUpdateIntentsRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsBatchUpdateIntentsRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest)
}
BatchUpdateIntentsRequest::BatchUpdateIntentsRequest(const BatchUpdateIntentsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.language_code().size() > 0) {
    language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_code(),
      GetArenaNoVirtual());
  }
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = NULL;
  }
  intent_view_ = from.intent_view_;
  clear_has_intent_batch();
  switch (from.intent_batch_case()) {
    case kIntentBatchUri: {
      set_intent_batch_uri(from.intent_batch_uri());
      break;
    }
    case kIntentBatchInline: {
      mutable_intent_batch_inline()->::google::cloud::dialogflow::v2beta1::IntentBatch::MergeFrom(from.intent_batch_inline());
      break;
    }
    case INTENT_BATCH_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest)
}

void BatchUpdateIntentsRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&update_mask_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&intent_view_) -
      reinterpret_cast<char*>(&update_mask_)) + sizeof(intent_view_));
  clear_has_intent_batch();
  _cached_size_ = 0;
}

BatchUpdateIntentsRequest::~BatchUpdateIntentsRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest)
  SharedDtor();
}

void BatchUpdateIntentsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete update_mask_;
  if (has_intent_batch()) {
    clear_intent_batch();
  }
}

void BatchUpdateIntentsRequest::ArenaDtor(void* object) {
  BatchUpdateIntentsRequest* _this = reinterpret_cast< BatchUpdateIntentsRequest* >(object);
  (void)_this;
}
void BatchUpdateIntentsRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BatchUpdateIntentsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchUpdateIntentsRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BatchUpdateIntentsRequest& BatchUpdateIntentsRequest::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsBatchUpdateIntentsRequest();
  return *internal_default_instance();
}

BatchUpdateIntentsRequest* BatchUpdateIntentsRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<BatchUpdateIntentsRequest>(arena);
}

void BatchUpdateIntentsRequest::clear_intent_batch() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest)
  switch (intent_batch_case()) {
    case kIntentBatchUri: {
      intent_batch_.intent_batch_uri_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kIntentBatchInline: {
      if (GetArenaNoVirtual() == NULL) {
        delete intent_batch_.intent_batch_inline_;
      }
      break;
    }
    case INTENT_BATCH_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = INTENT_BATCH_NOT_SET;
}


void BatchUpdateIntentsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  language_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
  intent_view_ = 0;
  clear_intent_batch();
  _internal_metadata_.Clear();
}

bool BatchUpdateIntentsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string intent_batch_uri = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_intent_batch_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->intent_batch_uri().data(), static_cast<int>(this->intent_batch_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.intent_batch_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.IntentBatch intent_batch_inline = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_intent_batch_inline()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string language_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language_code().data(), static_cast<int>(this->language_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.language_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask update_mask = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.IntentView intent_view = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_intent_view(static_cast< ::google::cloud::dialogflow::v2beta1::IntentView >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest)
  return false;
#undef DO_
}

void BatchUpdateIntentsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string intent_batch_uri = 2;
  if (has_intent_batch_uri()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->intent_batch_uri().data(), static_cast<int>(this->intent_batch_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.intent_batch_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->intent_batch_uri(), output);
  }

  // .google.cloud.dialogflow.v2beta1.IntentBatch intent_batch_inline = 3;
  if (has_intent_batch_inline()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *intent_batch_.intent_batch_inline_, output);
  }

  // string language_code = 4;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.language_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->language_code(), output);
  }

  // .google.protobuf.FieldMask update_mask = 5;
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->update_mask_, output);
  }

  // .google.cloud.dialogflow.v2beta1.IntentView intent_view = 6;
  if (this->intent_view() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->intent_view(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest)
}

::google::protobuf::uint8* BatchUpdateIntentsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string intent_batch_uri = 2;
  if (has_intent_batch_uri()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->intent_batch_uri().data(), static_cast<int>(this->intent_batch_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.intent_batch_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->intent_batch_uri(), target);
  }

  // .google.cloud.dialogflow.v2beta1.IntentBatch intent_batch_inline = 3;
  if (has_intent_batch_inline()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *intent_batch_.intent_batch_inline_, deterministic, target);
  }

  // string language_code = 4;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.language_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->language_code(), target);
  }

  // .google.protobuf.FieldMask update_mask = 5;
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->update_mask_, deterministic, target);
  }

  // .google.cloud.dialogflow.v2beta1.IntentView intent_view = 6;
  if (this->intent_view() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->intent_view(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest)
  return target;
}

size_t BatchUpdateIntentsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string language_code = 4;
  if (this->language_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language_code());
  }

  // .google.protobuf.FieldMask update_mask = 5;
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->update_mask_);
  }

  // .google.cloud.dialogflow.v2beta1.IntentView intent_view = 6;
  if (this->intent_view() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->intent_view());
  }

  switch (intent_batch_case()) {
    // string intent_batch_uri = 2;
    case kIntentBatchUri: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->intent_batch_uri());
      break;
    }
    // .google.cloud.dialogflow.v2beta1.IntentBatch intent_batch_inline = 3;
    case kIntentBatchInline: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *intent_batch_.intent_batch_inline_);
      break;
    }
    case INTENT_BATCH_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchUpdateIntentsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchUpdateIntentsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchUpdateIntentsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest)
    MergeFrom(*source);
  }
}

void BatchUpdateIntentsRequest::MergeFrom(const BatchUpdateIntentsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.language_code().size() > 0) {
    set_language_code(from.language_code());
  }
  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
  if (from.intent_view() != 0) {
    set_intent_view(from.intent_view());
  }
  switch (from.intent_batch_case()) {
    case kIntentBatchUri: {
      set_intent_batch_uri(from.intent_batch_uri());
      break;
    }
    case kIntentBatchInline: {
      mutable_intent_batch_inline()->::google::cloud::dialogflow::v2beta1::IntentBatch::MergeFrom(from.intent_batch_inline());
      break;
    }
    case INTENT_BATCH_NOT_SET: {
      break;
    }
  }
}

void BatchUpdateIntentsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchUpdateIntentsRequest::CopyFrom(const BatchUpdateIntentsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchUpdateIntentsRequest::IsInitialized() const {
  return true;
}

void BatchUpdateIntentsRequest::Swap(BatchUpdateIntentsRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BatchUpdateIntentsRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BatchUpdateIntentsRequest::UnsafeArenaSwap(BatchUpdateIntentsRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BatchUpdateIntentsRequest::InternalSwap(BatchUpdateIntentsRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_);
  language_code_.Swap(&other->language_code_);
  swap(update_mask_, other->update_mask_);
  swap(intent_view_, other->intent_view_);
  swap(intent_batch_, other->intent_batch_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BatchUpdateIntentsRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BatchUpdateIntentsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchUpdateIntentsResponse::kIntentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchUpdateIntentsResponse::BatchUpdateIntentsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsBatchUpdateIntentsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse)
}
BatchUpdateIntentsResponse::BatchUpdateIntentsResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  intents_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsBatchUpdateIntentsResponse();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse)
}
BatchUpdateIntentsResponse::BatchUpdateIntentsResponse(const BatchUpdateIntentsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      intents_(from.intents_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse)
}

void BatchUpdateIntentsResponse::SharedCtor() {
  _cached_size_ = 0;
}

BatchUpdateIntentsResponse::~BatchUpdateIntentsResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse)
  SharedDtor();
}

void BatchUpdateIntentsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void BatchUpdateIntentsResponse::ArenaDtor(void* object) {
  BatchUpdateIntentsResponse* _this = reinterpret_cast< BatchUpdateIntentsResponse* >(object);
  (void)_this;
}
void BatchUpdateIntentsResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BatchUpdateIntentsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchUpdateIntentsResponse::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BatchUpdateIntentsResponse& BatchUpdateIntentsResponse::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsBatchUpdateIntentsResponse();
  return *internal_default_instance();
}

BatchUpdateIntentsResponse* BatchUpdateIntentsResponse::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<BatchUpdateIntentsResponse>(arena);
}

void BatchUpdateIntentsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  intents_.Clear();
  _internal_metadata_.Clear();
}

bool BatchUpdateIntentsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.dialogflow.v2beta1.Intent intents = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_intents()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse)
  return false;
#undef DO_
}

void BatchUpdateIntentsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.dialogflow.v2beta1.Intent intents = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->intents_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->intents(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse)
}

::google::protobuf::uint8* BatchUpdateIntentsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.dialogflow.v2beta1.Intent intents = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->intents_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->intents(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse)
  return target;
}

size_t BatchUpdateIntentsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.dialogflow.v2beta1.Intent intents = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->intents_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->intents(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchUpdateIntentsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchUpdateIntentsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchUpdateIntentsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse)
    MergeFrom(*source);
  }
}

void BatchUpdateIntentsResponse::MergeFrom(const BatchUpdateIntentsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  intents_.MergeFrom(from.intents_);
}

void BatchUpdateIntentsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchUpdateIntentsResponse::CopyFrom(const BatchUpdateIntentsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchUpdateIntentsResponse::IsInitialized() const {
  return true;
}

void BatchUpdateIntentsResponse::Swap(BatchUpdateIntentsResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BatchUpdateIntentsResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BatchUpdateIntentsResponse::UnsafeArenaSwap(BatchUpdateIntentsResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BatchUpdateIntentsResponse::InternalSwap(BatchUpdateIntentsResponse* other) {
  using std::swap;
  intents_.InternalSwap(&other->intents_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BatchUpdateIntentsResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BatchDeleteIntentsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchDeleteIntentsRequest::kParentFieldNumber;
const int BatchDeleteIntentsRequest::kIntentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchDeleteIntentsRequest::BatchDeleteIntentsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsBatchDeleteIntentsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest)
}
BatchDeleteIntentsRequest::BatchDeleteIntentsRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  intents_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsBatchDeleteIntentsRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest)
}
BatchDeleteIntentsRequest::BatchDeleteIntentsRequest(const BatchDeleteIntentsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      intents_(from.intents_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest)
}

void BatchDeleteIntentsRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BatchDeleteIntentsRequest::~BatchDeleteIntentsRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest)
  SharedDtor();
}

void BatchDeleteIntentsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BatchDeleteIntentsRequest::ArenaDtor(void* object) {
  BatchDeleteIntentsRequest* _this = reinterpret_cast< BatchDeleteIntentsRequest* >(object);
  (void)_this;
}
void BatchDeleteIntentsRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BatchDeleteIntentsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchDeleteIntentsRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BatchDeleteIntentsRequest& BatchDeleteIntentsRequest::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsBatchDeleteIntentsRequest();
  return *internal_default_instance();
}

BatchDeleteIntentsRequest* BatchDeleteIntentsRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<BatchDeleteIntentsRequest>(arena);
}

void BatchDeleteIntentsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  intents_.Clear();
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool BatchDeleteIntentsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.dialogflow.v2beta1.Intent intents = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_intents()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest)
  return false;
#undef DO_
}

void BatchDeleteIntentsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent intents = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->intents_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->intents(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest)
}

::google::protobuf::uint8* BatchDeleteIntentsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // repeated .google.cloud.dialogflow.v2beta1.Intent intents = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->intents_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->intents(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest)
  return target;
}

size_t BatchDeleteIntentsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.dialogflow.v2beta1.Intent intents = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->intents_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->intents(static_cast<int>(i)));
    }
  }

  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchDeleteIntentsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchDeleteIntentsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchDeleteIntentsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest)
    MergeFrom(*source);
  }
}

void BatchDeleteIntentsRequest::MergeFrom(const BatchDeleteIntentsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  intents_.MergeFrom(from.intents_);
  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
}

void BatchDeleteIntentsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchDeleteIntentsRequest::CopyFrom(const BatchDeleteIntentsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchDeleteIntentsRequest::IsInitialized() const {
  return true;
}

void BatchDeleteIntentsRequest::Swap(BatchDeleteIntentsRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BatchDeleteIntentsRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BatchDeleteIntentsRequest::UnsafeArenaSwap(BatchDeleteIntentsRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BatchDeleteIntentsRequest::InternalSwap(BatchDeleteIntentsRequest* other) {
  using std::swap;
  intents_.InternalSwap(&other->intents_);
  parent_.Swap(&other->parent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BatchDeleteIntentsRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IntentBatch::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IntentBatch::kIntentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IntentBatch::IntentBatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntentBatch();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.IntentBatch)
}
IntentBatch::IntentBatch(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  intents_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntentBatch();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.IntentBatch)
}
IntentBatch::IntentBatch(const IntentBatch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      intents_(from.intents_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.IntentBatch)
}

void IntentBatch::SharedCtor() {
  _cached_size_ = 0;
}

IntentBatch::~IntentBatch() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.IntentBatch)
  SharedDtor();
}

void IntentBatch::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void IntentBatch::ArenaDtor(void* object) {
  IntentBatch* _this = reinterpret_cast< IntentBatch* >(object);
  (void)_this;
}
void IntentBatch::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void IntentBatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IntentBatch::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IntentBatch& IntentBatch::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntentBatch();
  return *internal_default_instance();
}

IntentBatch* IntentBatch::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<IntentBatch>(arena);
}

void IntentBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.IntentBatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  intents_.Clear();
  _internal_metadata_.Clear();
}

bool IntentBatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.IntentBatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.dialogflow.v2beta1.Intent intents = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_intents()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.IntentBatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.IntentBatch)
  return false;
#undef DO_
}

void IntentBatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.IntentBatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.dialogflow.v2beta1.Intent intents = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->intents_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->intents(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.IntentBatch)
}

::google::protobuf::uint8* IntentBatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.IntentBatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.dialogflow.v2beta1.Intent intents = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->intents_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->intents(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.IntentBatch)
  return target;
}

size_t IntentBatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.IntentBatch)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.dialogflow.v2beta1.Intent intents = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->intents_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->intents(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IntentBatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.IntentBatch)
  GOOGLE_DCHECK_NE(&from, this);
  const IntentBatch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IntentBatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.IntentBatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.IntentBatch)
    MergeFrom(*source);
  }
}

void IntentBatch::MergeFrom(const IntentBatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.IntentBatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  intents_.MergeFrom(from.intents_);
}

void IntentBatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.IntentBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntentBatch::CopyFrom(const IntentBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.IntentBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntentBatch::IsInitialized() const {
  return true;
}

void IntentBatch::Swap(IntentBatch* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    IntentBatch* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void IntentBatch::UnsafeArenaSwap(IntentBatch* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void IntentBatch::InternalSwap(IntentBatch* other) {
  using std::swap;
  intents_.InternalSwap(&other->intents_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IntentBatch::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)
