// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/cloud/dialogflow/v2beta1/runtime.proto
// Original file comments:
// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#ifndef GRPC_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto__INCLUDED
#define GRPC_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto__INCLUDED

#include "google/cloud/dialogflow/v2beta1/runtime.pb.h"

#include <grpc++/impl/codegen/async_stream.h>
#include <grpc++/impl/codegen/async_unary_call.h>
#include <grpc++/impl/codegen/method_handler_impl.h>
#include <grpc++/impl/codegen/proto_utils.h>
#include <grpc++/impl/codegen/rpc_method.h>
#include <grpc++/impl/codegen/service_type.h>
#include <grpc++/impl/codegen/status.h>
#include <grpc++/impl/codegen/stub_options.h>
#include <grpc++/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {

// Manages agent runtimes.
//
//
// Standard methods.
class Runtimes final {
 public:
  static constexpr char const* service_full_name() {
    return "google.cloud.dialogflow.v2beta1.Runtimes";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Returns the list of all runtimes of the specified agent.
    virtual ::grpc::Status ListRuntimes(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListRuntimesRequest& request, ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse>> AsyncListRuntimes(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListRuntimesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse>>(AsyncListRuntimesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse>> PrepareAsyncListRuntimes(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListRuntimesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse>>(PrepareAsyncListRuntimesRaw(context, request, cq));
    }
    // Retrieves the specified agent runtime.
    virtual ::grpc::Status GetRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeRequest& request, ::google::cloud::dialogflow::v2beta1::Runtime* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::Runtime>> AsyncGetRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::Runtime>>(AsyncGetRuntimeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::Runtime>> PrepareAsyncGetRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::Runtime>>(PrepareAsyncGetRuntimeRaw(context, request, cq));
    }
    // Creates an agent runtime.
    virtual ::grpc::Status CreateRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateRuntimeRequest& request, ::google::cloud::dialogflow::v2beta1::Runtime* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::Runtime>> AsyncCreateRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateRuntimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::Runtime>>(AsyncCreateRuntimeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::Runtime>> PrepareAsyncCreateRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateRuntimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::Runtime>>(PrepareAsyncCreateRuntimeRaw(context, request, cq));
    }
    // Updates the specified agent runtime.
    //
    // This method allows you to deploy new agent versions into the runtime.
    // When a runtime is pointed to a new agent version by setting
    // `runtime.agent_version`, the runtime is temporarily set to the `LOADING`
    // state. During that time, the runtime keeps on serving the previous version
    // of the agent. After the new agent version is done loading, the runtime is
    // set back to the `RUNNING` state.
    //
    // Operation<response: Runtime>
    virtual ::grpc::Status UpdateRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateRuntimeRequest& request, ::google::longrunning::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> AsyncUpdateRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateRuntimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(AsyncUpdateRuntimeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> PrepareAsyncUpdateRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateRuntimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(PrepareAsyncUpdateRuntimeRaw(context, request, cq));
    }
    // Deletes the specified agent runtime.
    virtual ::grpc::Status DeleteRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteRuntimeRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteRuntimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteRuntimeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteRuntimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteRuntimeRaw(context, request, cq));
    }
    // Gets the history of the specified runtime.
    virtual ::grpc::Status GetRuntimeHistory(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeHistoryRequest& request, ::google::cloud::dialogflow::v2beta1::RuntimeHistory* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::RuntimeHistory>> AsyncGetRuntimeHistory(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeHistoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::RuntimeHistory>>(AsyncGetRuntimeHistoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::RuntimeHistory>> PrepareAsyncGetRuntimeHistory(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeHistoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::RuntimeHistory>>(PrepareAsyncGetRuntimeHistoryRaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse>* AsyncListRuntimesRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListRuntimesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse>* PrepareAsyncListRuntimesRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListRuntimesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::Runtime>* AsyncGetRuntimeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::Runtime>* PrepareAsyncGetRuntimeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::Runtime>* AsyncCreateRuntimeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateRuntimeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::Runtime>* PrepareAsyncCreateRuntimeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateRuntimeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* AsyncUpdateRuntimeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateRuntimeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* PrepareAsyncUpdateRuntimeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateRuntimeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteRuntimeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteRuntimeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteRuntimeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteRuntimeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::RuntimeHistory>* AsyncGetRuntimeHistoryRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeHistoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::RuntimeHistory>* PrepareAsyncGetRuntimeHistoryRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeHistoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status ListRuntimes(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListRuntimesRequest& request, ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse>> AsyncListRuntimes(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListRuntimesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse>>(AsyncListRuntimesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse>> PrepareAsyncListRuntimes(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListRuntimesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse>>(PrepareAsyncListRuntimesRaw(context, request, cq));
    }
    ::grpc::Status GetRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeRequest& request, ::google::cloud::dialogflow::v2beta1::Runtime* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Runtime>> AsyncGetRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Runtime>>(AsyncGetRuntimeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Runtime>> PrepareAsyncGetRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Runtime>>(PrepareAsyncGetRuntimeRaw(context, request, cq));
    }
    ::grpc::Status CreateRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateRuntimeRequest& request, ::google::cloud::dialogflow::v2beta1::Runtime* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Runtime>> AsyncCreateRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateRuntimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Runtime>>(AsyncCreateRuntimeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Runtime>> PrepareAsyncCreateRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateRuntimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Runtime>>(PrepareAsyncCreateRuntimeRaw(context, request, cq));
    }
    ::grpc::Status UpdateRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateRuntimeRequest& request, ::google::longrunning::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> AsyncUpdateRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateRuntimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(AsyncUpdateRuntimeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> PrepareAsyncUpdateRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateRuntimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(PrepareAsyncUpdateRuntimeRaw(context, request, cq));
    }
    ::grpc::Status DeleteRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteRuntimeRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteRuntimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteRuntimeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteRuntimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteRuntimeRaw(context, request, cq));
    }
    ::grpc::Status GetRuntimeHistory(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeHistoryRequest& request, ::google::cloud::dialogflow::v2beta1::RuntimeHistory* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::RuntimeHistory>> AsyncGetRuntimeHistory(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeHistoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::RuntimeHistory>>(AsyncGetRuntimeHistoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::RuntimeHistory>> PrepareAsyncGetRuntimeHistory(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeHistoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::RuntimeHistory>>(PrepareAsyncGetRuntimeHistoryRaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse>* AsyncListRuntimesRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListRuntimesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse>* PrepareAsyncListRuntimesRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListRuntimesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Runtime>* AsyncGetRuntimeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Runtime>* PrepareAsyncGetRuntimeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Runtime>* AsyncCreateRuntimeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateRuntimeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Runtime>* PrepareAsyncCreateRuntimeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateRuntimeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* AsyncUpdateRuntimeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateRuntimeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* PrepareAsyncUpdateRuntimeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateRuntimeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteRuntimeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteRuntimeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteRuntimeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteRuntimeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::RuntimeHistory>* AsyncGetRuntimeHistoryRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeHistoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::RuntimeHistory>* PrepareAsyncGetRuntimeHistoryRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeHistoryRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_ListRuntimes_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRuntime_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateRuntime_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateRuntime_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteRuntime_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRuntimeHistory_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Returns the list of all runtimes of the specified agent.
    virtual ::grpc::Status ListRuntimes(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::ListRuntimesRequest* request, ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse* response);
    // Retrieves the specified agent runtime.
    virtual ::grpc::Status GetRuntime(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeRequest* request, ::google::cloud::dialogflow::v2beta1::Runtime* response);
    // Creates an agent runtime.
    virtual ::grpc::Status CreateRuntime(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::CreateRuntimeRequest* request, ::google::cloud::dialogflow::v2beta1::Runtime* response);
    // Updates the specified agent runtime.
    //
    // This method allows you to deploy new agent versions into the runtime.
    // When a runtime is pointed to a new agent version by setting
    // `runtime.agent_version`, the runtime is temporarily set to the `LOADING`
    // state. During that time, the runtime keeps on serving the previous version
    // of the agent. After the new agent version is done loading, the runtime is
    // set back to the `RUNNING` state.
    //
    // Operation<response: Runtime>
    virtual ::grpc::Status UpdateRuntime(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateRuntimeRequest* request, ::google::longrunning::Operation* response);
    // Deletes the specified agent runtime.
    virtual ::grpc::Status DeleteRuntime(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteRuntimeRequest* request, ::google::protobuf::Empty* response);
    // Gets the history of the specified runtime.
    virtual ::grpc::Status GetRuntimeHistory(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeHistoryRequest* request, ::google::cloud::dialogflow::v2beta1::RuntimeHistory* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_ListRuntimes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListRuntimes() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_ListRuntimes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRuntimes(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::ListRuntimesRequest* request, ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRuntimes(::grpc::ServerContext* context, ::google::cloud::dialogflow::v2beta1::ListRuntimesRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRuntime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetRuntime() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetRuntime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRuntime(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeRequest* request, ::google::cloud::dialogflow::v2beta1::Runtime* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRuntime(::grpc::ServerContext* context, ::google::cloud::dialogflow::v2beta1::GetRuntimeRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::dialogflow::v2beta1::Runtime>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateRuntime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateRuntime() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_CreateRuntime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRuntime(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::CreateRuntimeRequest* request, ::google::cloud::dialogflow::v2beta1::Runtime* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateRuntime(::grpc::ServerContext* context, ::google::cloud::dialogflow::v2beta1::CreateRuntimeRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::dialogflow::v2beta1::Runtime>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateRuntime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateRuntime() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_UpdateRuntime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateRuntime(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateRuntimeRequest* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateRuntime(::grpc::ServerContext* context, ::google::cloud::dialogflow::v2beta1::UpdateRuntimeRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::longrunning::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteRuntime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteRuntime() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_DeleteRuntime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRuntime(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteRuntimeRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteRuntime(::grpc::ServerContext* context, ::google::cloud::dialogflow::v2beta1::DeleteRuntimeRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRuntimeHistory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetRuntimeHistory() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_GetRuntimeHistory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRuntimeHistory(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeHistoryRequest* request, ::google::cloud::dialogflow::v2beta1::RuntimeHistory* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRuntimeHistory(::grpc::ServerContext* context, ::google::cloud::dialogflow::v2beta1::GetRuntimeHistoryRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::dialogflow::v2beta1::RuntimeHistory>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_ListRuntimes<WithAsyncMethod_GetRuntime<WithAsyncMethod_CreateRuntime<WithAsyncMethod_UpdateRuntime<WithAsyncMethod_DeleteRuntime<WithAsyncMethod_GetRuntimeHistory<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_ListRuntimes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListRuntimes() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_ListRuntimes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRuntimes(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::ListRuntimesRequest* request, ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRuntime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetRuntime() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetRuntime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRuntime(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeRequest* request, ::google::cloud::dialogflow::v2beta1::Runtime* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateRuntime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateRuntime() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_CreateRuntime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRuntime(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::CreateRuntimeRequest* request, ::google::cloud::dialogflow::v2beta1::Runtime* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateRuntime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateRuntime() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_UpdateRuntime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateRuntime(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateRuntimeRequest* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteRuntime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteRuntime() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_DeleteRuntime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRuntime(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteRuntimeRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRuntimeHistory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetRuntimeHistory() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_GetRuntimeHistory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRuntimeHistory(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeHistoryRequest* request, ::google::cloud::dialogflow::v2beta1::RuntimeHistory* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListRuntimes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListRuntimes() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::dialogflow::v2beta1::ListRuntimesRequest, ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse>(std::bind(&WithStreamedUnaryMethod_ListRuntimes<BaseClass>::StreamedListRuntimes, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListRuntimes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListRuntimes(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::ListRuntimesRequest* request, ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListRuntimes(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dialogflow::v2beta1::ListRuntimesRequest,::google::cloud::dialogflow::v2beta1::ListRuntimesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRuntime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetRuntime() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::dialogflow::v2beta1::GetRuntimeRequest, ::google::cloud::dialogflow::v2beta1::Runtime>(std::bind(&WithStreamedUnaryMethod_GetRuntime<BaseClass>::StreamedGetRuntime, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetRuntime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRuntime(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeRequest* request, ::google::cloud::dialogflow::v2beta1::Runtime* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRuntime(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dialogflow::v2beta1::GetRuntimeRequest,::google::cloud::dialogflow::v2beta1::Runtime>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateRuntime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateRuntime() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::dialogflow::v2beta1::CreateRuntimeRequest, ::google::cloud::dialogflow::v2beta1::Runtime>(std::bind(&WithStreamedUnaryMethod_CreateRuntime<BaseClass>::StreamedCreateRuntime, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateRuntime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateRuntime(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::CreateRuntimeRequest* request, ::google::cloud::dialogflow::v2beta1::Runtime* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateRuntime(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dialogflow::v2beta1::CreateRuntimeRequest,::google::cloud::dialogflow::v2beta1::Runtime>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateRuntime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateRuntime() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::dialogflow::v2beta1::UpdateRuntimeRequest, ::google::longrunning::Operation>(std::bind(&WithStreamedUnaryMethod_UpdateRuntime<BaseClass>::StreamedUpdateRuntime, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateRuntime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateRuntime(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateRuntimeRequest* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateRuntime(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dialogflow::v2beta1::UpdateRuntimeRequest,::google::longrunning::Operation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteRuntime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteRuntime() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::dialogflow::v2beta1::DeleteRuntimeRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_DeleteRuntime<BaseClass>::StreamedDeleteRuntime, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteRuntime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteRuntime(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteRuntimeRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteRuntime(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dialogflow::v2beta1::DeleteRuntimeRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRuntimeHistory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetRuntimeHistory() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::dialogflow::v2beta1::GetRuntimeHistoryRequest, ::google::cloud::dialogflow::v2beta1::RuntimeHistory>(std::bind(&WithStreamedUnaryMethod_GetRuntimeHistory<BaseClass>::StreamedGetRuntimeHistory, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetRuntimeHistory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRuntimeHistory(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeHistoryRequest* request, ::google::cloud::dialogflow::v2beta1::RuntimeHistory* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRuntimeHistory(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dialogflow::v2beta1::GetRuntimeHistoryRequest,::google::cloud::dialogflow::v2beta1::RuntimeHistory>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_ListRuntimes<WithStreamedUnaryMethod_GetRuntime<WithStreamedUnaryMethod_CreateRuntime<WithStreamedUnaryMethod_UpdateRuntime<WithStreamedUnaryMethod_DeleteRuntime<WithStreamedUnaryMethod_GetRuntimeHistory<Service > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_ListRuntimes<WithStreamedUnaryMethod_GetRuntime<WithStreamedUnaryMethod_CreateRuntime<WithStreamedUnaryMethod_UpdateRuntime<WithStreamedUnaryMethod_DeleteRuntime<WithStreamedUnaryMethod_GetRuntimeHistory<Service > > > > > > StreamedService;
};

}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google


#endif  // GRPC_google_2fcloud_2fdialogflow_2fv2beta1_2fruntime_2eproto__INCLUDED
