// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/cloud/dialogflow/v2beta1/runtime.proto

#include "google/cloud/dialogflow/v2beta1/runtime.pb.h"
#include "google/cloud/dialogflow/v2beta1/runtime.grpc.pb.h"

#include <grpc++/impl/codegen/async_stream.h>
#include <grpc++/impl/codegen/async_unary_call.h>
#include <grpc++/impl/codegen/channel_interface.h>
#include <grpc++/impl/codegen/client_unary_call.h>
#include <grpc++/impl/codegen/method_handler_impl.h>
#include <grpc++/impl/codegen/rpc_service_method.h>
#include <grpc++/impl/codegen/service_type.h>
#include <grpc++/impl/codegen/sync_stream.h>
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {

static const char* Runtimes_method_names[] = {
  "/google.cloud.dialogflow.v2beta1.Runtimes/ListRuntimes",
  "/google.cloud.dialogflow.v2beta1.Runtimes/GetRuntime",
  "/google.cloud.dialogflow.v2beta1.Runtimes/CreateRuntime",
  "/google.cloud.dialogflow.v2beta1.Runtimes/UpdateRuntime",
  "/google.cloud.dialogflow.v2beta1.Runtimes/DeleteRuntime",
  "/google.cloud.dialogflow.v2beta1.Runtimes/GetRuntimeHistory",
};

std::unique_ptr< Runtimes::Stub> Runtimes::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< Runtimes::Stub> stub(new Runtimes::Stub(channel));
  return stub;
}

Runtimes::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_ListRuntimes_(Runtimes_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetRuntime_(Runtimes_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateRuntime_(Runtimes_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateRuntime_(Runtimes_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteRuntime_(Runtimes_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetRuntimeHistory_(Runtimes_method_names[5], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status Runtimes::Stub::ListRuntimes(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListRuntimesRequest& request, ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListRuntimes_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse>* Runtimes::Stub::AsyncListRuntimesRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListRuntimesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse>::Create(channel_.get(), cq, rpcmethod_ListRuntimes_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse>* Runtimes::Stub::PrepareAsyncListRuntimesRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListRuntimesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse>::Create(channel_.get(), cq, rpcmethod_ListRuntimes_, context, request, false);
}

::grpc::Status Runtimes::Stub::GetRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeRequest& request, ::google::cloud::dialogflow::v2beta1::Runtime* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetRuntime_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Runtime>* Runtimes::Stub::AsyncGetRuntimeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dialogflow::v2beta1::Runtime>::Create(channel_.get(), cq, rpcmethod_GetRuntime_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Runtime>* Runtimes::Stub::PrepareAsyncGetRuntimeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dialogflow::v2beta1::Runtime>::Create(channel_.get(), cq, rpcmethod_GetRuntime_, context, request, false);
}

::grpc::Status Runtimes::Stub::CreateRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateRuntimeRequest& request, ::google::cloud::dialogflow::v2beta1::Runtime* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateRuntime_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Runtime>* Runtimes::Stub::AsyncCreateRuntimeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateRuntimeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dialogflow::v2beta1::Runtime>::Create(channel_.get(), cq, rpcmethod_CreateRuntime_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Runtime>* Runtimes::Stub::PrepareAsyncCreateRuntimeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateRuntimeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dialogflow::v2beta1::Runtime>::Create(channel_.get(), cq, rpcmethod_CreateRuntime_, context, request, false);
}

::grpc::Status Runtimes::Stub::UpdateRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateRuntimeRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateRuntime_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* Runtimes::Stub::AsyncUpdateRuntimeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateRuntimeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_UpdateRuntime_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* Runtimes::Stub::PrepareAsyncUpdateRuntimeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateRuntimeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_UpdateRuntime_, context, request, false);
}

::grpc::Status Runtimes::Stub::DeleteRuntime(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteRuntimeRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteRuntime_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Runtimes::Stub::AsyncDeleteRuntimeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteRuntimeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteRuntime_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Runtimes::Stub::PrepareAsyncDeleteRuntimeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteRuntimeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteRuntime_, context, request, false);
}

::grpc::Status Runtimes::Stub::GetRuntimeHistory(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeHistoryRequest& request, ::google::cloud::dialogflow::v2beta1::RuntimeHistory* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetRuntimeHistory_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::RuntimeHistory>* Runtimes::Stub::AsyncGetRuntimeHistoryRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeHistoryRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dialogflow::v2beta1::RuntimeHistory>::Create(channel_.get(), cq, rpcmethod_GetRuntimeHistory_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::RuntimeHistory>* Runtimes::Stub::PrepareAsyncGetRuntimeHistoryRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeHistoryRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dialogflow::v2beta1::RuntimeHistory>::Create(channel_.get(), cq, rpcmethod_GetRuntimeHistory_, context, request, false);
}

Runtimes::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtimes_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Runtimes::Service, ::google::cloud::dialogflow::v2beta1::ListRuntimesRequest, ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse>(
          std::mem_fn(&Runtimes::Service::ListRuntimes), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtimes_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Runtimes::Service, ::google::cloud::dialogflow::v2beta1::GetRuntimeRequest, ::google::cloud::dialogflow::v2beta1::Runtime>(
          std::mem_fn(&Runtimes::Service::GetRuntime), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtimes_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Runtimes::Service, ::google::cloud::dialogflow::v2beta1::CreateRuntimeRequest, ::google::cloud::dialogflow::v2beta1::Runtime>(
          std::mem_fn(&Runtimes::Service::CreateRuntime), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtimes_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Runtimes::Service, ::google::cloud::dialogflow::v2beta1::UpdateRuntimeRequest, ::google::longrunning::Operation>(
          std::mem_fn(&Runtimes::Service::UpdateRuntime), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtimes_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Runtimes::Service, ::google::cloud::dialogflow::v2beta1::DeleteRuntimeRequest, ::google::protobuf::Empty>(
          std::mem_fn(&Runtimes::Service::DeleteRuntime), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Runtimes_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Runtimes::Service, ::google::cloud::dialogflow::v2beta1::GetRuntimeHistoryRequest, ::google::cloud::dialogflow::v2beta1::RuntimeHistory>(
          std::mem_fn(&Runtimes::Service::GetRuntimeHistory), this)));
}

Runtimes::Service::~Service() {
}

::grpc::Status Runtimes::Service::ListRuntimes(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::ListRuntimesRequest* request, ::google::cloud::dialogflow::v2beta1::ListRuntimesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtimes::Service::GetRuntime(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeRequest* request, ::google::cloud::dialogflow::v2beta1::Runtime* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtimes::Service::CreateRuntime(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::CreateRuntimeRequest* request, ::google::cloud::dialogflow::v2beta1::Runtime* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtimes::Service::UpdateRuntime(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateRuntimeRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtimes::Service::DeleteRuntime(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteRuntimeRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Runtimes::Service::GetRuntimeHistory(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::GetRuntimeHistoryRequest* request, ::google::cloud::dialogflow::v2beta1::RuntimeHistory* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace cloud
}  // namespace dialogflow
}  // namespace v2beta1

