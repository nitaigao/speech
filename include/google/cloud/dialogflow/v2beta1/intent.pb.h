// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/v2beta1/intent.proto

#ifndef PROTOBUF_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto__INCLUDED
#define PROTOBUF_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/cloud/dialogflow/v2beta1/context.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/field_mask.pb.h>
#include <google/protobuf/struct.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[34];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsIntent_TrainingPhrase_PartImpl();
void InitDefaultsIntent_TrainingPhrase_Part();
void InitDefaultsIntent_TrainingPhraseImpl();
void InitDefaultsIntent_TrainingPhrase();
void InitDefaultsIntent_ParameterImpl();
void InitDefaultsIntent_Parameter();
void InitDefaultsIntent_Message_TextImpl();
void InitDefaultsIntent_Message_Text();
void InitDefaultsIntent_Message_ImageImpl();
void InitDefaultsIntent_Message_Image();
void InitDefaultsIntent_Message_QuickRepliesImpl();
void InitDefaultsIntent_Message_QuickReplies();
void InitDefaultsIntent_Message_Card_ButtonImpl();
void InitDefaultsIntent_Message_Card_Button();
void InitDefaultsIntent_Message_CardImpl();
void InitDefaultsIntent_Message_Card();
void InitDefaultsIntent_Message_SimpleResponseImpl();
void InitDefaultsIntent_Message_SimpleResponse();
void InitDefaultsIntent_Message_SimpleResponsesImpl();
void InitDefaultsIntent_Message_SimpleResponses();
void InitDefaultsIntent_Message_BasicCard_Button_OpenUriActionImpl();
void InitDefaultsIntent_Message_BasicCard_Button_OpenUriAction();
void InitDefaultsIntent_Message_BasicCard_ButtonImpl();
void InitDefaultsIntent_Message_BasicCard_Button();
void InitDefaultsIntent_Message_BasicCardImpl();
void InitDefaultsIntent_Message_BasicCard();
void InitDefaultsIntent_Message_SuggestionImpl();
void InitDefaultsIntent_Message_Suggestion();
void InitDefaultsIntent_Message_SuggestionsImpl();
void InitDefaultsIntent_Message_Suggestions();
void InitDefaultsIntent_Message_LinkOutSuggestionImpl();
void InitDefaultsIntent_Message_LinkOutSuggestion();
void InitDefaultsIntent_Message_ListSelect_ItemImpl();
void InitDefaultsIntent_Message_ListSelect_Item();
void InitDefaultsIntent_Message_ListSelectImpl();
void InitDefaultsIntent_Message_ListSelect();
void InitDefaultsIntent_Message_CarouselSelect_ItemImpl();
void InitDefaultsIntent_Message_CarouselSelect_Item();
void InitDefaultsIntent_Message_CarouselSelectImpl();
void InitDefaultsIntent_Message_CarouselSelect();
void InitDefaultsIntent_Message_SelectItemInfoImpl();
void InitDefaultsIntent_Message_SelectItemInfo();
void InitDefaultsIntent_MessageImpl();
void InitDefaultsIntent_Message();
void InitDefaultsIntent_FollowupIntentInfoImpl();
void InitDefaultsIntent_FollowupIntentInfo();
void InitDefaultsIntentImpl();
void InitDefaultsIntent();
void InitDefaultsListIntentsRequestImpl();
void InitDefaultsListIntentsRequest();
void InitDefaultsListIntentsResponseImpl();
void InitDefaultsListIntentsResponse();
void InitDefaultsGetIntentRequestImpl();
void InitDefaultsGetIntentRequest();
void InitDefaultsCreateIntentRequestImpl();
void InitDefaultsCreateIntentRequest();
void InitDefaultsUpdateIntentRequestImpl();
void InitDefaultsUpdateIntentRequest();
void InitDefaultsDeleteIntentRequestImpl();
void InitDefaultsDeleteIntentRequest();
void InitDefaultsBatchUpdateIntentsRequestImpl();
void InitDefaultsBatchUpdateIntentsRequest();
void InitDefaultsBatchUpdateIntentsResponseImpl();
void InitDefaultsBatchUpdateIntentsResponse();
void InitDefaultsBatchDeleteIntentsRequestImpl();
void InitDefaultsBatchDeleteIntentsRequest();
void InitDefaultsIntentBatchImpl();
void InitDefaultsIntentBatch();
inline void InitDefaults() {
  InitDefaultsIntent_TrainingPhrase_Part();
  InitDefaultsIntent_TrainingPhrase();
  InitDefaultsIntent_Parameter();
  InitDefaultsIntent_Message_Text();
  InitDefaultsIntent_Message_Image();
  InitDefaultsIntent_Message_QuickReplies();
  InitDefaultsIntent_Message_Card_Button();
  InitDefaultsIntent_Message_Card();
  InitDefaultsIntent_Message_SimpleResponse();
  InitDefaultsIntent_Message_SimpleResponses();
  InitDefaultsIntent_Message_BasicCard_Button_OpenUriAction();
  InitDefaultsIntent_Message_BasicCard_Button();
  InitDefaultsIntent_Message_BasicCard();
  InitDefaultsIntent_Message_Suggestion();
  InitDefaultsIntent_Message_Suggestions();
  InitDefaultsIntent_Message_LinkOutSuggestion();
  InitDefaultsIntent_Message_ListSelect_Item();
  InitDefaultsIntent_Message_ListSelect();
  InitDefaultsIntent_Message_CarouselSelect_Item();
  InitDefaultsIntent_Message_CarouselSelect();
  InitDefaultsIntent_Message_SelectItemInfo();
  InitDefaultsIntent_Message();
  InitDefaultsIntent_FollowupIntentInfo();
  InitDefaultsIntent();
  InitDefaultsListIntentsRequest();
  InitDefaultsListIntentsResponse();
  InitDefaultsGetIntentRequest();
  InitDefaultsCreateIntentRequest();
  InitDefaultsUpdateIntentRequest();
  InitDefaultsDeleteIntentRequest();
  InitDefaultsBatchUpdateIntentsRequest();
  InitDefaultsBatchUpdateIntentsResponse();
  InitDefaultsBatchDeleteIntentsRequest();
  InitDefaultsIntentBatch();
}
}  // namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {
class BatchDeleteIntentsRequest;
class BatchDeleteIntentsRequestDefaultTypeInternal;
extern BatchDeleteIntentsRequestDefaultTypeInternal _BatchDeleteIntentsRequest_default_instance_;
class BatchUpdateIntentsRequest;
class BatchUpdateIntentsRequestDefaultTypeInternal;
extern BatchUpdateIntentsRequestDefaultTypeInternal _BatchUpdateIntentsRequest_default_instance_;
class BatchUpdateIntentsResponse;
class BatchUpdateIntentsResponseDefaultTypeInternal;
extern BatchUpdateIntentsResponseDefaultTypeInternal _BatchUpdateIntentsResponse_default_instance_;
class CreateIntentRequest;
class CreateIntentRequestDefaultTypeInternal;
extern CreateIntentRequestDefaultTypeInternal _CreateIntentRequest_default_instance_;
class DeleteIntentRequest;
class DeleteIntentRequestDefaultTypeInternal;
extern DeleteIntentRequestDefaultTypeInternal _DeleteIntentRequest_default_instance_;
class GetIntentRequest;
class GetIntentRequestDefaultTypeInternal;
extern GetIntentRequestDefaultTypeInternal _GetIntentRequest_default_instance_;
class Intent;
class IntentDefaultTypeInternal;
extern IntentDefaultTypeInternal _Intent_default_instance_;
class IntentBatch;
class IntentBatchDefaultTypeInternal;
extern IntentBatchDefaultTypeInternal _IntentBatch_default_instance_;
class Intent_FollowupIntentInfo;
class Intent_FollowupIntentInfoDefaultTypeInternal;
extern Intent_FollowupIntentInfoDefaultTypeInternal _Intent_FollowupIntentInfo_default_instance_;
class Intent_Message;
class Intent_MessageDefaultTypeInternal;
extern Intent_MessageDefaultTypeInternal _Intent_Message_default_instance_;
class Intent_Message_BasicCard;
class Intent_Message_BasicCardDefaultTypeInternal;
extern Intent_Message_BasicCardDefaultTypeInternal _Intent_Message_BasicCard_default_instance_;
class Intent_Message_BasicCard_Button;
class Intent_Message_BasicCard_ButtonDefaultTypeInternal;
extern Intent_Message_BasicCard_ButtonDefaultTypeInternal _Intent_Message_BasicCard_Button_default_instance_;
class Intent_Message_BasicCard_Button_OpenUriAction;
class Intent_Message_BasicCard_Button_OpenUriActionDefaultTypeInternal;
extern Intent_Message_BasicCard_Button_OpenUriActionDefaultTypeInternal _Intent_Message_BasicCard_Button_OpenUriAction_default_instance_;
class Intent_Message_Card;
class Intent_Message_CardDefaultTypeInternal;
extern Intent_Message_CardDefaultTypeInternal _Intent_Message_Card_default_instance_;
class Intent_Message_Card_Button;
class Intent_Message_Card_ButtonDefaultTypeInternal;
extern Intent_Message_Card_ButtonDefaultTypeInternal _Intent_Message_Card_Button_default_instance_;
class Intent_Message_CarouselSelect;
class Intent_Message_CarouselSelectDefaultTypeInternal;
extern Intent_Message_CarouselSelectDefaultTypeInternal _Intent_Message_CarouselSelect_default_instance_;
class Intent_Message_CarouselSelect_Item;
class Intent_Message_CarouselSelect_ItemDefaultTypeInternal;
extern Intent_Message_CarouselSelect_ItemDefaultTypeInternal _Intent_Message_CarouselSelect_Item_default_instance_;
class Intent_Message_Image;
class Intent_Message_ImageDefaultTypeInternal;
extern Intent_Message_ImageDefaultTypeInternal _Intent_Message_Image_default_instance_;
class Intent_Message_LinkOutSuggestion;
class Intent_Message_LinkOutSuggestionDefaultTypeInternal;
extern Intent_Message_LinkOutSuggestionDefaultTypeInternal _Intent_Message_LinkOutSuggestion_default_instance_;
class Intent_Message_ListSelect;
class Intent_Message_ListSelectDefaultTypeInternal;
extern Intent_Message_ListSelectDefaultTypeInternal _Intent_Message_ListSelect_default_instance_;
class Intent_Message_ListSelect_Item;
class Intent_Message_ListSelect_ItemDefaultTypeInternal;
extern Intent_Message_ListSelect_ItemDefaultTypeInternal _Intent_Message_ListSelect_Item_default_instance_;
class Intent_Message_QuickReplies;
class Intent_Message_QuickRepliesDefaultTypeInternal;
extern Intent_Message_QuickRepliesDefaultTypeInternal _Intent_Message_QuickReplies_default_instance_;
class Intent_Message_SelectItemInfo;
class Intent_Message_SelectItemInfoDefaultTypeInternal;
extern Intent_Message_SelectItemInfoDefaultTypeInternal _Intent_Message_SelectItemInfo_default_instance_;
class Intent_Message_SimpleResponse;
class Intent_Message_SimpleResponseDefaultTypeInternal;
extern Intent_Message_SimpleResponseDefaultTypeInternal _Intent_Message_SimpleResponse_default_instance_;
class Intent_Message_SimpleResponses;
class Intent_Message_SimpleResponsesDefaultTypeInternal;
extern Intent_Message_SimpleResponsesDefaultTypeInternal _Intent_Message_SimpleResponses_default_instance_;
class Intent_Message_Suggestion;
class Intent_Message_SuggestionDefaultTypeInternal;
extern Intent_Message_SuggestionDefaultTypeInternal _Intent_Message_Suggestion_default_instance_;
class Intent_Message_Suggestions;
class Intent_Message_SuggestionsDefaultTypeInternal;
extern Intent_Message_SuggestionsDefaultTypeInternal _Intent_Message_Suggestions_default_instance_;
class Intent_Message_Text;
class Intent_Message_TextDefaultTypeInternal;
extern Intent_Message_TextDefaultTypeInternal _Intent_Message_Text_default_instance_;
class Intent_Parameter;
class Intent_ParameterDefaultTypeInternal;
extern Intent_ParameterDefaultTypeInternal _Intent_Parameter_default_instance_;
class Intent_TrainingPhrase;
class Intent_TrainingPhraseDefaultTypeInternal;
extern Intent_TrainingPhraseDefaultTypeInternal _Intent_TrainingPhrase_default_instance_;
class Intent_TrainingPhrase_Part;
class Intent_TrainingPhrase_PartDefaultTypeInternal;
extern Intent_TrainingPhrase_PartDefaultTypeInternal _Intent_TrainingPhrase_Part_default_instance_;
class ListIntentsRequest;
class ListIntentsRequestDefaultTypeInternal;
extern ListIntentsRequestDefaultTypeInternal _ListIntentsRequest_default_instance_;
class ListIntentsResponse;
class ListIntentsResponseDefaultTypeInternal;
extern ListIntentsResponseDefaultTypeInternal _ListIntentsResponse_default_instance_;
class UpdateIntentRequest;
class UpdateIntentRequestDefaultTypeInternal;
extern UpdateIntentRequestDefaultTypeInternal _UpdateIntentRequest_default_instance_;
}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {

enum Intent_TrainingPhrase_Type {
  Intent_TrainingPhrase_Type_TYPE_UNSPECIFIED = 0,
  Intent_TrainingPhrase_Type_EXAMPLE = 1,
  Intent_TrainingPhrase_Type_TEMPLATE = 2,
  Intent_TrainingPhrase_Type_Intent_TrainingPhrase_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Intent_TrainingPhrase_Type_Intent_TrainingPhrase_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Intent_TrainingPhrase_Type_IsValid(int value);
const Intent_TrainingPhrase_Type Intent_TrainingPhrase_Type_Type_MIN = Intent_TrainingPhrase_Type_TYPE_UNSPECIFIED;
const Intent_TrainingPhrase_Type Intent_TrainingPhrase_Type_Type_MAX = Intent_TrainingPhrase_Type_TEMPLATE;
const int Intent_TrainingPhrase_Type_Type_ARRAYSIZE = Intent_TrainingPhrase_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Intent_TrainingPhrase_Type_descriptor();
inline const ::std::string& Intent_TrainingPhrase_Type_Name(Intent_TrainingPhrase_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Intent_TrainingPhrase_Type_descriptor(), value);
}
inline bool Intent_TrainingPhrase_Type_Parse(
    const ::std::string& name, Intent_TrainingPhrase_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Intent_TrainingPhrase_Type>(
    Intent_TrainingPhrase_Type_descriptor(), name, value);
}
enum Intent_Message_Platform {
  Intent_Message_Platform_PLATFORM_UNSPECIFIED = 0,
  Intent_Message_Platform_FACEBOOK = 1,
  Intent_Message_Platform_SLACK = 2,
  Intent_Message_Platform_TELEGRAM = 3,
  Intent_Message_Platform_KIK = 4,
  Intent_Message_Platform_SKYPE = 5,
  Intent_Message_Platform_LINE = 6,
  Intent_Message_Platform_VIBER = 7,
  Intent_Message_Platform_ACTIONS_ON_GOOGLE = 8,
  Intent_Message_Platform_Intent_Message_Platform_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Intent_Message_Platform_Intent_Message_Platform_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Intent_Message_Platform_IsValid(int value);
const Intent_Message_Platform Intent_Message_Platform_Platform_MIN = Intent_Message_Platform_PLATFORM_UNSPECIFIED;
const Intent_Message_Platform Intent_Message_Platform_Platform_MAX = Intent_Message_Platform_ACTIONS_ON_GOOGLE;
const int Intent_Message_Platform_Platform_ARRAYSIZE = Intent_Message_Platform_Platform_MAX + 1;

const ::google::protobuf::EnumDescriptor* Intent_Message_Platform_descriptor();
inline const ::std::string& Intent_Message_Platform_Name(Intent_Message_Platform value) {
  return ::google::protobuf::internal::NameOfEnum(
    Intent_Message_Platform_descriptor(), value);
}
inline bool Intent_Message_Platform_Parse(
    const ::std::string& name, Intent_Message_Platform* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Intent_Message_Platform>(
    Intent_Message_Platform_descriptor(), name, value);
}
enum Intent_WebhookState {
  Intent_WebhookState_WEBHOOK_STATE_UNSPECIFIED = 0,
  Intent_WebhookState_WEBHOOK_STATE_ENABLED = 1,
  Intent_WebhookState_WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING = 2,
  Intent_WebhookState_Intent_WebhookState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Intent_WebhookState_Intent_WebhookState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Intent_WebhookState_IsValid(int value);
const Intent_WebhookState Intent_WebhookState_WebhookState_MIN = Intent_WebhookState_WEBHOOK_STATE_UNSPECIFIED;
const Intent_WebhookState Intent_WebhookState_WebhookState_MAX = Intent_WebhookState_WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING;
const int Intent_WebhookState_WebhookState_ARRAYSIZE = Intent_WebhookState_WebhookState_MAX + 1;

const ::google::protobuf::EnumDescriptor* Intent_WebhookState_descriptor();
inline const ::std::string& Intent_WebhookState_Name(Intent_WebhookState value) {
  return ::google::protobuf::internal::NameOfEnum(
    Intent_WebhookState_descriptor(), value);
}
inline bool Intent_WebhookState_Parse(
    const ::std::string& name, Intent_WebhookState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Intent_WebhookState>(
    Intent_WebhookState_descriptor(), name, value);
}
enum IntentView {
  INTENT_VIEW_UNSPECIFIED = 0,
  INTENT_VIEW_FULL = 1,
  IntentView_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  IntentView_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool IntentView_IsValid(int value);
const IntentView IntentView_MIN = INTENT_VIEW_UNSPECIFIED;
const IntentView IntentView_MAX = INTENT_VIEW_FULL;
const int IntentView_ARRAYSIZE = IntentView_MAX + 1;

const ::google::protobuf::EnumDescriptor* IntentView_descriptor();
inline const ::std::string& IntentView_Name(IntentView value) {
  return ::google::protobuf::internal::NameOfEnum(
    IntentView_descriptor(), value);
}
inline bool IntentView_Parse(
    const ::std::string& name, IntentView* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IntentView>(
    IntentView_descriptor(), name, value);
}
// ===================================================================

class Intent_TrainingPhrase_Part : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part) */ {
 public:
  Intent_TrainingPhrase_Part();
  virtual ~Intent_TrainingPhrase_Part();

  Intent_TrainingPhrase_Part(const Intent_TrainingPhrase_Part& from);

  inline Intent_TrainingPhrase_Part& operator=(const Intent_TrainingPhrase_Part& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intent_TrainingPhrase_Part(Intent_TrainingPhrase_Part&& from) noexcept
    : Intent_TrainingPhrase_Part() {
    *this = ::std::move(from);
  }

  inline Intent_TrainingPhrase_Part& operator=(Intent_TrainingPhrase_Part&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Intent_TrainingPhrase_Part& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intent_TrainingPhrase_Part* internal_default_instance() {
    return reinterpret_cast<const Intent_TrainingPhrase_Part*>(
               &_Intent_TrainingPhrase_Part_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(Intent_TrainingPhrase_Part* other);
  void Swap(Intent_TrainingPhrase_Part* other);
  friend void swap(Intent_TrainingPhrase_Part& a, Intent_TrainingPhrase_Part& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intent_TrainingPhrase_Part* New() const PROTOBUF_FINAL { return New(NULL); }

  Intent_TrainingPhrase_Part* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Intent_TrainingPhrase_Part& from);
  void MergeFrom(const Intent_TrainingPhrase_Part& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Intent_TrainingPhrase_Part* other);
  protected:
  explicit Intent_TrainingPhrase_Part(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string text = 1;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_text();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_text(
      ::std::string* text);

  // string entity_type = 2;
  void clear_entity_type();
  static const int kEntityTypeFieldNumber = 2;
  const ::std::string& entity_type() const;
  void set_entity_type(const ::std::string& value);
  #if LANG_CXX11
  void set_entity_type(::std::string&& value);
  #endif
  void set_entity_type(const char* value);
  void set_entity_type(const char* value, size_t size);
  ::std::string* mutable_entity_type();
  ::std::string* release_entity_type();
  void set_allocated_entity_type(::std::string* entity_type);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_entity_type();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_entity_type(
      ::std::string* entity_type);

  // string alias = 3;
  void clear_alias();
  static const int kAliasFieldNumber = 3;
  const ::std::string& alias() const;
  void set_alias(const ::std::string& value);
  #if LANG_CXX11
  void set_alias(::std::string&& value);
  #endif
  void set_alias(const char* value);
  void set_alias(const char* value, size_t size);
  ::std::string* mutable_alias();
  ::std::string* release_alias();
  void set_allocated_alias(::std::string* alias);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_alias();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_alias(
      ::std::string* alias);

  // bool user_defined = 4;
  void clear_user_defined();
  static const int kUserDefinedFieldNumber = 4;
  bool user_defined() const;
  void set_user_defined(bool value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr entity_type_;
  ::google::protobuf::internal::ArenaStringPtr alias_;
  bool user_defined_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_TrainingPhrase_PartImpl();
};
// -------------------------------------------------------------------

class Intent_TrainingPhrase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase) */ {
 public:
  Intent_TrainingPhrase();
  virtual ~Intent_TrainingPhrase();

  Intent_TrainingPhrase(const Intent_TrainingPhrase& from);

  inline Intent_TrainingPhrase& operator=(const Intent_TrainingPhrase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intent_TrainingPhrase(Intent_TrainingPhrase&& from) noexcept
    : Intent_TrainingPhrase() {
    *this = ::std::move(from);
  }

  inline Intent_TrainingPhrase& operator=(Intent_TrainingPhrase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Intent_TrainingPhrase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intent_TrainingPhrase* internal_default_instance() {
    return reinterpret_cast<const Intent_TrainingPhrase*>(
               &_Intent_TrainingPhrase_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(Intent_TrainingPhrase* other);
  void Swap(Intent_TrainingPhrase* other);
  friend void swap(Intent_TrainingPhrase& a, Intent_TrainingPhrase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intent_TrainingPhrase* New() const PROTOBUF_FINAL { return New(NULL); }

  Intent_TrainingPhrase* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Intent_TrainingPhrase& from);
  void MergeFrom(const Intent_TrainingPhrase& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Intent_TrainingPhrase* other);
  protected:
  explicit Intent_TrainingPhrase(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Intent_TrainingPhrase_Part Part;

  typedef Intent_TrainingPhrase_Type Type;
  static const Type TYPE_UNSPECIFIED =
    Intent_TrainingPhrase_Type_TYPE_UNSPECIFIED;
  static const Type EXAMPLE =
    Intent_TrainingPhrase_Type_EXAMPLE;
  static const Type TEMPLATE =
    Intent_TrainingPhrase_Type_TEMPLATE;
  static inline bool Type_IsValid(int value) {
    return Intent_TrainingPhrase_Type_IsValid(value);
  }
  static const Type Type_MIN =
    Intent_TrainingPhrase_Type_Type_MIN;
  static const Type Type_MAX =
    Intent_TrainingPhrase_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    Intent_TrainingPhrase_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return Intent_TrainingPhrase_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return Intent_TrainingPhrase_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return Intent_TrainingPhrase_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part parts = 3;
  int parts_size() const;
  void clear_parts();
  static const int kPartsFieldNumber = 3;
  const ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Part& parts(int index) const;
  ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Part* mutable_parts(int index);
  ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Part* add_parts();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Part >*
      mutable_parts();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Part >&
      parts() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // .google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Type type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Type type() const;
  void set_type(::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Type value);

  // int32 times_added_count = 4;
  void clear_times_added_count();
  static const int kTimesAddedCountFieldNumber = 4;
  ::google::protobuf::int32 times_added_count() const;
  void set_times_added_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Part > parts_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int type_;
  ::google::protobuf::int32 times_added_count_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_TrainingPhraseImpl();
};
// -------------------------------------------------------------------

class Intent_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Intent.Parameter) */ {
 public:
  Intent_Parameter();
  virtual ~Intent_Parameter();

  Intent_Parameter(const Intent_Parameter& from);

  inline Intent_Parameter& operator=(const Intent_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intent_Parameter(Intent_Parameter&& from) noexcept
    : Intent_Parameter() {
    *this = ::std::move(from);
  }

  inline Intent_Parameter& operator=(Intent_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Intent_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intent_Parameter* internal_default_instance() {
    return reinterpret_cast<const Intent_Parameter*>(
               &_Intent_Parameter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(Intent_Parameter* other);
  void Swap(Intent_Parameter* other);
  friend void swap(Intent_Parameter& a, Intent_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intent_Parameter* New() const PROTOBUF_FINAL { return New(NULL); }

  Intent_Parameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Intent_Parameter& from);
  void MergeFrom(const Intent_Parameter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Intent_Parameter* other);
  protected:
  explicit Intent_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string prompts = 7;
  int prompts_size() const;
  void clear_prompts();
  static const int kPromptsFieldNumber = 7;
  const ::std::string& prompts(int index) const;
  ::std::string* mutable_prompts(int index);
  void set_prompts(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_prompts(int index, ::std::string&& value);
  #endif
  void set_prompts(int index, const char* value);
  void set_prompts(int index, const char* value, size_t size);
  ::std::string* add_prompts();
  void add_prompts(const ::std::string& value);
  #if LANG_CXX11
  void add_prompts(::std::string&& value);
  #endif
  void add_prompts(const char* value);
  void add_prompts(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& prompts() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_prompts();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string display_name = 2;
  void clear_display_name();
  static const int kDisplayNameFieldNumber = 2;
  const ::std::string& display_name() const;
  void set_display_name(const ::std::string& value);
  #if LANG_CXX11
  void set_display_name(::std::string&& value);
  #endif
  void set_display_name(const char* value);
  void set_display_name(const char* value, size_t size);
  ::std::string* mutable_display_name();
  ::std::string* release_display_name();
  void set_allocated_display_name(::std::string* display_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_display_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_display_name(
      ::std::string* display_name);

  // string value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_value();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_value(
      ::std::string* value);

  // string default_value = 4;
  void clear_default_value();
  static const int kDefaultValueFieldNumber = 4;
  const ::std::string& default_value() const;
  void set_default_value(const ::std::string& value);
  #if LANG_CXX11
  void set_default_value(::std::string&& value);
  #endif
  void set_default_value(const char* value);
  void set_default_value(const char* value, size_t size);
  ::std::string* mutable_default_value();
  ::std::string* release_default_value();
  void set_allocated_default_value(::std::string* default_value);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_default_value();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_default_value(
      ::std::string* default_value);

  // string entity_type_display_name = 5;
  void clear_entity_type_display_name();
  static const int kEntityTypeDisplayNameFieldNumber = 5;
  const ::std::string& entity_type_display_name() const;
  void set_entity_type_display_name(const ::std::string& value);
  #if LANG_CXX11
  void set_entity_type_display_name(::std::string&& value);
  #endif
  void set_entity_type_display_name(const char* value);
  void set_entity_type_display_name(const char* value, size_t size);
  ::std::string* mutable_entity_type_display_name();
  ::std::string* release_entity_type_display_name();
  void set_allocated_entity_type_display_name(::std::string* entity_type_display_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_entity_type_display_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_entity_type_display_name(
      ::std::string* entity_type_display_name);

  // bool mandatory = 6;
  void clear_mandatory();
  static const int kMandatoryFieldNumber = 6;
  bool mandatory() const;
  void set_mandatory(bool value);

  // bool is_list = 8;
  void clear_is_list();
  static const int kIsListFieldNumber = 8;
  bool is_list() const;
  void set_is_list(bool value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Intent.Parameter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> prompts_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr display_name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::internal::ArenaStringPtr default_value_;
  ::google::protobuf::internal::ArenaStringPtr entity_type_display_name_;
  bool mandatory_;
  bool is_list_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_ParameterImpl();
};
// -------------------------------------------------------------------

class Intent_Message_Text : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Intent.Message.Text) */ {
 public:
  Intent_Message_Text();
  virtual ~Intent_Message_Text();

  Intent_Message_Text(const Intent_Message_Text& from);

  inline Intent_Message_Text& operator=(const Intent_Message_Text& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intent_Message_Text(Intent_Message_Text&& from) noexcept
    : Intent_Message_Text() {
    *this = ::std::move(from);
  }

  inline Intent_Message_Text& operator=(Intent_Message_Text&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Intent_Message_Text& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intent_Message_Text* internal_default_instance() {
    return reinterpret_cast<const Intent_Message_Text*>(
               &_Intent_Message_Text_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(Intent_Message_Text* other);
  void Swap(Intent_Message_Text* other);
  friend void swap(Intent_Message_Text& a, Intent_Message_Text& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intent_Message_Text* New() const PROTOBUF_FINAL { return New(NULL); }

  Intent_Message_Text* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Intent_Message_Text& from);
  void MergeFrom(const Intent_Message_Text& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Intent_Message_Text* other);
  protected:
  explicit Intent_Message_Text(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string text = 1;
  int text_size() const;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text(int index) const;
  ::std::string* mutable_text(int index);
  void set_text(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_text(int index, ::std::string&& value);
  #endif
  void set_text(int index, const char* value);
  void set_text(int index, const char* value, size_t size);
  ::std::string* add_text();
  void add_text(const ::std::string& value);
  #if LANG_CXX11
  void add_text(::std::string&& value);
  #endif
  void add_text(const char* value);
  void add_text(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& text() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_text();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Intent.Message.Text)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> text_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_TextImpl();
};
// -------------------------------------------------------------------

class Intent_Message_Image : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Intent.Message.Image) */ {
 public:
  Intent_Message_Image();
  virtual ~Intent_Message_Image();

  Intent_Message_Image(const Intent_Message_Image& from);

  inline Intent_Message_Image& operator=(const Intent_Message_Image& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intent_Message_Image(Intent_Message_Image&& from) noexcept
    : Intent_Message_Image() {
    *this = ::std::move(from);
  }

  inline Intent_Message_Image& operator=(Intent_Message_Image&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Intent_Message_Image& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intent_Message_Image* internal_default_instance() {
    return reinterpret_cast<const Intent_Message_Image*>(
               &_Intent_Message_Image_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(Intent_Message_Image* other);
  void Swap(Intent_Message_Image* other);
  friend void swap(Intent_Message_Image& a, Intent_Message_Image& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intent_Message_Image* New() const PROTOBUF_FINAL { return New(NULL); }

  Intent_Message_Image* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Intent_Message_Image& from);
  void MergeFrom(const Intent_Message_Image& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Intent_Message_Image* other);
  protected:
  explicit Intent_Message_Image(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string image_uri = 1;
  void clear_image_uri();
  static const int kImageUriFieldNumber = 1;
  const ::std::string& image_uri() const;
  void set_image_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_image_uri(::std::string&& value);
  #endif
  void set_image_uri(const char* value);
  void set_image_uri(const char* value, size_t size);
  ::std::string* mutable_image_uri();
  ::std::string* release_image_uri();
  void set_allocated_image_uri(::std::string* image_uri);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_image_uri();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_image_uri(
      ::std::string* image_uri);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Intent.Message.Image)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr image_uri_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_ImageImpl();
};
// -------------------------------------------------------------------

class Intent_Message_QuickReplies : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies) */ {
 public:
  Intent_Message_QuickReplies();
  virtual ~Intent_Message_QuickReplies();

  Intent_Message_QuickReplies(const Intent_Message_QuickReplies& from);

  inline Intent_Message_QuickReplies& operator=(const Intent_Message_QuickReplies& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intent_Message_QuickReplies(Intent_Message_QuickReplies&& from) noexcept
    : Intent_Message_QuickReplies() {
    *this = ::std::move(from);
  }

  inline Intent_Message_QuickReplies& operator=(Intent_Message_QuickReplies&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Intent_Message_QuickReplies& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intent_Message_QuickReplies* internal_default_instance() {
    return reinterpret_cast<const Intent_Message_QuickReplies*>(
               &_Intent_Message_QuickReplies_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(Intent_Message_QuickReplies* other);
  void Swap(Intent_Message_QuickReplies* other);
  friend void swap(Intent_Message_QuickReplies& a, Intent_Message_QuickReplies& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intent_Message_QuickReplies* New() const PROTOBUF_FINAL { return New(NULL); }

  Intent_Message_QuickReplies* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Intent_Message_QuickReplies& from);
  void MergeFrom(const Intent_Message_QuickReplies& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Intent_Message_QuickReplies* other);
  protected:
  explicit Intent_Message_QuickReplies(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string quick_replies = 2;
  int quick_replies_size() const;
  void clear_quick_replies();
  static const int kQuickRepliesFieldNumber = 2;
  const ::std::string& quick_replies(int index) const;
  ::std::string* mutable_quick_replies(int index);
  void set_quick_replies(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_quick_replies(int index, ::std::string&& value);
  #endif
  void set_quick_replies(int index, const char* value);
  void set_quick_replies(int index, const char* value, size_t size);
  ::std::string* add_quick_replies();
  void add_quick_replies(const ::std::string& value);
  #if LANG_CXX11
  void add_quick_replies(::std::string&& value);
  #endif
  void add_quick_replies(const char* value);
  void add_quick_replies(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& quick_replies() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_quick_replies();

  // string title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_title();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_title(
      ::std::string* title);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> quick_replies_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_QuickRepliesImpl();
};
// -------------------------------------------------------------------

class Intent_Message_Card_Button : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button) */ {
 public:
  Intent_Message_Card_Button();
  virtual ~Intent_Message_Card_Button();

  Intent_Message_Card_Button(const Intent_Message_Card_Button& from);

  inline Intent_Message_Card_Button& operator=(const Intent_Message_Card_Button& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intent_Message_Card_Button(Intent_Message_Card_Button&& from) noexcept
    : Intent_Message_Card_Button() {
    *this = ::std::move(from);
  }

  inline Intent_Message_Card_Button& operator=(Intent_Message_Card_Button&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Intent_Message_Card_Button& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intent_Message_Card_Button* internal_default_instance() {
    return reinterpret_cast<const Intent_Message_Card_Button*>(
               &_Intent_Message_Card_Button_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(Intent_Message_Card_Button* other);
  void Swap(Intent_Message_Card_Button* other);
  friend void swap(Intent_Message_Card_Button& a, Intent_Message_Card_Button& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intent_Message_Card_Button* New() const PROTOBUF_FINAL { return New(NULL); }

  Intent_Message_Card_Button* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Intent_Message_Card_Button& from);
  void MergeFrom(const Intent_Message_Card_Button& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Intent_Message_Card_Button* other);
  protected:
  explicit Intent_Message_Card_Button(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string text = 1;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_text();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_text(
      ::std::string* text);

  // string postback = 2;
  void clear_postback();
  static const int kPostbackFieldNumber = 2;
  const ::std::string& postback() const;
  void set_postback(const ::std::string& value);
  #if LANG_CXX11
  void set_postback(::std::string&& value);
  #endif
  void set_postback(const char* value);
  void set_postback(const char* value, size_t size);
  ::std::string* mutable_postback();
  ::std::string* release_postback();
  void set_allocated_postback(::std::string* postback);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_postback();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_postback(
      ::std::string* postback);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr postback_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_Card_ButtonImpl();
};
// -------------------------------------------------------------------

class Intent_Message_Card : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Intent.Message.Card) */ {
 public:
  Intent_Message_Card();
  virtual ~Intent_Message_Card();

  Intent_Message_Card(const Intent_Message_Card& from);

  inline Intent_Message_Card& operator=(const Intent_Message_Card& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intent_Message_Card(Intent_Message_Card&& from) noexcept
    : Intent_Message_Card() {
    *this = ::std::move(from);
  }

  inline Intent_Message_Card& operator=(Intent_Message_Card&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Intent_Message_Card& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intent_Message_Card* internal_default_instance() {
    return reinterpret_cast<const Intent_Message_Card*>(
               &_Intent_Message_Card_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(Intent_Message_Card* other);
  void Swap(Intent_Message_Card* other);
  friend void swap(Intent_Message_Card& a, Intent_Message_Card& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intent_Message_Card* New() const PROTOBUF_FINAL { return New(NULL); }

  Intent_Message_Card* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Intent_Message_Card& from);
  void MergeFrom(const Intent_Message_Card& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Intent_Message_Card* other);
  protected:
  explicit Intent_Message_Card(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Intent_Message_Card_Button Button;

  // accessors -------------------------------------------------------

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button buttons = 4;
  int buttons_size() const;
  void clear_buttons();
  static const int kButtonsFieldNumber = 4;
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_Card_Button& buttons(int index) const;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Card_Button* mutable_buttons(int index);
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Card_Button* add_buttons();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_Card_Button >*
      mutable_buttons();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_Card_Button >&
      buttons() const;

  // string title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_title();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_title(
      ::std::string* title);

  // string subtitle = 2;
  void clear_subtitle();
  static const int kSubtitleFieldNumber = 2;
  const ::std::string& subtitle() const;
  void set_subtitle(const ::std::string& value);
  #if LANG_CXX11
  void set_subtitle(::std::string&& value);
  #endif
  void set_subtitle(const char* value);
  void set_subtitle(const char* value, size_t size);
  ::std::string* mutable_subtitle();
  ::std::string* release_subtitle();
  void set_allocated_subtitle(::std::string* subtitle);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_subtitle();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_subtitle(
      ::std::string* subtitle);

  // string image_uri = 3;
  void clear_image_uri();
  static const int kImageUriFieldNumber = 3;
  const ::std::string& image_uri() const;
  void set_image_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_image_uri(::std::string&& value);
  #endif
  void set_image_uri(const char* value);
  void set_image_uri(const char* value, size_t size);
  ::std::string* mutable_image_uri();
  ::std::string* release_image_uri();
  void set_allocated_image_uri(::std::string* image_uri);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_image_uri();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_image_uri(
      ::std::string* image_uri);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Intent.Message.Card)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_Card_Button > buttons_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr subtitle_;
  ::google::protobuf::internal::ArenaStringPtr image_uri_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_CardImpl();
};
// -------------------------------------------------------------------

class Intent_Message_SimpleResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse) */ {
 public:
  Intent_Message_SimpleResponse();
  virtual ~Intent_Message_SimpleResponse();

  Intent_Message_SimpleResponse(const Intent_Message_SimpleResponse& from);

  inline Intent_Message_SimpleResponse& operator=(const Intent_Message_SimpleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intent_Message_SimpleResponse(Intent_Message_SimpleResponse&& from) noexcept
    : Intent_Message_SimpleResponse() {
    *this = ::std::move(from);
  }

  inline Intent_Message_SimpleResponse& operator=(Intent_Message_SimpleResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Intent_Message_SimpleResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intent_Message_SimpleResponse* internal_default_instance() {
    return reinterpret_cast<const Intent_Message_SimpleResponse*>(
               &_Intent_Message_SimpleResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(Intent_Message_SimpleResponse* other);
  void Swap(Intent_Message_SimpleResponse* other);
  friend void swap(Intent_Message_SimpleResponse& a, Intent_Message_SimpleResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intent_Message_SimpleResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  Intent_Message_SimpleResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Intent_Message_SimpleResponse& from);
  void MergeFrom(const Intent_Message_SimpleResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Intent_Message_SimpleResponse* other);
  protected:
  explicit Intent_Message_SimpleResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string text_to_speech = 1;
  void clear_text_to_speech();
  static const int kTextToSpeechFieldNumber = 1;
  const ::std::string& text_to_speech() const;
  void set_text_to_speech(const ::std::string& value);
  #if LANG_CXX11
  void set_text_to_speech(::std::string&& value);
  #endif
  void set_text_to_speech(const char* value);
  void set_text_to_speech(const char* value, size_t size);
  ::std::string* mutable_text_to_speech();
  ::std::string* release_text_to_speech();
  void set_allocated_text_to_speech(::std::string* text_to_speech);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_text_to_speech();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_text_to_speech(
      ::std::string* text_to_speech);

  // string ssml = 2;
  void clear_ssml();
  static const int kSsmlFieldNumber = 2;
  const ::std::string& ssml() const;
  void set_ssml(const ::std::string& value);
  #if LANG_CXX11
  void set_ssml(::std::string&& value);
  #endif
  void set_ssml(const char* value);
  void set_ssml(const char* value, size_t size);
  ::std::string* mutable_ssml();
  ::std::string* release_ssml();
  void set_allocated_ssml(::std::string* ssml);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_ssml();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_ssml(
      ::std::string* ssml);

  // string display_text = 3;
  void clear_display_text();
  static const int kDisplayTextFieldNumber = 3;
  const ::std::string& display_text() const;
  void set_display_text(const ::std::string& value);
  #if LANG_CXX11
  void set_display_text(::std::string&& value);
  #endif
  void set_display_text(const char* value);
  void set_display_text(const char* value, size_t size);
  ::std::string* mutable_display_text();
  ::std::string* release_display_text();
  void set_allocated_display_text(::std::string* display_text);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_display_text();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_display_text(
      ::std::string* display_text);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr text_to_speech_;
  ::google::protobuf::internal::ArenaStringPtr ssml_;
  ::google::protobuf::internal::ArenaStringPtr display_text_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_SimpleResponseImpl();
};
// -------------------------------------------------------------------

class Intent_Message_SimpleResponses : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses) */ {
 public:
  Intent_Message_SimpleResponses();
  virtual ~Intent_Message_SimpleResponses();

  Intent_Message_SimpleResponses(const Intent_Message_SimpleResponses& from);

  inline Intent_Message_SimpleResponses& operator=(const Intent_Message_SimpleResponses& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intent_Message_SimpleResponses(Intent_Message_SimpleResponses&& from) noexcept
    : Intent_Message_SimpleResponses() {
    *this = ::std::move(from);
  }

  inline Intent_Message_SimpleResponses& operator=(Intent_Message_SimpleResponses&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Intent_Message_SimpleResponses& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intent_Message_SimpleResponses* internal_default_instance() {
    return reinterpret_cast<const Intent_Message_SimpleResponses*>(
               &_Intent_Message_SimpleResponses_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(Intent_Message_SimpleResponses* other);
  void Swap(Intent_Message_SimpleResponses* other);
  friend void swap(Intent_Message_SimpleResponses& a, Intent_Message_SimpleResponses& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intent_Message_SimpleResponses* New() const PROTOBUF_FINAL { return New(NULL); }

  Intent_Message_SimpleResponses* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Intent_Message_SimpleResponses& from);
  void MergeFrom(const Intent_Message_SimpleResponses& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Intent_Message_SimpleResponses* other);
  protected:
  explicit Intent_Message_SimpleResponses(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse simple_responses = 1;
  int simple_responses_size() const;
  void clear_simple_responses();
  static const int kSimpleResponsesFieldNumber = 1;
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponse& simple_responses(int index) const;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponse* mutable_simple_responses(int index);
  ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponse* add_simple_responses();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponse >*
      mutable_simple_responses();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponse >&
      simple_responses() const;

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponse > simple_responses_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_SimpleResponsesImpl();
};
// -------------------------------------------------------------------

class Intent_Message_BasicCard_Button_OpenUriAction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction) */ {
 public:
  Intent_Message_BasicCard_Button_OpenUriAction();
  virtual ~Intent_Message_BasicCard_Button_OpenUriAction();

  Intent_Message_BasicCard_Button_OpenUriAction(const Intent_Message_BasicCard_Button_OpenUriAction& from);

  inline Intent_Message_BasicCard_Button_OpenUriAction& operator=(const Intent_Message_BasicCard_Button_OpenUriAction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intent_Message_BasicCard_Button_OpenUriAction(Intent_Message_BasicCard_Button_OpenUriAction&& from) noexcept
    : Intent_Message_BasicCard_Button_OpenUriAction() {
    *this = ::std::move(from);
  }

  inline Intent_Message_BasicCard_Button_OpenUriAction& operator=(Intent_Message_BasicCard_Button_OpenUriAction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Intent_Message_BasicCard_Button_OpenUriAction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intent_Message_BasicCard_Button_OpenUriAction* internal_default_instance() {
    return reinterpret_cast<const Intent_Message_BasicCard_Button_OpenUriAction*>(
               &_Intent_Message_BasicCard_Button_OpenUriAction_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void UnsafeArenaSwap(Intent_Message_BasicCard_Button_OpenUriAction* other);
  void Swap(Intent_Message_BasicCard_Button_OpenUriAction* other);
  friend void swap(Intent_Message_BasicCard_Button_OpenUriAction& a, Intent_Message_BasicCard_Button_OpenUriAction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intent_Message_BasicCard_Button_OpenUriAction* New() const PROTOBUF_FINAL { return New(NULL); }

  Intent_Message_BasicCard_Button_OpenUriAction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Intent_Message_BasicCard_Button_OpenUriAction& from);
  void MergeFrom(const Intent_Message_BasicCard_Button_OpenUriAction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Intent_Message_BasicCard_Button_OpenUriAction* other);
  protected:
  explicit Intent_Message_BasicCard_Button_OpenUriAction(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_uri();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_uri(
      ::std::string* uri);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_BasicCard_Button_OpenUriActionImpl();
};
// -------------------------------------------------------------------

class Intent_Message_BasicCard_Button : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button) */ {
 public:
  Intent_Message_BasicCard_Button();
  virtual ~Intent_Message_BasicCard_Button();

  Intent_Message_BasicCard_Button(const Intent_Message_BasicCard_Button& from);

  inline Intent_Message_BasicCard_Button& operator=(const Intent_Message_BasicCard_Button& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intent_Message_BasicCard_Button(Intent_Message_BasicCard_Button&& from) noexcept
    : Intent_Message_BasicCard_Button() {
    *this = ::std::move(from);
  }

  inline Intent_Message_BasicCard_Button& operator=(Intent_Message_BasicCard_Button&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Intent_Message_BasicCard_Button& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intent_Message_BasicCard_Button* internal_default_instance() {
    return reinterpret_cast<const Intent_Message_BasicCard_Button*>(
               &_Intent_Message_BasicCard_Button_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void UnsafeArenaSwap(Intent_Message_BasicCard_Button* other);
  void Swap(Intent_Message_BasicCard_Button* other);
  friend void swap(Intent_Message_BasicCard_Button& a, Intent_Message_BasicCard_Button& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intent_Message_BasicCard_Button* New() const PROTOBUF_FINAL { return New(NULL); }

  Intent_Message_BasicCard_Button* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Intent_Message_BasicCard_Button& from);
  void MergeFrom(const Intent_Message_BasicCard_Button& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Intent_Message_BasicCard_Button* other);
  protected:
  explicit Intent_Message_BasicCard_Button(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Intent_Message_BasicCard_Button_OpenUriAction OpenUriAction;

  // accessors -------------------------------------------------------

  // string title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_title();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_title(
      ::std::string* title);

  // .google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction open_uri_action = 2;
  bool has_open_uri_action() const;
  void clear_open_uri_action();
  static const int kOpenUriActionFieldNumber = 2;
  private:
  void _slow_mutable_open_uri_action();
  public:
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction& open_uri_action() const;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction* release_open_uri_action();
  ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction* mutable_open_uri_action();
  void set_allocated_open_uri_action(::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction* open_uri_action);
  void unsafe_arena_set_allocated_open_uri_action(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction* open_uri_action);
  ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction* unsafe_arena_release_open_uri_action();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction* open_uri_action_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_BasicCard_ButtonImpl();
};
// -------------------------------------------------------------------

class Intent_Message_BasicCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard) */ {
 public:
  Intent_Message_BasicCard();
  virtual ~Intent_Message_BasicCard();

  Intent_Message_BasicCard(const Intent_Message_BasicCard& from);

  inline Intent_Message_BasicCard& operator=(const Intent_Message_BasicCard& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intent_Message_BasicCard(Intent_Message_BasicCard&& from) noexcept
    : Intent_Message_BasicCard() {
    *this = ::std::move(from);
  }

  inline Intent_Message_BasicCard& operator=(Intent_Message_BasicCard&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Intent_Message_BasicCard& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intent_Message_BasicCard* internal_default_instance() {
    return reinterpret_cast<const Intent_Message_BasicCard*>(
               &_Intent_Message_BasicCard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void UnsafeArenaSwap(Intent_Message_BasicCard* other);
  void Swap(Intent_Message_BasicCard* other);
  friend void swap(Intent_Message_BasicCard& a, Intent_Message_BasicCard& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intent_Message_BasicCard* New() const PROTOBUF_FINAL { return New(NULL); }

  Intent_Message_BasicCard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Intent_Message_BasicCard& from);
  void MergeFrom(const Intent_Message_BasicCard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Intent_Message_BasicCard* other);
  protected:
  explicit Intent_Message_BasicCard(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Intent_Message_BasicCard_Button Button;

  // accessors -------------------------------------------------------

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button buttons = 5;
  int buttons_size() const;
  void clear_buttons();
  static const int kButtonsFieldNumber = 5;
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button& buttons(int index) const;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button* mutable_buttons(int index);
  ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button* add_buttons();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button >*
      mutable_buttons();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button >&
      buttons() const;

  // string title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_title();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_title(
      ::std::string* title);

  // string subtitle = 2;
  void clear_subtitle();
  static const int kSubtitleFieldNumber = 2;
  const ::std::string& subtitle() const;
  void set_subtitle(const ::std::string& value);
  #if LANG_CXX11
  void set_subtitle(::std::string&& value);
  #endif
  void set_subtitle(const char* value);
  void set_subtitle(const char* value, size_t size);
  ::std::string* mutable_subtitle();
  ::std::string* release_subtitle();
  void set_allocated_subtitle(::std::string* subtitle);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_subtitle();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_subtitle(
      ::std::string* subtitle);

  // string formatted_text = 3;
  void clear_formatted_text();
  static const int kFormattedTextFieldNumber = 3;
  const ::std::string& formatted_text() const;
  void set_formatted_text(const ::std::string& value);
  #if LANG_CXX11
  void set_formatted_text(::std::string&& value);
  #endif
  void set_formatted_text(const char* value);
  void set_formatted_text(const char* value, size_t size);
  ::std::string* mutable_formatted_text();
  ::std::string* release_formatted_text();
  void set_allocated_formatted_text(::std::string* formatted_text);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_formatted_text();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_formatted_text(
      ::std::string* formatted_text);

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Image image = 4;
  bool has_image() const;
  void clear_image();
  static const int kImageFieldNumber = 4;
  private:
  void _slow_mutable_image();
  public:
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_Image& image() const;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* release_image();
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* mutable_image();
  void set_allocated_image(::google::cloud::dialogflow::v2beta1::Intent_Message_Image* image);
  void unsafe_arena_set_allocated_image(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* image);
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* unsafe_arena_release_image();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button > buttons_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr subtitle_;
  ::google::protobuf::internal::ArenaStringPtr formatted_text_;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* image_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_BasicCardImpl();
};
// -------------------------------------------------------------------

class Intent_Message_Suggestion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion) */ {
 public:
  Intent_Message_Suggestion();
  virtual ~Intent_Message_Suggestion();

  Intent_Message_Suggestion(const Intent_Message_Suggestion& from);

  inline Intent_Message_Suggestion& operator=(const Intent_Message_Suggestion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intent_Message_Suggestion(Intent_Message_Suggestion&& from) noexcept
    : Intent_Message_Suggestion() {
    *this = ::std::move(from);
  }

  inline Intent_Message_Suggestion& operator=(Intent_Message_Suggestion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Intent_Message_Suggestion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intent_Message_Suggestion* internal_default_instance() {
    return reinterpret_cast<const Intent_Message_Suggestion*>(
               &_Intent_Message_Suggestion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void UnsafeArenaSwap(Intent_Message_Suggestion* other);
  void Swap(Intent_Message_Suggestion* other);
  friend void swap(Intent_Message_Suggestion& a, Intent_Message_Suggestion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intent_Message_Suggestion* New() const PROTOBUF_FINAL { return New(NULL); }

  Intent_Message_Suggestion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Intent_Message_Suggestion& from);
  void MergeFrom(const Intent_Message_Suggestion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Intent_Message_Suggestion* other);
  protected:
  explicit Intent_Message_Suggestion(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_title();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_title(
      ::std::string* title);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_SuggestionImpl();
};
// -------------------------------------------------------------------

class Intent_Message_Suggestions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions) */ {
 public:
  Intent_Message_Suggestions();
  virtual ~Intent_Message_Suggestions();

  Intent_Message_Suggestions(const Intent_Message_Suggestions& from);

  inline Intent_Message_Suggestions& operator=(const Intent_Message_Suggestions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intent_Message_Suggestions(Intent_Message_Suggestions&& from) noexcept
    : Intent_Message_Suggestions() {
    *this = ::std::move(from);
  }

  inline Intent_Message_Suggestions& operator=(Intent_Message_Suggestions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Intent_Message_Suggestions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intent_Message_Suggestions* internal_default_instance() {
    return reinterpret_cast<const Intent_Message_Suggestions*>(
               &_Intent_Message_Suggestions_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void UnsafeArenaSwap(Intent_Message_Suggestions* other);
  void Swap(Intent_Message_Suggestions* other);
  friend void swap(Intent_Message_Suggestions& a, Intent_Message_Suggestions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intent_Message_Suggestions* New() const PROTOBUF_FINAL { return New(NULL); }

  Intent_Message_Suggestions* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Intent_Message_Suggestions& from);
  void MergeFrom(const Intent_Message_Suggestions& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Intent_Message_Suggestions* other);
  protected:
  explicit Intent_Message_Suggestions(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion suggestions = 1;
  int suggestions_size() const;
  void clear_suggestions();
  static const int kSuggestionsFieldNumber = 1;
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestion& suggestions(int index) const;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestion* mutable_suggestions(int index);
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestion* add_suggestions();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestion >*
      mutable_suggestions();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestion >&
      suggestions() const;

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestion > suggestions_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_SuggestionsImpl();
};
// -------------------------------------------------------------------

class Intent_Message_LinkOutSuggestion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion) */ {
 public:
  Intent_Message_LinkOutSuggestion();
  virtual ~Intent_Message_LinkOutSuggestion();

  Intent_Message_LinkOutSuggestion(const Intent_Message_LinkOutSuggestion& from);

  inline Intent_Message_LinkOutSuggestion& operator=(const Intent_Message_LinkOutSuggestion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intent_Message_LinkOutSuggestion(Intent_Message_LinkOutSuggestion&& from) noexcept
    : Intent_Message_LinkOutSuggestion() {
    *this = ::std::move(from);
  }

  inline Intent_Message_LinkOutSuggestion& operator=(Intent_Message_LinkOutSuggestion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Intent_Message_LinkOutSuggestion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intent_Message_LinkOutSuggestion* internal_default_instance() {
    return reinterpret_cast<const Intent_Message_LinkOutSuggestion*>(
               &_Intent_Message_LinkOutSuggestion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void UnsafeArenaSwap(Intent_Message_LinkOutSuggestion* other);
  void Swap(Intent_Message_LinkOutSuggestion* other);
  friend void swap(Intent_Message_LinkOutSuggestion& a, Intent_Message_LinkOutSuggestion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intent_Message_LinkOutSuggestion* New() const PROTOBUF_FINAL { return New(NULL); }

  Intent_Message_LinkOutSuggestion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Intent_Message_LinkOutSuggestion& from);
  void MergeFrom(const Intent_Message_LinkOutSuggestion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Intent_Message_LinkOutSuggestion* other);
  protected:
  explicit Intent_Message_LinkOutSuggestion(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string destination_name = 1;
  void clear_destination_name();
  static const int kDestinationNameFieldNumber = 1;
  const ::std::string& destination_name() const;
  void set_destination_name(const ::std::string& value);
  #if LANG_CXX11
  void set_destination_name(::std::string&& value);
  #endif
  void set_destination_name(const char* value);
  void set_destination_name(const char* value, size_t size);
  ::std::string* mutable_destination_name();
  ::std::string* release_destination_name();
  void set_allocated_destination_name(::std::string* destination_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_destination_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_destination_name(
      ::std::string* destination_name);

  // string uri = 2;
  void clear_uri();
  static const int kUriFieldNumber = 2;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_uri();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_uri(
      ::std::string* uri);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr destination_name_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_LinkOutSuggestionImpl();
};
// -------------------------------------------------------------------

class Intent_Message_ListSelect_Item : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item) */ {
 public:
  Intent_Message_ListSelect_Item();
  virtual ~Intent_Message_ListSelect_Item();

  Intent_Message_ListSelect_Item(const Intent_Message_ListSelect_Item& from);

  inline Intent_Message_ListSelect_Item& operator=(const Intent_Message_ListSelect_Item& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intent_Message_ListSelect_Item(Intent_Message_ListSelect_Item&& from) noexcept
    : Intent_Message_ListSelect_Item() {
    *this = ::std::move(from);
  }

  inline Intent_Message_ListSelect_Item& operator=(Intent_Message_ListSelect_Item&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Intent_Message_ListSelect_Item& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intent_Message_ListSelect_Item* internal_default_instance() {
    return reinterpret_cast<const Intent_Message_ListSelect_Item*>(
               &_Intent_Message_ListSelect_Item_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void UnsafeArenaSwap(Intent_Message_ListSelect_Item* other);
  void Swap(Intent_Message_ListSelect_Item* other);
  friend void swap(Intent_Message_ListSelect_Item& a, Intent_Message_ListSelect_Item& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intent_Message_ListSelect_Item* New() const PROTOBUF_FINAL { return New(NULL); }

  Intent_Message_ListSelect_Item* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Intent_Message_ListSelect_Item& from);
  void MergeFrom(const Intent_Message_ListSelect_Item& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Intent_Message_ListSelect_Item* other);
  protected:
  explicit Intent_Message_ListSelect_Item(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string title = 2;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_title();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_title(
      ::std::string* title);

  // string description = 3;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_description();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_description(
      ::std::string* description);

  // .google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  private:
  void _slow_mutable_info();
  public:
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo& info() const;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* release_info();
  ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* mutable_info();
  void set_allocated_info(::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* info);
  void unsafe_arena_set_allocated_info(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* info);
  ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* unsafe_arena_release_info();

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Image image = 4;
  bool has_image() const;
  void clear_image();
  static const int kImageFieldNumber = 4;
  private:
  void _slow_mutable_image();
  public:
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_Image& image() const;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* release_image();
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* mutable_image();
  void set_allocated_image(::google::cloud::dialogflow::v2beta1::Intent_Message_Image* image);
  void unsafe_arena_set_allocated_image(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* image);
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* unsafe_arena_release_image();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* info_;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* image_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_ListSelect_ItemImpl();
};
// -------------------------------------------------------------------

class Intent_Message_ListSelect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect) */ {
 public:
  Intent_Message_ListSelect();
  virtual ~Intent_Message_ListSelect();

  Intent_Message_ListSelect(const Intent_Message_ListSelect& from);

  inline Intent_Message_ListSelect& operator=(const Intent_Message_ListSelect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intent_Message_ListSelect(Intent_Message_ListSelect&& from) noexcept
    : Intent_Message_ListSelect() {
    *this = ::std::move(from);
  }

  inline Intent_Message_ListSelect& operator=(Intent_Message_ListSelect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Intent_Message_ListSelect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intent_Message_ListSelect* internal_default_instance() {
    return reinterpret_cast<const Intent_Message_ListSelect*>(
               &_Intent_Message_ListSelect_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void UnsafeArenaSwap(Intent_Message_ListSelect* other);
  void Swap(Intent_Message_ListSelect* other);
  friend void swap(Intent_Message_ListSelect& a, Intent_Message_ListSelect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intent_Message_ListSelect* New() const PROTOBUF_FINAL { return New(NULL); }

  Intent_Message_ListSelect* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Intent_Message_ListSelect& from);
  void MergeFrom(const Intent_Message_ListSelect& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Intent_Message_ListSelect* other);
  protected:
  explicit Intent_Message_ListSelect(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Intent_Message_ListSelect_Item Item;

  // accessors -------------------------------------------------------

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item items = 2;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 2;
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect_Item& items(int index) const;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect_Item* mutable_items(int index);
  ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect_Item* add_items();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect_Item >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect_Item >&
      items() const;

  // string title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_title();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_title(
      ::std::string* title);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect_Item > items_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_ListSelectImpl();
};
// -------------------------------------------------------------------

class Intent_Message_CarouselSelect_Item : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item) */ {
 public:
  Intent_Message_CarouselSelect_Item();
  virtual ~Intent_Message_CarouselSelect_Item();

  Intent_Message_CarouselSelect_Item(const Intent_Message_CarouselSelect_Item& from);

  inline Intent_Message_CarouselSelect_Item& operator=(const Intent_Message_CarouselSelect_Item& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intent_Message_CarouselSelect_Item(Intent_Message_CarouselSelect_Item&& from) noexcept
    : Intent_Message_CarouselSelect_Item() {
    *this = ::std::move(from);
  }

  inline Intent_Message_CarouselSelect_Item& operator=(Intent_Message_CarouselSelect_Item&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Intent_Message_CarouselSelect_Item& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intent_Message_CarouselSelect_Item* internal_default_instance() {
    return reinterpret_cast<const Intent_Message_CarouselSelect_Item*>(
               &_Intent_Message_CarouselSelect_Item_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void UnsafeArenaSwap(Intent_Message_CarouselSelect_Item* other);
  void Swap(Intent_Message_CarouselSelect_Item* other);
  friend void swap(Intent_Message_CarouselSelect_Item& a, Intent_Message_CarouselSelect_Item& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intent_Message_CarouselSelect_Item* New() const PROTOBUF_FINAL { return New(NULL); }

  Intent_Message_CarouselSelect_Item* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Intent_Message_CarouselSelect_Item& from);
  void MergeFrom(const Intent_Message_CarouselSelect_Item& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Intent_Message_CarouselSelect_Item* other);
  protected:
  explicit Intent_Message_CarouselSelect_Item(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string title = 2;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_title();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_title(
      ::std::string* title);

  // string description = 3;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_description();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_description(
      ::std::string* description);

  // .google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  private:
  void _slow_mutable_info();
  public:
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo& info() const;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* release_info();
  ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* mutable_info();
  void set_allocated_info(::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* info);
  void unsafe_arena_set_allocated_info(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* info);
  ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* unsafe_arena_release_info();

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Image image = 4;
  bool has_image() const;
  void clear_image();
  static const int kImageFieldNumber = 4;
  private:
  void _slow_mutable_image();
  public:
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_Image& image() const;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* release_image();
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* mutable_image();
  void set_allocated_image(::google::cloud::dialogflow::v2beta1::Intent_Message_Image* image);
  void unsafe_arena_set_allocated_image(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* image);
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* unsafe_arena_release_image();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* info_;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* image_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_CarouselSelect_ItemImpl();
};
// -------------------------------------------------------------------

class Intent_Message_CarouselSelect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect) */ {
 public:
  Intent_Message_CarouselSelect();
  virtual ~Intent_Message_CarouselSelect();

  Intent_Message_CarouselSelect(const Intent_Message_CarouselSelect& from);

  inline Intent_Message_CarouselSelect& operator=(const Intent_Message_CarouselSelect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intent_Message_CarouselSelect(Intent_Message_CarouselSelect&& from) noexcept
    : Intent_Message_CarouselSelect() {
    *this = ::std::move(from);
  }

  inline Intent_Message_CarouselSelect& operator=(Intent_Message_CarouselSelect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Intent_Message_CarouselSelect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intent_Message_CarouselSelect* internal_default_instance() {
    return reinterpret_cast<const Intent_Message_CarouselSelect*>(
               &_Intent_Message_CarouselSelect_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void UnsafeArenaSwap(Intent_Message_CarouselSelect* other);
  void Swap(Intent_Message_CarouselSelect* other);
  friend void swap(Intent_Message_CarouselSelect& a, Intent_Message_CarouselSelect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intent_Message_CarouselSelect* New() const PROTOBUF_FINAL { return New(NULL); }

  Intent_Message_CarouselSelect* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Intent_Message_CarouselSelect& from);
  void MergeFrom(const Intent_Message_CarouselSelect& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Intent_Message_CarouselSelect* other);
  protected:
  explicit Intent_Message_CarouselSelect(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Intent_Message_CarouselSelect_Item Item;

  // accessors -------------------------------------------------------

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect_Item& items(int index) const;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect_Item* mutable_items(int index);
  ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect_Item* add_items();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect_Item >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect_Item >&
      items() const;

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect_Item > items_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_CarouselSelectImpl();
};
// -------------------------------------------------------------------

class Intent_Message_SelectItemInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo) */ {
 public:
  Intent_Message_SelectItemInfo();
  virtual ~Intent_Message_SelectItemInfo();

  Intent_Message_SelectItemInfo(const Intent_Message_SelectItemInfo& from);

  inline Intent_Message_SelectItemInfo& operator=(const Intent_Message_SelectItemInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intent_Message_SelectItemInfo(Intent_Message_SelectItemInfo&& from) noexcept
    : Intent_Message_SelectItemInfo() {
    *this = ::std::move(from);
  }

  inline Intent_Message_SelectItemInfo& operator=(Intent_Message_SelectItemInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Intent_Message_SelectItemInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intent_Message_SelectItemInfo* internal_default_instance() {
    return reinterpret_cast<const Intent_Message_SelectItemInfo*>(
               &_Intent_Message_SelectItemInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void UnsafeArenaSwap(Intent_Message_SelectItemInfo* other);
  void Swap(Intent_Message_SelectItemInfo* other);
  friend void swap(Intent_Message_SelectItemInfo& a, Intent_Message_SelectItemInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intent_Message_SelectItemInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  Intent_Message_SelectItemInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Intent_Message_SelectItemInfo& from);
  void MergeFrom(const Intent_Message_SelectItemInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Intent_Message_SelectItemInfo* other);
  protected:
  explicit Intent_Message_SelectItemInfo(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string synonyms = 2;
  int synonyms_size() const;
  void clear_synonyms();
  static const int kSynonymsFieldNumber = 2;
  const ::std::string& synonyms(int index) const;
  ::std::string* mutable_synonyms(int index);
  void set_synonyms(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_synonyms(int index, ::std::string&& value);
  #endif
  void set_synonyms(int index, const char* value);
  void set_synonyms(int index, const char* value, size_t size);
  ::std::string* add_synonyms();
  void add_synonyms(const ::std::string& value);
  #if LANG_CXX11
  void add_synonyms(::std::string&& value);
  #endif
  void add_synonyms(const char* value);
  void add_synonyms(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& synonyms() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_synonyms();

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_key();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_key(
      ::std::string* key);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> synonyms_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_Message_SelectItemInfoImpl();
};
// -------------------------------------------------------------------

class Intent_Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Intent.Message) */ {
 public:
  Intent_Message();
  virtual ~Intent_Message();

  Intent_Message(const Intent_Message& from);

  inline Intent_Message& operator=(const Intent_Message& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intent_Message(Intent_Message&& from) noexcept
    : Intent_Message() {
    *this = ::std::move(from);
  }

  inline Intent_Message& operator=(Intent_Message&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Intent_Message& default_instance();

  enum MessageCase {
    kText = 1,
    kImage = 2,
    kQuickReplies = 3,
    kCard = 4,
    kPayload = 5,
    kSimpleResponses = 7,
    kBasicCard = 8,
    kSuggestions = 9,
    kLinkOutSuggestion = 10,
    kListSelect = 11,
    kCarouselSelect = 12,
    MESSAGE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intent_Message* internal_default_instance() {
    return reinterpret_cast<const Intent_Message*>(
               &_Intent_Message_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void UnsafeArenaSwap(Intent_Message* other);
  void Swap(Intent_Message* other);
  friend void swap(Intent_Message& a, Intent_Message& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intent_Message* New() const PROTOBUF_FINAL { return New(NULL); }

  Intent_Message* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Intent_Message& from);
  void MergeFrom(const Intent_Message& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Intent_Message* other);
  protected:
  explicit Intent_Message(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Intent_Message_Text Text;
  typedef Intent_Message_Image Image;
  typedef Intent_Message_QuickReplies QuickReplies;
  typedef Intent_Message_Card Card;
  typedef Intent_Message_SimpleResponse SimpleResponse;
  typedef Intent_Message_SimpleResponses SimpleResponses;
  typedef Intent_Message_BasicCard BasicCard;
  typedef Intent_Message_Suggestion Suggestion;
  typedef Intent_Message_Suggestions Suggestions;
  typedef Intent_Message_LinkOutSuggestion LinkOutSuggestion;
  typedef Intent_Message_ListSelect ListSelect;
  typedef Intent_Message_CarouselSelect CarouselSelect;
  typedef Intent_Message_SelectItemInfo SelectItemInfo;

  typedef Intent_Message_Platform Platform;
  static const Platform PLATFORM_UNSPECIFIED =
    Intent_Message_Platform_PLATFORM_UNSPECIFIED;
  static const Platform FACEBOOK =
    Intent_Message_Platform_FACEBOOK;
  static const Platform SLACK =
    Intent_Message_Platform_SLACK;
  static const Platform TELEGRAM =
    Intent_Message_Platform_TELEGRAM;
  static const Platform KIK =
    Intent_Message_Platform_KIK;
  static const Platform SKYPE =
    Intent_Message_Platform_SKYPE;
  static const Platform LINE =
    Intent_Message_Platform_LINE;
  static const Platform VIBER =
    Intent_Message_Platform_VIBER;
  static const Platform ACTIONS_ON_GOOGLE =
    Intent_Message_Platform_ACTIONS_ON_GOOGLE;
  static inline bool Platform_IsValid(int value) {
    return Intent_Message_Platform_IsValid(value);
  }
  static const Platform Platform_MIN =
    Intent_Message_Platform_Platform_MIN;
  static const Platform Platform_MAX =
    Intent_Message_Platform_Platform_MAX;
  static const int Platform_ARRAYSIZE =
    Intent_Message_Platform_Platform_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Platform_descriptor() {
    return Intent_Message_Platform_descriptor();
  }
  static inline const ::std::string& Platform_Name(Platform value) {
    return Intent_Message_Platform_Name(value);
  }
  static inline bool Platform_Parse(const ::std::string& name,
      Platform* value) {
    return Intent_Message_Platform_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Platform platform = 6;
  void clear_platform();
  static const int kPlatformFieldNumber = 6;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Platform platform() const;
  void set_platform(::google::cloud::dialogflow::v2beta1::Intent_Message_Platform value);

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Text text = 1;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 1;
  private:
  void _slow_mutable_text();
  public:
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_Text& text() const;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Text* release_text();
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Text* mutable_text();
  void set_allocated_text(::google::cloud::dialogflow::v2beta1::Intent_Message_Text* text);
  void unsafe_arena_set_allocated_text(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_Text* text);
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Text* unsafe_arena_release_text();

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Image image = 2;
  bool has_image() const;
  void clear_image();
  static const int kImageFieldNumber = 2;
  private:
  void _slow_mutable_image();
  public:
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_Image& image() const;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* release_image();
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* mutable_image();
  void set_allocated_image(::google::cloud::dialogflow::v2beta1::Intent_Message_Image* image);
  void unsafe_arena_set_allocated_image(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* image);
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* unsafe_arena_release_image();

  // .google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies quick_replies = 3;
  bool has_quick_replies() const;
  void clear_quick_replies();
  static const int kQuickRepliesFieldNumber = 3;
  private:
  void _slow_mutable_quick_replies();
  public:
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies& quick_replies() const;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies* release_quick_replies();
  ::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies* mutable_quick_replies();
  void set_allocated_quick_replies(::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies* quick_replies);
  void unsafe_arena_set_allocated_quick_replies(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies* quick_replies);
  ::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies* unsafe_arena_release_quick_replies();

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Card card = 4;
  bool has_card() const;
  void clear_card();
  static const int kCardFieldNumber = 4;
  private:
  void _slow_mutable_card();
  public:
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_Card& card() const;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Card* release_card();
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Card* mutable_card();
  void set_allocated_card(::google::cloud::dialogflow::v2beta1::Intent_Message_Card* card);
  void unsafe_arena_set_allocated_card(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_Card* card);
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Card* unsafe_arena_release_card();

  // .google.protobuf.Struct payload = 5;
  bool has_payload() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 5;
  private:
  void _slow_mutable_payload();
  public:
  const ::google::protobuf::Struct& payload() const;
  ::google::protobuf::Struct* release_payload();
  ::google::protobuf::Struct* mutable_payload();
  void set_allocated_payload(::google::protobuf::Struct* payload);
  void unsafe_arena_set_allocated_payload(
      ::google::protobuf::Struct* payload);
  ::google::protobuf::Struct* unsafe_arena_release_payload();

  // .google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses simple_responses = 7;
  bool has_simple_responses() const;
  void clear_simple_responses();
  static const int kSimpleResponsesFieldNumber = 7;
  private:
  void _slow_mutable_simple_responses();
  public:
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses& simple_responses() const;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses* release_simple_responses();
  ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses* mutable_simple_responses();
  void set_allocated_simple_responses(::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses* simple_responses);
  void unsafe_arena_set_allocated_simple_responses(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses* simple_responses);
  ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses* unsafe_arena_release_simple_responses();

  // .google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard basic_card = 8;
  bool has_basic_card() const;
  void clear_basic_card();
  static const int kBasicCardFieldNumber = 8;
  private:
  void _slow_mutable_basic_card();
  public:
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard& basic_card() const;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard* release_basic_card();
  ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard* mutable_basic_card();
  void set_allocated_basic_card(::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard* basic_card);
  void unsafe_arena_set_allocated_basic_card(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard* basic_card);
  ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard* unsafe_arena_release_basic_card();

  // .google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions suggestions = 9;
  bool has_suggestions() const;
  void clear_suggestions();
  static const int kSuggestionsFieldNumber = 9;
  private:
  void _slow_mutable_suggestions();
  public:
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions& suggestions() const;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions* release_suggestions();
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions* mutable_suggestions();
  void set_allocated_suggestions(::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions* suggestions);
  void unsafe_arena_set_allocated_suggestions(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions* suggestions);
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions* unsafe_arena_release_suggestions();

  // .google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion link_out_suggestion = 10;
  bool has_link_out_suggestion() const;
  void clear_link_out_suggestion();
  static const int kLinkOutSuggestionFieldNumber = 10;
  private:
  void _slow_mutable_link_out_suggestion();
  public:
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion& link_out_suggestion() const;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion* release_link_out_suggestion();
  ::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion* mutable_link_out_suggestion();
  void set_allocated_link_out_suggestion(::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion* link_out_suggestion);
  void unsafe_arena_set_allocated_link_out_suggestion(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion* link_out_suggestion);
  ::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion* unsafe_arena_release_link_out_suggestion();

  // .google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect list_select = 11;
  bool has_list_select() const;
  void clear_list_select();
  static const int kListSelectFieldNumber = 11;
  private:
  void _slow_mutable_list_select();
  public:
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect& list_select() const;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect* release_list_select();
  ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect* mutable_list_select();
  void set_allocated_list_select(::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect* list_select);
  void unsafe_arena_set_allocated_list_select(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect* list_select);
  ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect* unsafe_arena_release_list_select();

  // .google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect carousel_select = 12;
  bool has_carousel_select() const;
  void clear_carousel_select();
  static const int kCarouselSelectFieldNumber = 12;
  private:
  void _slow_mutable_carousel_select();
  public:
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect& carousel_select() const;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect* release_carousel_select();
  ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect* mutable_carousel_select();
  void set_allocated_carousel_select(::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect* carousel_select);
  void unsafe_arena_set_allocated_carousel_select(
      ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect* carousel_select);
  ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect* unsafe_arena_release_carousel_select();

  MessageCase message_case() const;
  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Intent.Message)
 private:
  void set_has_text();
  void set_has_image();
  void set_has_quick_replies();
  void set_has_card();
  void set_has_payload();
  void set_has_simple_responses();
  void set_has_basic_card();
  void set_has_suggestions();
  void set_has_link_out_suggestion();
  void set_has_list_select();
  void set_has_carousel_select();

  inline bool has_message() const;
  void clear_message();
  inline void clear_has_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int platform_;
  union MessageUnion {
    MessageUnion() {}
    ::google::cloud::dialogflow::v2beta1::Intent_Message_Text* text_;
    ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* image_;
    ::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies* quick_replies_;
    ::google::cloud::dialogflow::v2beta1::Intent_Message_Card* card_;
    ::google::protobuf::Struct* payload_;
    ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses* simple_responses_;
    ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard* basic_card_;
    ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions* suggestions_;
    ::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion* link_out_suggestion_;
    ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect* list_select_;
    ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect* carousel_select_;
  } message_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_MessageImpl();
};
// -------------------------------------------------------------------

class Intent_FollowupIntentInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo) */ {
 public:
  Intent_FollowupIntentInfo();
  virtual ~Intent_FollowupIntentInfo();

  Intent_FollowupIntentInfo(const Intent_FollowupIntentInfo& from);

  inline Intent_FollowupIntentInfo& operator=(const Intent_FollowupIntentInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intent_FollowupIntentInfo(Intent_FollowupIntentInfo&& from) noexcept
    : Intent_FollowupIntentInfo() {
    *this = ::std::move(from);
  }

  inline Intent_FollowupIntentInfo& operator=(Intent_FollowupIntentInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Intent_FollowupIntentInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intent_FollowupIntentInfo* internal_default_instance() {
    return reinterpret_cast<const Intent_FollowupIntentInfo*>(
               &_Intent_FollowupIntentInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void UnsafeArenaSwap(Intent_FollowupIntentInfo* other);
  void Swap(Intent_FollowupIntentInfo* other);
  friend void swap(Intent_FollowupIntentInfo& a, Intent_FollowupIntentInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intent_FollowupIntentInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  Intent_FollowupIntentInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Intent_FollowupIntentInfo& from);
  void MergeFrom(const Intent_FollowupIntentInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Intent_FollowupIntentInfo* other);
  protected:
  explicit Intent_FollowupIntentInfo(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string followup_intent_name = 1;
  void clear_followup_intent_name();
  static const int kFollowupIntentNameFieldNumber = 1;
  const ::std::string& followup_intent_name() const;
  void set_followup_intent_name(const ::std::string& value);
  #if LANG_CXX11
  void set_followup_intent_name(::std::string&& value);
  #endif
  void set_followup_intent_name(const char* value);
  void set_followup_intent_name(const char* value, size_t size);
  ::std::string* mutable_followup_intent_name();
  ::std::string* release_followup_intent_name();
  void set_allocated_followup_intent_name(::std::string* followup_intent_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_followup_intent_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_followup_intent_name(
      ::std::string* followup_intent_name);

  // string parent_followup_intent_name = 2;
  void clear_parent_followup_intent_name();
  static const int kParentFollowupIntentNameFieldNumber = 2;
  const ::std::string& parent_followup_intent_name() const;
  void set_parent_followup_intent_name(const ::std::string& value);
  #if LANG_CXX11
  void set_parent_followup_intent_name(::std::string&& value);
  #endif
  void set_parent_followup_intent_name(const char* value);
  void set_parent_followup_intent_name(const char* value, size_t size);
  ::std::string* mutable_parent_followup_intent_name();
  ::std::string* release_parent_followup_intent_name();
  void set_allocated_parent_followup_intent_name(::std::string* parent_followup_intent_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent_followup_intent_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent_followup_intent_name(
      ::std::string* parent_followup_intent_name);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr followup_intent_name_;
  ::google::protobuf::internal::ArenaStringPtr parent_followup_intent_name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntent_FollowupIntentInfoImpl();
};
// -------------------------------------------------------------------

class Intent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Intent) */ {
 public:
  Intent();
  virtual ~Intent();

  Intent(const Intent& from);

  inline Intent& operator=(const Intent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intent(Intent&& from) noexcept
    : Intent() {
    *this = ::std::move(from);
  }

  inline Intent& operator=(Intent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Intent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intent* internal_default_instance() {
    return reinterpret_cast<const Intent*>(
               &_Intent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void UnsafeArenaSwap(Intent* other);
  void Swap(Intent* other);
  friend void swap(Intent& a, Intent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intent* New() const PROTOBUF_FINAL { return New(NULL); }

  Intent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Intent& from);
  void MergeFrom(const Intent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Intent* other);
  protected:
  explicit Intent(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Intent_TrainingPhrase TrainingPhrase;
  typedef Intent_Parameter Parameter;
  typedef Intent_Message Message;
  typedef Intent_FollowupIntentInfo FollowupIntentInfo;

  typedef Intent_WebhookState WebhookState;
  static const WebhookState WEBHOOK_STATE_UNSPECIFIED =
    Intent_WebhookState_WEBHOOK_STATE_UNSPECIFIED;
  static const WebhookState WEBHOOK_STATE_ENABLED =
    Intent_WebhookState_WEBHOOK_STATE_ENABLED;
  static const WebhookState WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING =
    Intent_WebhookState_WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING;
  static inline bool WebhookState_IsValid(int value) {
    return Intent_WebhookState_IsValid(value);
  }
  static const WebhookState WebhookState_MIN =
    Intent_WebhookState_WebhookState_MIN;
  static const WebhookState WebhookState_MAX =
    Intent_WebhookState_WebhookState_MAX;
  static const int WebhookState_ARRAYSIZE =
    Intent_WebhookState_WebhookState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  WebhookState_descriptor() {
    return Intent_WebhookState_descriptor();
  }
  static inline const ::std::string& WebhookState_Name(WebhookState value) {
    return Intent_WebhookState_Name(value);
  }
  static inline bool WebhookState_Parse(const ::std::string& name,
      WebhookState* value) {
    return Intent_WebhookState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string input_context_names = 7;
  int input_context_names_size() const;
  void clear_input_context_names();
  static const int kInputContextNamesFieldNumber = 7;
  const ::std::string& input_context_names(int index) const;
  ::std::string* mutable_input_context_names(int index);
  void set_input_context_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_input_context_names(int index, ::std::string&& value);
  #endif
  void set_input_context_names(int index, const char* value);
  void set_input_context_names(int index, const char* value, size_t size);
  ::std::string* add_input_context_names();
  void add_input_context_names(const ::std::string& value);
  #if LANG_CXX11
  void add_input_context_names(::std::string&& value);
  #endif
  void add_input_context_names(const char* value);
  void add_input_context_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& input_context_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_input_context_names();

  // repeated string events = 8;
  int events_size() const;
  void clear_events();
  static const int kEventsFieldNumber = 8;
  const ::std::string& events(int index) const;
  ::std::string* mutable_events(int index);
  void set_events(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_events(int index, ::std::string&& value);
  #endif
  void set_events(int index, const char* value);
  void set_events(int index, const char* value, size_t size);
  ::std::string* add_events();
  void add_events(const ::std::string& value);
  #if LANG_CXX11
  void add_events(::std::string&& value);
  #endif
  void add_events(const char* value);
  void add_events(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& events() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_events();

  // repeated .google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase training_phrases = 9;
  int training_phrases_size() const;
  void clear_training_phrases();
  static const int kTrainingPhrasesFieldNumber = 9;
  const ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase& training_phrases(int index) const;
  ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase* mutable_training_phrases(int index);
  ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase* add_training_phrases();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase >*
      mutable_training_phrases();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase >&
      training_phrases() const;

  // repeated .google.cloud.dialogflow.v2beta1.Context output_contexts = 11;
  int output_contexts_size() const;
  void clear_output_contexts();
  static const int kOutputContextsFieldNumber = 11;
  const ::google::cloud::dialogflow::v2beta1::Context& output_contexts(int index) const;
  ::google::cloud::dialogflow::v2beta1::Context* mutable_output_contexts(int index);
  ::google::cloud::dialogflow::v2beta1::Context* add_output_contexts();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Context >*
      mutable_output_contexts();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Context >&
      output_contexts() const;

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Parameter parameters = 13;
  int parameters_size() const;
  void clear_parameters();
  static const int kParametersFieldNumber = 13;
  const ::google::cloud::dialogflow::v2beta1::Intent_Parameter& parameters(int index) const;
  ::google::cloud::dialogflow::v2beta1::Intent_Parameter* mutable_parameters(int index);
  ::google::cloud::dialogflow::v2beta1::Intent_Parameter* add_parameters();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Parameter >*
      mutable_parameters();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Parameter >&
      parameters() const;

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message messages = 14;
  int messages_size() const;
  void clear_messages();
  static const int kMessagesFieldNumber = 14;
  const ::google::cloud::dialogflow::v2beta1::Intent_Message& messages(int index) const;
  ::google::cloud::dialogflow::v2beta1::Intent_Message* mutable_messages(int index);
  ::google::cloud::dialogflow::v2beta1::Intent_Message* add_messages();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message >*
      mutable_messages();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message >&
      messages() const;

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message.Platform default_response_platforms = 15;
  int default_response_platforms_size() const;
  void clear_default_response_platforms();
  static const int kDefaultResponsePlatformsFieldNumber = 15;
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Platform default_response_platforms(int index) const;
  void set_default_response_platforms(int index, ::google::cloud::dialogflow::v2beta1::Intent_Message_Platform value);
  void add_default_response_platforms(::google::cloud::dialogflow::v2beta1::Intent_Message_Platform value);
  const ::google::protobuf::RepeatedField<int>& default_response_platforms() const;
  ::google::protobuf::RepeatedField<int>* mutable_default_response_platforms();

  // repeated .google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo followup_intent_info = 18;
  int followup_intent_info_size() const;
  void clear_followup_intent_info();
  static const int kFollowupIntentInfoFieldNumber = 18;
  const ::google::cloud::dialogflow::v2beta1::Intent_FollowupIntentInfo& followup_intent_info(int index) const;
  ::google::cloud::dialogflow::v2beta1::Intent_FollowupIntentInfo* mutable_followup_intent_info(int index);
  ::google::cloud::dialogflow::v2beta1::Intent_FollowupIntentInfo* add_followup_intent_info();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_FollowupIntentInfo >*
      mutable_followup_intent_info();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_FollowupIntentInfo >&
      followup_intent_info() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string display_name = 2;
  void clear_display_name();
  static const int kDisplayNameFieldNumber = 2;
  const ::std::string& display_name() const;
  void set_display_name(const ::std::string& value);
  #if LANG_CXX11
  void set_display_name(::std::string&& value);
  #endif
  void set_display_name(const char* value);
  void set_display_name(const char* value, size_t size);
  ::std::string* mutable_display_name();
  ::std::string* release_display_name();
  void set_allocated_display_name(::std::string* display_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_display_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_display_name(
      ::std::string* display_name);

  // string action = 10;
  void clear_action();
  static const int kActionFieldNumber = 10;
  const ::std::string& action() const;
  void set_action(const ::std::string& value);
  #if LANG_CXX11
  void set_action(::std::string&& value);
  #endif
  void set_action(const char* value);
  void set_action(const char* value, size_t size);
  ::std::string* mutable_action();
  ::std::string* release_action();
  void set_allocated_action(::std::string* action);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_action();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_action(
      ::std::string* action);

  // string root_followup_intent_name = 16;
  void clear_root_followup_intent_name();
  static const int kRootFollowupIntentNameFieldNumber = 16;
  const ::std::string& root_followup_intent_name() const;
  void set_root_followup_intent_name(const ::std::string& value);
  #if LANG_CXX11
  void set_root_followup_intent_name(::std::string&& value);
  #endif
  void set_root_followup_intent_name(const char* value);
  void set_root_followup_intent_name(const char* value, size_t size);
  ::std::string* mutable_root_followup_intent_name();
  ::std::string* release_root_followup_intent_name();
  void set_allocated_root_followup_intent_name(::std::string* root_followup_intent_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_root_followup_intent_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_root_followup_intent_name(
      ::std::string* root_followup_intent_name);

  // string parent_followup_intent_name = 17;
  void clear_parent_followup_intent_name();
  static const int kParentFollowupIntentNameFieldNumber = 17;
  const ::std::string& parent_followup_intent_name() const;
  void set_parent_followup_intent_name(const ::std::string& value);
  #if LANG_CXX11
  void set_parent_followup_intent_name(::std::string&& value);
  #endif
  void set_parent_followup_intent_name(const char* value);
  void set_parent_followup_intent_name(const char* value, size_t size);
  ::std::string* mutable_parent_followup_intent_name();
  ::std::string* release_parent_followup_intent_name();
  void set_allocated_parent_followup_intent_name(::std::string* parent_followup_intent_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent_followup_intent_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent_followup_intent_name(
      ::std::string* parent_followup_intent_name);

  // int32 priority = 3;
  void clear_priority();
  static const int kPriorityFieldNumber = 3;
  ::google::protobuf::int32 priority() const;
  void set_priority(::google::protobuf::int32 value);

  // .google.cloud.dialogflow.v2beta1.Intent.WebhookState webhook_state = 6;
  void clear_webhook_state();
  static const int kWebhookStateFieldNumber = 6;
  ::google::cloud::dialogflow::v2beta1::Intent_WebhookState webhook_state() const;
  void set_webhook_state(::google::cloud::dialogflow::v2beta1::Intent_WebhookState value);

  // bool is_fallback = 4;
  void clear_is_fallback();
  static const int kIsFallbackFieldNumber = 4;
  bool is_fallback() const;
  void set_is_fallback(bool value);

  // bool ml_enabled = 5;
  void clear_ml_enabled();
  static const int kMlEnabledFieldNumber = 5;
  bool ml_enabled() const;
  void set_ml_enabled(bool value);

  // bool reset_contexts = 12;
  void clear_reset_contexts();
  static const int kResetContextsFieldNumber = 12;
  bool reset_contexts() const;
  void set_reset_contexts(bool value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Intent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> input_context_names_;
  ::google::protobuf::RepeatedPtrField< ::std::string> events_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase > training_phrases_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Context > output_contexts_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Parameter > parameters_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message > messages_;
  ::google::protobuf::RepeatedField<int> default_response_platforms_;
  mutable int _default_response_platforms_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_FollowupIntentInfo > followup_intent_info_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr display_name_;
  ::google::protobuf::internal::ArenaStringPtr action_;
  ::google::protobuf::internal::ArenaStringPtr root_followup_intent_name_;
  ::google::protobuf::internal::ArenaStringPtr parent_followup_intent_name_;
  ::google::protobuf::int32 priority_;
  int webhook_state_;
  bool is_fallback_;
  bool ml_enabled_;
  bool reset_contexts_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntentImpl();
};
// -------------------------------------------------------------------

class ListIntentsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.ListIntentsRequest) */ {
 public:
  ListIntentsRequest();
  virtual ~ListIntentsRequest();

  ListIntentsRequest(const ListIntentsRequest& from);

  inline ListIntentsRequest& operator=(const ListIntentsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListIntentsRequest(ListIntentsRequest&& from) noexcept
    : ListIntentsRequest() {
    *this = ::std::move(from);
  }

  inline ListIntentsRequest& operator=(ListIntentsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListIntentsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListIntentsRequest* internal_default_instance() {
    return reinterpret_cast<const ListIntentsRequest*>(
               &_ListIntentsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void UnsafeArenaSwap(ListIntentsRequest* other);
  void Swap(ListIntentsRequest* other);
  friend void swap(ListIntentsRequest& a, ListIntentsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListIntentsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListIntentsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListIntentsRequest& from);
  void MergeFrom(const ListIntentsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListIntentsRequest* other);
  protected:
  explicit ListIntentsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string language_code = 2;
  void clear_language_code();
  static const int kLanguageCodeFieldNumber = 2;
  const ::std::string& language_code() const;
  void set_language_code(const ::std::string& value);
  #if LANG_CXX11
  void set_language_code(::std::string&& value);
  #endif
  void set_language_code(const char* value);
  void set_language_code(const char* value, size_t size);
  ::std::string* mutable_language_code();
  ::std::string* release_language_code();
  void set_allocated_language_code(::std::string* language_code);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_language_code();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_language_code(
      ::std::string* language_code);

  // string page_token = 5;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 5;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // .google.cloud.dialogflow.v2beta1.IntentView intent_view = 3;
  void clear_intent_view();
  static const int kIntentViewFieldNumber = 3;
  ::google::cloud::dialogflow::v2beta1::IntentView intent_view() const;
  void set_intent_view(::google::cloud::dialogflow::v2beta1::IntentView value);

  // int32 page_size = 4;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 4;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.ListIntentsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr language_code_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  int intent_view_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsListIntentsRequestImpl();
};
// -------------------------------------------------------------------

class ListIntentsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.ListIntentsResponse) */ {
 public:
  ListIntentsResponse();
  virtual ~ListIntentsResponse();

  ListIntentsResponse(const ListIntentsResponse& from);

  inline ListIntentsResponse& operator=(const ListIntentsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListIntentsResponse(ListIntentsResponse&& from) noexcept
    : ListIntentsResponse() {
    *this = ::std::move(from);
  }

  inline ListIntentsResponse& operator=(ListIntentsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListIntentsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListIntentsResponse* internal_default_instance() {
    return reinterpret_cast<const ListIntentsResponse*>(
               &_ListIntentsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void UnsafeArenaSwap(ListIntentsResponse* other);
  void Swap(ListIntentsResponse* other);
  friend void swap(ListIntentsResponse& a, ListIntentsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListIntentsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListIntentsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListIntentsResponse& from);
  void MergeFrom(const ListIntentsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListIntentsResponse* other);
  protected:
  explicit ListIntentsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.dialogflow.v2beta1.Intent intents = 1;
  int intents_size() const;
  void clear_intents();
  static const int kIntentsFieldNumber = 1;
  const ::google::cloud::dialogflow::v2beta1::Intent& intents(int index) const;
  ::google::cloud::dialogflow::v2beta1::Intent* mutable_intents(int index);
  ::google::cloud::dialogflow::v2beta1::Intent* add_intents();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent >*
      mutable_intents();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent >&
      intents() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_next_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.ListIntentsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent > intents_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsListIntentsResponseImpl();
};
// -------------------------------------------------------------------

class GetIntentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.GetIntentRequest) */ {
 public:
  GetIntentRequest();
  virtual ~GetIntentRequest();

  GetIntentRequest(const GetIntentRequest& from);

  inline GetIntentRequest& operator=(const GetIntentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetIntentRequest(GetIntentRequest&& from) noexcept
    : GetIntentRequest() {
    *this = ::std::move(from);
  }

  inline GetIntentRequest& operator=(GetIntentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetIntentRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetIntentRequest* internal_default_instance() {
    return reinterpret_cast<const GetIntentRequest*>(
               &_GetIntentRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void UnsafeArenaSwap(GetIntentRequest* other);
  void Swap(GetIntentRequest* other);
  friend void swap(GetIntentRequest& a, GetIntentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetIntentRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetIntentRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetIntentRequest& from);
  void MergeFrom(const GetIntentRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetIntentRequest* other);
  protected:
  explicit GetIntentRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string language_code = 2;
  void clear_language_code();
  static const int kLanguageCodeFieldNumber = 2;
  const ::std::string& language_code() const;
  void set_language_code(const ::std::string& value);
  #if LANG_CXX11
  void set_language_code(::std::string&& value);
  #endif
  void set_language_code(const char* value);
  void set_language_code(const char* value, size_t size);
  ::std::string* mutable_language_code();
  ::std::string* release_language_code();
  void set_allocated_language_code(::std::string* language_code);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_language_code();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_language_code(
      ::std::string* language_code);

  // .google.cloud.dialogflow.v2beta1.IntentView intent_view = 3;
  void clear_intent_view();
  static const int kIntentViewFieldNumber = 3;
  ::google::cloud::dialogflow::v2beta1::IntentView intent_view() const;
  void set_intent_view(::google::cloud::dialogflow::v2beta1::IntentView value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.GetIntentRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr language_code_;
  int intent_view_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsGetIntentRequestImpl();
};
// -------------------------------------------------------------------

class CreateIntentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.CreateIntentRequest) */ {
 public:
  CreateIntentRequest();
  virtual ~CreateIntentRequest();

  CreateIntentRequest(const CreateIntentRequest& from);

  inline CreateIntentRequest& operator=(const CreateIntentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateIntentRequest(CreateIntentRequest&& from) noexcept
    : CreateIntentRequest() {
    *this = ::std::move(from);
  }

  inline CreateIntentRequest& operator=(CreateIntentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateIntentRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateIntentRequest* internal_default_instance() {
    return reinterpret_cast<const CreateIntentRequest*>(
               &_CreateIntentRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void UnsafeArenaSwap(CreateIntentRequest* other);
  void Swap(CreateIntentRequest* other);
  friend void swap(CreateIntentRequest& a, CreateIntentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateIntentRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateIntentRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateIntentRequest& from);
  void MergeFrom(const CreateIntentRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateIntentRequest* other);
  protected:
  explicit CreateIntentRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string language_code = 3;
  void clear_language_code();
  static const int kLanguageCodeFieldNumber = 3;
  const ::std::string& language_code() const;
  void set_language_code(const ::std::string& value);
  #if LANG_CXX11
  void set_language_code(::std::string&& value);
  #endif
  void set_language_code(const char* value);
  void set_language_code(const char* value, size_t size);
  ::std::string* mutable_language_code();
  ::std::string* release_language_code();
  void set_allocated_language_code(::std::string* language_code);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_language_code();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_language_code(
      ::std::string* language_code);

  // .google.cloud.dialogflow.v2beta1.Intent intent = 2;
  bool has_intent() const;
  void clear_intent();
  static const int kIntentFieldNumber = 2;
  private:
  void _slow_mutable_intent();
  public:
  const ::google::cloud::dialogflow::v2beta1::Intent& intent() const;
  ::google::cloud::dialogflow::v2beta1::Intent* release_intent();
  ::google::cloud::dialogflow::v2beta1::Intent* mutable_intent();
  void set_allocated_intent(::google::cloud::dialogflow::v2beta1::Intent* intent);
  void unsafe_arena_set_allocated_intent(
      ::google::cloud::dialogflow::v2beta1::Intent* intent);
  ::google::cloud::dialogflow::v2beta1::Intent* unsafe_arena_release_intent();

  // .google.cloud.dialogflow.v2beta1.IntentView intent_view = 4;
  void clear_intent_view();
  static const int kIntentViewFieldNumber = 4;
  ::google::cloud::dialogflow::v2beta1::IntentView intent_view() const;
  void set_intent_view(::google::cloud::dialogflow::v2beta1::IntentView value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.CreateIntentRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr language_code_;
  ::google::cloud::dialogflow::v2beta1::Intent* intent_;
  int intent_view_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsCreateIntentRequestImpl();
};
// -------------------------------------------------------------------

class UpdateIntentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.UpdateIntentRequest) */ {
 public:
  UpdateIntentRequest();
  virtual ~UpdateIntentRequest();

  UpdateIntentRequest(const UpdateIntentRequest& from);

  inline UpdateIntentRequest& operator=(const UpdateIntentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateIntentRequest(UpdateIntentRequest&& from) noexcept
    : UpdateIntentRequest() {
    *this = ::std::move(from);
  }

  inline UpdateIntentRequest& operator=(UpdateIntentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateIntentRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateIntentRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateIntentRequest*>(
               &_UpdateIntentRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void UnsafeArenaSwap(UpdateIntentRequest* other);
  void Swap(UpdateIntentRequest* other);
  friend void swap(UpdateIntentRequest& a, UpdateIntentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateIntentRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateIntentRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateIntentRequest& from);
  void MergeFrom(const UpdateIntentRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateIntentRequest* other);
  protected:
  explicit UpdateIntentRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string language_code = 2;
  void clear_language_code();
  static const int kLanguageCodeFieldNumber = 2;
  const ::std::string& language_code() const;
  void set_language_code(const ::std::string& value);
  #if LANG_CXX11
  void set_language_code(::std::string&& value);
  #endif
  void set_language_code(const char* value);
  void set_language_code(const char* value, size_t size);
  ::std::string* mutable_language_code();
  ::std::string* release_language_code();
  void set_allocated_language_code(::std::string* language_code);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_language_code();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_language_code(
      ::std::string* language_code);

  // .google.cloud.dialogflow.v2beta1.Intent intent = 1;
  bool has_intent() const;
  void clear_intent();
  static const int kIntentFieldNumber = 1;
  private:
  void _slow_mutable_intent();
  public:
  const ::google::cloud::dialogflow::v2beta1::Intent& intent() const;
  ::google::cloud::dialogflow::v2beta1::Intent* release_intent();
  ::google::cloud::dialogflow::v2beta1::Intent* mutable_intent();
  void set_allocated_intent(::google::cloud::dialogflow::v2beta1::Intent* intent);
  void unsafe_arena_set_allocated_intent(
      ::google::cloud::dialogflow::v2beta1::Intent* intent);
  ::google::cloud::dialogflow::v2beta1::Intent* unsafe_arena_release_intent();

  // .google.protobuf.FieldMask update_mask = 3;
  bool has_update_mask() const;
  void clear_update_mask();
  static const int kUpdateMaskFieldNumber = 3;
  private:
  void _slow_mutable_update_mask();
  public:
  const ::google::protobuf::FieldMask& update_mask() const;
  ::google::protobuf::FieldMask* release_update_mask();
  ::google::protobuf::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* update_mask);
  void unsafe_arena_set_allocated_update_mask(
      ::google::protobuf::FieldMask* update_mask);
  ::google::protobuf::FieldMask* unsafe_arena_release_update_mask();

  // .google.cloud.dialogflow.v2beta1.IntentView intent_view = 4;
  void clear_intent_view();
  static const int kIntentViewFieldNumber = 4;
  ::google::cloud::dialogflow::v2beta1::IntentView intent_view() const;
  void set_intent_view(::google::cloud::dialogflow::v2beta1::IntentView value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.UpdateIntentRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr language_code_;
  ::google::cloud::dialogflow::v2beta1::Intent* intent_;
  ::google::protobuf::FieldMask* update_mask_;
  int intent_view_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsUpdateIntentRequestImpl();
};
// -------------------------------------------------------------------

class DeleteIntentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.DeleteIntentRequest) */ {
 public:
  DeleteIntentRequest();
  virtual ~DeleteIntentRequest();

  DeleteIntentRequest(const DeleteIntentRequest& from);

  inline DeleteIntentRequest& operator=(const DeleteIntentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteIntentRequest(DeleteIntentRequest&& from) noexcept
    : DeleteIntentRequest() {
    *this = ::std::move(from);
  }

  inline DeleteIntentRequest& operator=(DeleteIntentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteIntentRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteIntentRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteIntentRequest*>(
               &_DeleteIntentRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void UnsafeArenaSwap(DeleteIntentRequest* other);
  void Swap(DeleteIntentRequest* other);
  friend void swap(DeleteIntentRequest& a, DeleteIntentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteIntentRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteIntentRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteIntentRequest& from);
  void MergeFrom(const DeleteIntentRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteIntentRequest* other);
  protected:
  explicit DeleteIntentRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.DeleteIntentRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsDeleteIntentRequestImpl();
};
// -------------------------------------------------------------------

class BatchUpdateIntentsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest) */ {
 public:
  BatchUpdateIntentsRequest();
  virtual ~BatchUpdateIntentsRequest();

  BatchUpdateIntentsRequest(const BatchUpdateIntentsRequest& from);

  inline BatchUpdateIntentsRequest& operator=(const BatchUpdateIntentsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BatchUpdateIntentsRequest(BatchUpdateIntentsRequest&& from) noexcept
    : BatchUpdateIntentsRequest() {
    *this = ::std::move(from);
  }

  inline BatchUpdateIntentsRequest& operator=(BatchUpdateIntentsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchUpdateIntentsRequest& default_instance();

  enum IntentBatchCase {
    kIntentBatchUri = 2,
    kIntentBatchInline = 3,
    INTENT_BATCH_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchUpdateIntentsRequest* internal_default_instance() {
    return reinterpret_cast<const BatchUpdateIntentsRequest*>(
               &_BatchUpdateIntentsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void UnsafeArenaSwap(BatchUpdateIntentsRequest* other);
  void Swap(BatchUpdateIntentsRequest* other);
  friend void swap(BatchUpdateIntentsRequest& a, BatchUpdateIntentsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BatchUpdateIntentsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchUpdateIntentsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchUpdateIntentsRequest& from);
  void MergeFrom(const BatchUpdateIntentsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchUpdateIntentsRequest* other);
  protected:
  explicit BatchUpdateIntentsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string language_code = 4;
  void clear_language_code();
  static const int kLanguageCodeFieldNumber = 4;
  const ::std::string& language_code() const;
  void set_language_code(const ::std::string& value);
  #if LANG_CXX11
  void set_language_code(::std::string&& value);
  #endif
  void set_language_code(const char* value);
  void set_language_code(const char* value, size_t size);
  ::std::string* mutable_language_code();
  ::std::string* release_language_code();
  void set_allocated_language_code(::std::string* language_code);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_language_code();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_language_code(
      ::std::string* language_code);

  // .google.protobuf.FieldMask update_mask = 5;
  bool has_update_mask() const;
  void clear_update_mask();
  static const int kUpdateMaskFieldNumber = 5;
  private:
  void _slow_mutable_update_mask();
  public:
  const ::google::protobuf::FieldMask& update_mask() const;
  ::google::protobuf::FieldMask* release_update_mask();
  ::google::protobuf::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* update_mask);
  void unsafe_arena_set_allocated_update_mask(
      ::google::protobuf::FieldMask* update_mask);
  ::google::protobuf::FieldMask* unsafe_arena_release_update_mask();

  // .google.cloud.dialogflow.v2beta1.IntentView intent_view = 6;
  void clear_intent_view();
  static const int kIntentViewFieldNumber = 6;
  ::google::cloud::dialogflow::v2beta1::IntentView intent_view() const;
  void set_intent_view(::google::cloud::dialogflow::v2beta1::IntentView value);

  // string intent_batch_uri = 2;
  private:
  bool has_intent_batch_uri() const;
  public:
  void clear_intent_batch_uri();
  static const int kIntentBatchUriFieldNumber = 2;
  const ::std::string& intent_batch_uri() const;
  void set_intent_batch_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_intent_batch_uri(::std::string&& value);
  #endif
  void set_intent_batch_uri(const char* value);
  void set_intent_batch_uri(const char* value, size_t size);
  ::std::string* mutable_intent_batch_uri();
  ::std::string* release_intent_batch_uri();
  void set_allocated_intent_batch_uri(::std::string* intent_batch_uri);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_intent_batch_uri();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_intent_batch_uri(
      ::std::string* intent_batch_uri);

  // .google.cloud.dialogflow.v2beta1.IntentBatch intent_batch_inline = 3;
  bool has_intent_batch_inline() const;
  void clear_intent_batch_inline();
  static const int kIntentBatchInlineFieldNumber = 3;
  private:
  void _slow_mutable_intent_batch_inline();
  public:
  const ::google::cloud::dialogflow::v2beta1::IntentBatch& intent_batch_inline() const;
  ::google::cloud::dialogflow::v2beta1::IntentBatch* release_intent_batch_inline();
  ::google::cloud::dialogflow::v2beta1::IntentBatch* mutable_intent_batch_inline();
  void set_allocated_intent_batch_inline(::google::cloud::dialogflow::v2beta1::IntentBatch* intent_batch_inline);
  void unsafe_arena_set_allocated_intent_batch_inline(
      ::google::cloud::dialogflow::v2beta1::IntentBatch* intent_batch_inline);
  ::google::cloud::dialogflow::v2beta1::IntentBatch* unsafe_arena_release_intent_batch_inline();

  IntentBatchCase intent_batch_case() const;
  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest)
 private:
  void set_has_intent_batch_uri();
  void set_has_intent_batch_inline();

  inline bool has_intent_batch() const;
  void clear_intent_batch();
  inline void clear_has_intent_batch();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr language_code_;
  ::google::protobuf::FieldMask* update_mask_;
  int intent_view_;
  union IntentBatchUnion {
    IntentBatchUnion() {}
    ::google::protobuf::internal::ArenaStringPtr intent_batch_uri_;
    ::google::cloud::dialogflow::v2beta1::IntentBatch* intent_batch_inline_;
  } intent_batch_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsBatchUpdateIntentsRequestImpl();
};
// -------------------------------------------------------------------

class BatchUpdateIntentsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse) */ {
 public:
  BatchUpdateIntentsResponse();
  virtual ~BatchUpdateIntentsResponse();

  BatchUpdateIntentsResponse(const BatchUpdateIntentsResponse& from);

  inline BatchUpdateIntentsResponse& operator=(const BatchUpdateIntentsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BatchUpdateIntentsResponse(BatchUpdateIntentsResponse&& from) noexcept
    : BatchUpdateIntentsResponse() {
    *this = ::std::move(from);
  }

  inline BatchUpdateIntentsResponse& operator=(BatchUpdateIntentsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchUpdateIntentsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchUpdateIntentsResponse* internal_default_instance() {
    return reinterpret_cast<const BatchUpdateIntentsResponse*>(
               &_BatchUpdateIntentsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void UnsafeArenaSwap(BatchUpdateIntentsResponse* other);
  void Swap(BatchUpdateIntentsResponse* other);
  friend void swap(BatchUpdateIntentsResponse& a, BatchUpdateIntentsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BatchUpdateIntentsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchUpdateIntentsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchUpdateIntentsResponse& from);
  void MergeFrom(const BatchUpdateIntentsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchUpdateIntentsResponse* other);
  protected:
  explicit BatchUpdateIntentsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.dialogflow.v2beta1.Intent intents = 1;
  int intents_size() const;
  void clear_intents();
  static const int kIntentsFieldNumber = 1;
  const ::google::cloud::dialogflow::v2beta1::Intent& intents(int index) const;
  ::google::cloud::dialogflow::v2beta1::Intent* mutable_intents(int index);
  ::google::cloud::dialogflow::v2beta1::Intent* add_intents();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent >*
      mutable_intents();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent >&
      intents() const;

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent > intents_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsBatchUpdateIntentsResponseImpl();
};
// -------------------------------------------------------------------

class BatchDeleteIntentsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest) */ {
 public:
  BatchDeleteIntentsRequest();
  virtual ~BatchDeleteIntentsRequest();

  BatchDeleteIntentsRequest(const BatchDeleteIntentsRequest& from);

  inline BatchDeleteIntentsRequest& operator=(const BatchDeleteIntentsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BatchDeleteIntentsRequest(BatchDeleteIntentsRequest&& from) noexcept
    : BatchDeleteIntentsRequest() {
    *this = ::std::move(from);
  }

  inline BatchDeleteIntentsRequest& operator=(BatchDeleteIntentsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchDeleteIntentsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchDeleteIntentsRequest* internal_default_instance() {
    return reinterpret_cast<const BatchDeleteIntentsRequest*>(
               &_BatchDeleteIntentsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void UnsafeArenaSwap(BatchDeleteIntentsRequest* other);
  void Swap(BatchDeleteIntentsRequest* other);
  friend void swap(BatchDeleteIntentsRequest& a, BatchDeleteIntentsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BatchDeleteIntentsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchDeleteIntentsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchDeleteIntentsRequest& from);
  void MergeFrom(const BatchDeleteIntentsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchDeleteIntentsRequest* other);
  protected:
  explicit BatchDeleteIntentsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.dialogflow.v2beta1.Intent intents = 2;
  int intents_size() const;
  void clear_intents();
  static const int kIntentsFieldNumber = 2;
  const ::google::cloud::dialogflow::v2beta1::Intent& intents(int index) const;
  ::google::cloud::dialogflow::v2beta1::Intent* mutable_intents(int index);
  ::google::cloud::dialogflow::v2beta1::Intent* add_intents();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent >*
      mutable_intents();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent >&
      intents() const;

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent > intents_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsBatchDeleteIntentsRequestImpl();
};
// -------------------------------------------------------------------

class IntentBatch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.IntentBatch) */ {
 public:
  IntentBatch();
  virtual ~IntentBatch();

  IntentBatch(const IntentBatch& from);

  inline IntentBatch& operator=(const IntentBatch& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IntentBatch(IntentBatch&& from) noexcept
    : IntentBatch() {
    *this = ::std::move(from);
  }

  inline IntentBatch& operator=(IntentBatch&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const IntentBatch& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntentBatch* internal_default_instance() {
    return reinterpret_cast<const IntentBatch*>(
               &_IntentBatch_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void UnsafeArenaSwap(IntentBatch* other);
  void Swap(IntentBatch* other);
  friend void swap(IntentBatch& a, IntentBatch& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IntentBatch* New() const PROTOBUF_FINAL { return New(NULL); }

  IntentBatch* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IntentBatch& from);
  void MergeFrom(const IntentBatch& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IntentBatch* other);
  protected:
  explicit IntentBatch(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.dialogflow.v2beta1.Intent intents = 1;
  int intents_size() const;
  void clear_intents();
  static const int kIntentsFieldNumber = 1;
  const ::google::cloud::dialogflow::v2beta1::Intent& intents(int index) const;
  ::google::cloud::dialogflow::v2beta1::Intent* mutable_intents(int index);
  ::google::cloud::dialogflow::v2beta1::Intent* add_intents();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent >*
      mutable_intents();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent >&
      intents() const;

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.IntentBatch)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent > intents_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto::InitDefaultsIntentBatchImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Intent_TrainingPhrase_Part

// string text = 1;
inline void Intent_TrainingPhrase_Part::clear_text() {
  text_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_TrainingPhrase_Part::text() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.text)
  return text_.Get();
}
inline void Intent_TrainingPhrase_Part::set_text(const ::std::string& value) {
  
  text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.text)
}
#if LANG_CXX11
inline void Intent_TrainingPhrase_Part::set_text(::std::string&& value) {
  
  text_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.text)
}
#endif
inline void Intent_TrainingPhrase_Part::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.text)
}
inline void Intent_TrainingPhrase_Part::set_text(const char* value,
    size_t size) {
  
  text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.text)
}
inline ::std::string* Intent_TrainingPhrase_Part::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.text)
  return text_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_TrainingPhrase_Part::release_text() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.text)
  
  return text_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_TrainingPhrase_Part::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.text)
}
inline ::std::string* Intent_TrainingPhrase_Part::unsafe_arena_release_text() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.text)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return text_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_TrainingPhrase_Part::unsafe_arena_set_allocated_text(
    ::std::string* text) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (text != NULL) {
    
  } else {
    
  }
  text_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      text, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.text)
}

// string entity_type = 2;
inline void Intent_TrainingPhrase_Part::clear_entity_type() {
  entity_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_TrainingPhrase_Part::entity_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.entity_type)
  return entity_type_.Get();
}
inline void Intent_TrainingPhrase_Part::set_entity_type(const ::std::string& value) {
  
  entity_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.entity_type)
}
#if LANG_CXX11
inline void Intent_TrainingPhrase_Part::set_entity_type(::std::string&& value) {
  
  entity_type_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.entity_type)
}
#endif
inline void Intent_TrainingPhrase_Part::set_entity_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  entity_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.entity_type)
}
inline void Intent_TrainingPhrase_Part::set_entity_type(const char* value,
    size_t size) {
  
  entity_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.entity_type)
}
inline ::std::string* Intent_TrainingPhrase_Part::mutable_entity_type() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.entity_type)
  return entity_type_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_TrainingPhrase_Part::release_entity_type() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.entity_type)
  
  return entity_type_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_TrainingPhrase_Part::set_allocated_entity_type(::std::string* entity_type) {
  if (entity_type != NULL) {
    
  } else {
    
  }
  entity_type_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entity_type,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.entity_type)
}
inline ::std::string* Intent_TrainingPhrase_Part::unsafe_arena_release_entity_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.entity_type)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return entity_type_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_TrainingPhrase_Part::unsafe_arena_set_allocated_entity_type(
    ::std::string* entity_type) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (entity_type != NULL) {
    
  } else {
    
  }
  entity_type_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      entity_type, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.entity_type)
}

// string alias = 3;
inline void Intent_TrainingPhrase_Part::clear_alias() {
  alias_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_TrainingPhrase_Part::alias() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.alias)
  return alias_.Get();
}
inline void Intent_TrainingPhrase_Part::set_alias(const ::std::string& value) {
  
  alias_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.alias)
}
#if LANG_CXX11
inline void Intent_TrainingPhrase_Part::set_alias(::std::string&& value) {
  
  alias_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.alias)
}
#endif
inline void Intent_TrainingPhrase_Part::set_alias(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  alias_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.alias)
}
inline void Intent_TrainingPhrase_Part::set_alias(const char* value,
    size_t size) {
  
  alias_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.alias)
}
inline ::std::string* Intent_TrainingPhrase_Part::mutable_alias() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.alias)
  return alias_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_TrainingPhrase_Part::release_alias() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.alias)
  
  return alias_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_TrainingPhrase_Part::set_allocated_alias(::std::string* alias) {
  if (alias != NULL) {
    
  } else {
    
  }
  alias_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alias,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.alias)
}
inline ::std::string* Intent_TrainingPhrase_Part::unsafe_arena_release_alias() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.alias)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return alias_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_TrainingPhrase_Part::unsafe_arena_set_allocated_alias(
    ::std::string* alias) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (alias != NULL) {
    
  } else {
    
  }
  alias_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      alias, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.alias)
}

// bool user_defined = 4;
inline void Intent_TrainingPhrase_Part::clear_user_defined() {
  user_defined_ = false;
}
inline bool Intent_TrainingPhrase_Part::user_defined() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.user_defined)
  return user_defined_;
}
inline void Intent_TrainingPhrase_Part::set_user_defined(bool value) {
  
  user_defined_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.user_defined)
}

// -------------------------------------------------------------------

// Intent_TrainingPhrase

// string name = 1;
inline void Intent_TrainingPhrase::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_TrainingPhrase::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.name)
  return name_.Get();
}
inline void Intent_TrainingPhrase::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.name)
}
#if LANG_CXX11
inline void Intent_TrainingPhrase::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.name)
}
#endif
inline void Intent_TrainingPhrase::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.name)
}
inline void Intent_TrainingPhrase::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.name)
}
inline ::std::string* Intent_TrainingPhrase::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_TrainingPhrase::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_TrainingPhrase::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.name)
}
inline ::std::string* Intent_TrainingPhrase::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_TrainingPhrase::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.name)
}

// .google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Type type = 2;
inline void Intent_TrainingPhrase::clear_type() {
  type_ = 0;
}
inline ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Type Intent_TrainingPhrase::type() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.type)
  return static_cast< ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Type >(type_);
}
inline void Intent_TrainingPhrase::set_type(::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.type)
}

// repeated .google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part parts = 3;
inline int Intent_TrainingPhrase::parts_size() const {
  return parts_.size();
}
inline void Intent_TrainingPhrase::clear_parts() {
  parts_.Clear();
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Part& Intent_TrainingPhrase::parts(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.parts)
  return parts_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Part* Intent_TrainingPhrase::mutable_parts(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.parts)
  return parts_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Part* Intent_TrainingPhrase::add_parts() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.parts)
  return parts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Part >*
Intent_TrainingPhrase::mutable_parts() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.parts)
  return &parts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Part >&
Intent_TrainingPhrase::parts() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.parts)
  return parts_;
}

// int32 times_added_count = 4;
inline void Intent_TrainingPhrase::clear_times_added_count() {
  times_added_count_ = 0;
}
inline ::google::protobuf::int32 Intent_TrainingPhrase::times_added_count() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.times_added_count)
  return times_added_count_;
}
inline void Intent_TrainingPhrase::set_times_added_count(::google::protobuf::int32 value) {
  
  times_added_count_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.times_added_count)
}

// -------------------------------------------------------------------

// Intent_Parameter

// string name = 1;
inline void Intent_Parameter::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Parameter::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Parameter.name)
  return name_.Get();
}
inline void Intent_Parameter::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Parameter.name)
}
#if LANG_CXX11
inline void Intent_Parameter::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Parameter.name)
}
#endif
inline void Intent_Parameter::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Parameter.name)
}
inline void Intent_Parameter::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Parameter.name)
}
inline ::std::string* Intent_Parameter::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Parameter.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Parameter::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Parameter.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Parameter::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Parameter.name)
}
inline ::std::string* Intent_Parameter::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Parameter.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Parameter::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Parameter.name)
}

// string display_name = 2;
inline void Intent_Parameter::clear_display_name() {
  display_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Parameter::display_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Parameter.display_name)
  return display_name_.Get();
}
inline void Intent_Parameter::set_display_name(const ::std::string& value) {
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Parameter.display_name)
}
#if LANG_CXX11
inline void Intent_Parameter::set_display_name(::std::string&& value) {
  
  display_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Parameter.display_name)
}
#endif
inline void Intent_Parameter::set_display_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Parameter.display_name)
}
inline void Intent_Parameter::set_display_name(const char* value,
    size_t size) {
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Parameter.display_name)
}
inline ::std::string* Intent_Parameter::mutable_display_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Parameter.display_name)
  return display_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Parameter::release_display_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Parameter.display_name)
  
  return display_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Parameter::set_allocated_display_name(::std::string* display_name) {
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Parameter.display_name)
}
inline ::std::string* Intent_Parameter::unsafe_arena_release_display_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Parameter.display_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return display_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Parameter::unsafe_arena_set_allocated_display_name(
    ::std::string* display_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      display_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Parameter.display_name)
}

// string value = 3;
inline void Intent_Parameter::clear_value() {
  value_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Parameter::value() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Parameter.value)
  return value_.Get();
}
inline void Intent_Parameter::set_value(const ::std::string& value) {
  
  value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Parameter.value)
}
#if LANG_CXX11
inline void Intent_Parameter::set_value(::std::string&& value) {
  
  value_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Parameter.value)
}
#endif
inline void Intent_Parameter::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Parameter.value)
}
inline void Intent_Parameter::set_value(const char* value,
    size_t size) {
  
  value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Parameter.value)
}
inline ::std::string* Intent_Parameter::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Parameter.value)
  return value_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Parameter::release_value() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Parameter.value)
  
  return value_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Parameter::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Parameter.value)
}
inline ::std::string* Intent_Parameter::unsafe_arena_release_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Parameter.value)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return value_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Parameter::unsafe_arena_set_allocated_value(
    ::std::string* value) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (value != NULL) {
    
  } else {
    
  }
  value_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Parameter.value)
}

// string default_value = 4;
inline void Intent_Parameter::clear_default_value() {
  default_value_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Parameter::default_value() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Parameter.default_value)
  return default_value_.Get();
}
inline void Intent_Parameter::set_default_value(const ::std::string& value) {
  
  default_value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Parameter.default_value)
}
#if LANG_CXX11
inline void Intent_Parameter::set_default_value(::std::string&& value) {
  
  default_value_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Parameter.default_value)
}
#endif
inline void Intent_Parameter::set_default_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  default_value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Parameter.default_value)
}
inline void Intent_Parameter::set_default_value(const char* value,
    size_t size) {
  
  default_value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Parameter.default_value)
}
inline ::std::string* Intent_Parameter::mutable_default_value() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Parameter.default_value)
  return default_value_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Parameter::release_default_value() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Parameter.default_value)
  
  return default_value_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Parameter::set_allocated_default_value(::std::string* default_value) {
  if (default_value != NULL) {
    
  } else {
    
  }
  default_value_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), default_value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Parameter.default_value)
}
inline ::std::string* Intent_Parameter::unsafe_arena_release_default_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Parameter.default_value)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return default_value_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Parameter::unsafe_arena_set_allocated_default_value(
    ::std::string* default_value) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (default_value != NULL) {
    
  } else {
    
  }
  default_value_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      default_value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Parameter.default_value)
}

// string entity_type_display_name = 5;
inline void Intent_Parameter::clear_entity_type_display_name() {
  entity_type_display_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Parameter::entity_type_display_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Parameter.entity_type_display_name)
  return entity_type_display_name_.Get();
}
inline void Intent_Parameter::set_entity_type_display_name(const ::std::string& value) {
  
  entity_type_display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Parameter.entity_type_display_name)
}
#if LANG_CXX11
inline void Intent_Parameter::set_entity_type_display_name(::std::string&& value) {
  
  entity_type_display_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Parameter.entity_type_display_name)
}
#endif
inline void Intent_Parameter::set_entity_type_display_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  entity_type_display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Parameter.entity_type_display_name)
}
inline void Intent_Parameter::set_entity_type_display_name(const char* value,
    size_t size) {
  
  entity_type_display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Parameter.entity_type_display_name)
}
inline ::std::string* Intent_Parameter::mutable_entity_type_display_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Parameter.entity_type_display_name)
  return entity_type_display_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Parameter::release_entity_type_display_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Parameter.entity_type_display_name)
  
  return entity_type_display_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Parameter::set_allocated_entity_type_display_name(::std::string* entity_type_display_name) {
  if (entity_type_display_name != NULL) {
    
  } else {
    
  }
  entity_type_display_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entity_type_display_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Parameter.entity_type_display_name)
}
inline ::std::string* Intent_Parameter::unsafe_arena_release_entity_type_display_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Parameter.entity_type_display_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return entity_type_display_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Parameter::unsafe_arena_set_allocated_entity_type_display_name(
    ::std::string* entity_type_display_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (entity_type_display_name != NULL) {
    
  } else {
    
  }
  entity_type_display_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      entity_type_display_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Parameter.entity_type_display_name)
}

// bool mandatory = 6;
inline void Intent_Parameter::clear_mandatory() {
  mandatory_ = false;
}
inline bool Intent_Parameter::mandatory() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Parameter.mandatory)
  return mandatory_;
}
inline void Intent_Parameter::set_mandatory(bool value) {
  
  mandatory_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Parameter.mandatory)
}

// repeated string prompts = 7;
inline int Intent_Parameter::prompts_size() const {
  return prompts_.size();
}
inline void Intent_Parameter::clear_prompts() {
  prompts_.Clear();
}
inline const ::std::string& Intent_Parameter::prompts(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Parameter.prompts)
  return prompts_.Get(index);
}
inline ::std::string* Intent_Parameter::mutable_prompts(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Parameter.prompts)
  return prompts_.Mutable(index);
}
inline void Intent_Parameter::set_prompts(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Parameter.prompts)
  prompts_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Intent_Parameter::set_prompts(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Parameter.prompts)
  prompts_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Intent_Parameter::set_prompts(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  prompts_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Parameter.prompts)
}
inline void Intent_Parameter::set_prompts(int index, const char* value, size_t size) {
  prompts_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Parameter.prompts)
}
inline ::std::string* Intent_Parameter::add_prompts() {
  // @@protoc_insertion_point(field_add_mutable:google.cloud.dialogflow.v2beta1.Intent.Parameter.prompts)
  return prompts_.Add();
}
inline void Intent_Parameter::add_prompts(const ::std::string& value) {
  prompts_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Intent.Parameter.prompts)
}
#if LANG_CXX11
inline void Intent_Parameter::add_prompts(::std::string&& value) {
  prompts_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Intent.Parameter.prompts)
}
#endif
inline void Intent_Parameter::add_prompts(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  prompts_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.dialogflow.v2beta1.Intent.Parameter.prompts)
}
inline void Intent_Parameter::add_prompts(const char* value, size_t size) {
  prompts_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.dialogflow.v2beta1.Intent.Parameter.prompts)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Intent_Parameter::prompts() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.Intent.Parameter.prompts)
  return prompts_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Intent_Parameter::mutable_prompts() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.Intent.Parameter.prompts)
  return &prompts_;
}

// bool is_list = 8;
inline void Intent_Parameter::clear_is_list() {
  is_list_ = false;
}
inline bool Intent_Parameter::is_list() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Parameter.is_list)
  return is_list_;
}
inline void Intent_Parameter::set_is_list(bool value) {
  
  is_list_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Parameter.is_list)
}

// -------------------------------------------------------------------

// Intent_Message_Text

// repeated string text = 1;
inline int Intent_Message_Text::text_size() const {
  return text_.size();
}
inline void Intent_Message_Text::clear_text() {
  text_.Clear();
}
inline const ::std::string& Intent_Message_Text::text(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.Text.text)
  return text_.Get(index);
}
inline ::std::string* Intent_Message_Text::mutable_text(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.Text.text)
  return text_.Mutable(index);
}
inline void Intent_Message_Text::set_text(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.Text.text)
  text_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Intent_Message_Text::set_text(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.Text.text)
  text_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Intent_Message_Text::set_text(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  text_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.Text.text)
}
inline void Intent_Message_Text::set_text(int index, const char* value, size_t size) {
  text_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.Text.text)
}
inline ::std::string* Intent_Message_Text::add_text() {
  // @@protoc_insertion_point(field_add_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.Text.text)
  return text_.Add();
}
inline void Intent_Message_Text::add_text(const ::std::string& value) {
  text_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Intent.Message.Text.text)
}
#if LANG_CXX11
inline void Intent_Message_Text::add_text(::std::string&& value) {
  text_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Intent.Message.Text.text)
}
#endif
inline void Intent_Message_Text::add_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  text_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.dialogflow.v2beta1.Intent.Message.Text.text)
}
inline void Intent_Message_Text::add_text(const char* value, size_t size) {
  text_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.Text.text)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Intent_Message_Text::text() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.Intent.Message.Text.text)
  return text_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Intent_Message_Text::mutable_text() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.Intent.Message.Text.text)
  return &text_;
}

// -------------------------------------------------------------------

// Intent_Message_Image

// string image_uri = 1;
inline void Intent_Message_Image::clear_image_uri() {
  image_uri_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Message_Image::image_uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.Image.image_uri)
  return image_uri_.Get();
}
inline void Intent_Message_Image::set_image_uri(const ::std::string& value) {
  
  image_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.Image.image_uri)
}
#if LANG_CXX11
inline void Intent_Message_Image::set_image_uri(::std::string&& value) {
  
  image_uri_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Message.Image.image_uri)
}
#endif
inline void Intent_Message_Image::set_image_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  image_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.Image.image_uri)
}
inline void Intent_Message_Image::set_image_uri(const char* value,
    size_t size) {
  
  image_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.Image.image_uri)
}
inline ::std::string* Intent_Message_Image::mutable_image_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.Image.image_uri)
  return image_uri_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Message_Image::release_image_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.Image.image_uri)
  
  return image_uri_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Message_Image::set_allocated_image_uri(::std::string* image_uri) {
  if (image_uri != NULL) {
    
  } else {
    
  }
  image_uri_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image_uri,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.Image.image_uri)
}
inline ::std::string* Intent_Message_Image::unsafe_arena_release_image_uri() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.Image.image_uri)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return image_uri_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Message_Image::unsafe_arena_set_allocated_image_uri(
    ::std::string* image_uri) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (image_uri != NULL) {
    
  } else {
    
  }
  image_uri_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      image_uri, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.Image.image_uri)
}

// -------------------------------------------------------------------

// Intent_Message_QuickReplies

// string title = 1;
inline void Intent_Message_QuickReplies::clear_title() {
  title_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Message_QuickReplies::title() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.title)
  return title_.Get();
}
inline void Intent_Message_QuickReplies::set_title(const ::std::string& value) {
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.title)
}
#if LANG_CXX11
inline void Intent_Message_QuickReplies::set_title(::std::string&& value) {
  
  title_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.title)
}
#endif
inline void Intent_Message_QuickReplies::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.title)
}
inline void Intent_Message_QuickReplies::set_title(const char* value,
    size_t size) {
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.title)
}
inline ::std::string* Intent_Message_QuickReplies::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.title)
  return title_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Message_QuickReplies::release_title() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.title)
  
  return title_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Message_QuickReplies::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.title)
}
inline ::std::string* Intent_Message_QuickReplies::unsafe_arena_release_title() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.title)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return title_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Message_QuickReplies::unsafe_arena_set_allocated_title(
    ::std::string* title) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (title != NULL) {
    
  } else {
    
  }
  title_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      title, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.title)
}

// repeated string quick_replies = 2;
inline int Intent_Message_QuickReplies::quick_replies_size() const {
  return quick_replies_.size();
}
inline void Intent_Message_QuickReplies::clear_quick_replies() {
  quick_replies_.Clear();
}
inline const ::std::string& Intent_Message_QuickReplies::quick_replies(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.quick_replies)
  return quick_replies_.Get(index);
}
inline ::std::string* Intent_Message_QuickReplies::mutable_quick_replies(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.quick_replies)
  return quick_replies_.Mutable(index);
}
inline void Intent_Message_QuickReplies::set_quick_replies(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.quick_replies)
  quick_replies_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Intent_Message_QuickReplies::set_quick_replies(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.quick_replies)
  quick_replies_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Intent_Message_QuickReplies::set_quick_replies(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  quick_replies_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.quick_replies)
}
inline void Intent_Message_QuickReplies::set_quick_replies(int index, const char* value, size_t size) {
  quick_replies_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.quick_replies)
}
inline ::std::string* Intent_Message_QuickReplies::add_quick_replies() {
  // @@protoc_insertion_point(field_add_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.quick_replies)
  return quick_replies_.Add();
}
inline void Intent_Message_QuickReplies::add_quick_replies(const ::std::string& value) {
  quick_replies_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.quick_replies)
}
#if LANG_CXX11
inline void Intent_Message_QuickReplies::add_quick_replies(::std::string&& value) {
  quick_replies_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.quick_replies)
}
#endif
inline void Intent_Message_QuickReplies::add_quick_replies(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  quick_replies_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.quick_replies)
}
inline void Intent_Message_QuickReplies::add_quick_replies(const char* value, size_t size) {
  quick_replies_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.quick_replies)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Intent_Message_QuickReplies::quick_replies() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.quick_replies)
  return quick_replies_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Intent_Message_QuickReplies::mutable_quick_replies() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies.quick_replies)
  return &quick_replies_;
}

// -------------------------------------------------------------------

// Intent_Message_Card_Button

// string text = 1;
inline void Intent_Message_Card_Button::clear_text() {
  text_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Message_Card_Button::text() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.text)
  return text_.Get();
}
inline void Intent_Message_Card_Button::set_text(const ::std::string& value) {
  
  text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.text)
}
#if LANG_CXX11
inline void Intent_Message_Card_Button::set_text(::std::string&& value) {
  
  text_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.text)
}
#endif
inline void Intent_Message_Card_Button::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.text)
}
inline void Intent_Message_Card_Button::set_text(const char* value,
    size_t size) {
  
  text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.text)
}
inline ::std::string* Intent_Message_Card_Button::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.text)
  return text_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Message_Card_Button::release_text() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.text)
  
  return text_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Message_Card_Button::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.text)
}
inline ::std::string* Intent_Message_Card_Button::unsafe_arena_release_text() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.text)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return text_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Message_Card_Button::unsafe_arena_set_allocated_text(
    ::std::string* text) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (text != NULL) {
    
  } else {
    
  }
  text_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      text, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.text)
}

// string postback = 2;
inline void Intent_Message_Card_Button::clear_postback() {
  postback_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Message_Card_Button::postback() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.postback)
  return postback_.Get();
}
inline void Intent_Message_Card_Button::set_postback(const ::std::string& value) {
  
  postback_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.postback)
}
#if LANG_CXX11
inline void Intent_Message_Card_Button::set_postback(::std::string&& value) {
  
  postback_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.postback)
}
#endif
inline void Intent_Message_Card_Button::set_postback(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  postback_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.postback)
}
inline void Intent_Message_Card_Button::set_postback(const char* value,
    size_t size) {
  
  postback_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.postback)
}
inline ::std::string* Intent_Message_Card_Button::mutable_postback() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.postback)
  return postback_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Message_Card_Button::release_postback() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.postback)
  
  return postback_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Message_Card_Button::set_allocated_postback(::std::string* postback) {
  if (postback != NULL) {
    
  } else {
    
  }
  postback_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), postback,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.postback)
}
inline ::std::string* Intent_Message_Card_Button::unsafe_arena_release_postback() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.postback)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return postback_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Message_Card_Button::unsafe_arena_set_allocated_postback(
    ::std::string* postback) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (postback != NULL) {
    
  } else {
    
  }
  postback_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      postback, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button.postback)
}

// -------------------------------------------------------------------

// Intent_Message_Card

// string title = 1;
inline void Intent_Message_Card::clear_title() {
  title_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Message_Card::title() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.Card.title)
  return title_.Get();
}
inline void Intent_Message_Card::set_title(const ::std::string& value) {
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.Card.title)
}
#if LANG_CXX11
inline void Intent_Message_Card::set_title(::std::string&& value) {
  
  title_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Message.Card.title)
}
#endif
inline void Intent_Message_Card::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.Card.title)
}
inline void Intent_Message_Card::set_title(const char* value,
    size_t size) {
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.Card.title)
}
inline ::std::string* Intent_Message_Card::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.Card.title)
  return title_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Message_Card::release_title() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.Card.title)
  
  return title_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Message_Card::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.Card.title)
}
inline ::std::string* Intent_Message_Card::unsafe_arena_release_title() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.Card.title)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return title_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Message_Card::unsafe_arena_set_allocated_title(
    ::std::string* title) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (title != NULL) {
    
  } else {
    
  }
  title_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      title, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.Card.title)
}

// string subtitle = 2;
inline void Intent_Message_Card::clear_subtitle() {
  subtitle_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Message_Card::subtitle() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.Card.subtitle)
  return subtitle_.Get();
}
inline void Intent_Message_Card::set_subtitle(const ::std::string& value) {
  
  subtitle_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.Card.subtitle)
}
#if LANG_CXX11
inline void Intent_Message_Card::set_subtitle(::std::string&& value) {
  
  subtitle_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Message.Card.subtitle)
}
#endif
inline void Intent_Message_Card::set_subtitle(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  subtitle_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.Card.subtitle)
}
inline void Intent_Message_Card::set_subtitle(const char* value,
    size_t size) {
  
  subtitle_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.Card.subtitle)
}
inline ::std::string* Intent_Message_Card::mutable_subtitle() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.Card.subtitle)
  return subtitle_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Message_Card::release_subtitle() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.Card.subtitle)
  
  return subtitle_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Message_Card::set_allocated_subtitle(::std::string* subtitle) {
  if (subtitle != NULL) {
    
  } else {
    
  }
  subtitle_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subtitle,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.Card.subtitle)
}
inline ::std::string* Intent_Message_Card::unsafe_arena_release_subtitle() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.Card.subtitle)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return subtitle_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Message_Card::unsafe_arena_set_allocated_subtitle(
    ::std::string* subtitle) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (subtitle != NULL) {
    
  } else {
    
  }
  subtitle_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      subtitle, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.Card.subtitle)
}

// string image_uri = 3;
inline void Intent_Message_Card::clear_image_uri() {
  image_uri_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Message_Card::image_uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.Card.image_uri)
  return image_uri_.Get();
}
inline void Intent_Message_Card::set_image_uri(const ::std::string& value) {
  
  image_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.Card.image_uri)
}
#if LANG_CXX11
inline void Intent_Message_Card::set_image_uri(::std::string&& value) {
  
  image_uri_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Message.Card.image_uri)
}
#endif
inline void Intent_Message_Card::set_image_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  image_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.Card.image_uri)
}
inline void Intent_Message_Card::set_image_uri(const char* value,
    size_t size) {
  
  image_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.Card.image_uri)
}
inline ::std::string* Intent_Message_Card::mutable_image_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.Card.image_uri)
  return image_uri_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Message_Card::release_image_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.Card.image_uri)
  
  return image_uri_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Message_Card::set_allocated_image_uri(::std::string* image_uri) {
  if (image_uri != NULL) {
    
  } else {
    
  }
  image_uri_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image_uri,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.Card.image_uri)
}
inline ::std::string* Intent_Message_Card::unsafe_arena_release_image_uri() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.Card.image_uri)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return image_uri_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Message_Card::unsafe_arena_set_allocated_image_uri(
    ::std::string* image_uri) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (image_uri != NULL) {
    
  } else {
    
  }
  image_uri_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      image_uri, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.Card.image_uri)
}

// repeated .google.cloud.dialogflow.v2beta1.Intent.Message.Card.Button buttons = 4;
inline int Intent_Message_Card::buttons_size() const {
  return buttons_.size();
}
inline void Intent_Message_Card::clear_buttons() {
  buttons_.Clear();
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Message_Card_Button& Intent_Message_Card::buttons(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.Card.buttons)
  return buttons_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Card_Button* Intent_Message_Card::mutable_buttons(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.Card.buttons)
  return buttons_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Card_Button* Intent_Message_Card::add_buttons() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Intent.Message.Card.buttons)
  return buttons_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_Card_Button >*
Intent_Message_Card::mutable_buttons() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.Intent.Message.Card.buttons)
  return &buttons_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_Card_Button >&
Intent_Message_Card::buttons() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.Intent.Message.Card.buttons)
  return buttons_;
}

// -------------------------------------------------------------------

// Intent_Message_SimpleResponse

// string text_to_speech = 1;
inline void Intent_Message_SimpleResponse::clear_text_to_speech() {
  text_to_speech_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Message_SimpleResponse::text_to_speech() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.text_to_speech)
  return text_to_speech_.Get();
}
inline void Intent_Message_SimpleResponse::set_text_to_speech(const ::std::string& value) {
  
  text_to_speech_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.text_to_speech)
}
#if LANG_CXX11
inline void Intent_Message_SimpleResponse::set_text_to_speech(::std::string&& value) {
  
  text_to_speech_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.text_to_speech)
}
#endif
inline void Intent_Message_SimpleResponse::set_text_to_speech(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_to_speech_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.text_to_speech)
}
inline void Intent_Message_SimpleResponse::set_text_to_speech(const char* value,
    size_t size) {
  
  text_to_speech_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.text_to_speech)
}
inline ::std::string* Intent_Message_SimpleResponse::mutable_text_to_speech() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.text_to_speech)
  return text_to_speech_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Message_SimpleResponse::release_text_to_speech() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.text_to_speech)
  
  return text_to_speech_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Message_SimpleResponse::set_allocated_text_to_speech(::std::string* text_to_speech) {
  if (text_to_speech != NULL) {
    
  } else {
    
  }
  text_to_speech_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text_to_speech,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.text_to_speech)
}
inline ::std::string* Intent_Message_SimpleResponse::unsafe_arena_release_text_to_speech() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.text_to_speech)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return text_to_speech_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Message_SimpleResponse::unsafe_arena_set_allocated_text_to_speech(
    ::std::string* text_to_speech) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (text_to_speech != NULL) {
    
  } else {
    
  }
  text_to_speech_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      text_to_speech, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.text_to_speech)
}

// string ssml = 2;
inline void Intent_Message_SimpleResponse::clear_ssml() {
  ssml_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Message_SimpleResponse::ssml() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.ssml)
  return ssml_.Get();
}
inline void Intent_Message_SimpleResponse::set_ssml(const ::std::string& value) {
  
  ssml_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.ssml)
}
#if LANG_CXX11
inline void Intent_Message_SimpleResponse::set_ssml(::std::string&& value) {
  
  ssml_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.ssml)
}
#endif
inline void Intent_Message_SimpleResponse::set_ssml(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ssml_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.ssml)
}
inline void Intent_Message_SimpleResponse::set_ssml(const char* value,
    size_t size) {
  
  ssml_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.ssml)
}
inline ::std::string* Intent_Message_SimpleResponse::mutable_ssml() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.ssml)
  return ssml_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Message_SimpleResponse::release_ssml() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.ssml)
  
  return ssml_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Message_SimpleResponse::set_allocated_ssml(::std::string* ssml) {
  if (ssml != NULL) {
    
  } else {
    
  }
  ssml_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ssml,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.ssml)
}
inline ::std::string* Intent_Message_SimpleResponse::unsafe_arena_release_ssml() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.ssml)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return ssml_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Message_SimpleResponse::unsafe_arena_set_allocated_ssml(
    ::std::string* ssml) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (ssml != NULL) {
    
  } else {
    
  }
  ssml_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ssml, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.ssml)
}

// string display_text = 3;
inline void Intent_Message_SimpleResponse::clear_display_text() {
  display_text_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Message_SimpleResponse::display_text() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.display_text)
  return display_text_.Get();
}
inline void Intent_Message_SimpleResponse::set_display_text(const ::std::string& value) {
  
  display_text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.display_text)
}
#if LANG_CXX11
inline void Intent_Message_SimpleResponse::set_display_text(::std::string&& value) {
  
  display_text_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.display_text)
}
#endif
inline void Intent_Message_SimpleResponse::set_display_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  display_text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.display_text)
}
inline void Intent_Message_SimpleResponse::set_display_text(const char* value,
    size_t size) {
  
  display_text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.display_text)
}
inline ::std::string* Intent_Message_SimpleResponse::mutable_display_text() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.display_text)
  return display_text_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Message_SimpleResponse::release_display_text() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.display_text)
  
  return display_text_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Message_SimpleResponse::set_allocated_display_text(::std::string* display_text) {
  if (display_text != NULL) {
    
  } else {
    
  }
  display_text_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_text,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.display_text)
}
inline ::std::string* Intent_Message_SimpleResponse::unsafe_arena_release_display_text() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.display_text)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return display_text_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Message_SimpleResponse::unsafe_arena_set_allocated_display_text(
    ::std::string* display_text) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (display_text != NULL) {
    
  } else {
    
  }
  display_text_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      display_text, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse.display_text)
}

// -------------------------------------------------------------------

// Intent_Message_SimpleResponses

// repeated .google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponse simple_responses = 1;
inline int Intent_Message_SimpleResponses::simple_responses_size() const {
  return simple_responses_.size();
}
inline void Intent_Message_SimpleResponses::clear_simple_responses() {
  simple_responses_.Clear();
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponse& Intent_Message_SimpleResponses::simple_responses(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses.simple_responses)
  return simple_responses_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponse* Intent_Message_SimpleResponses::mutable_simple_responses(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses.simple_responses)
  return simple_responses_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponse* Intent_Message_SimpleResponses::add_simple_responses() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses.simple_responses)
  return simple_responses_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponse >*
Intent_Message_SimpleResponses::mutable_simple_responses() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses.simple_responses)
  return &simple_responses_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponse >&
Intent_Message_SimpleResponses::simple_responses() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses.simple_responses)
  return simple_responses_;
}

// -------------------------------------------------------------------

// Intent_Message_BasicCard_Button_OpenUriAction

// string uri = 1;
inline void Intent_Message_BasicCard_Button_OpenUriAction::clear_uri() {
  uri_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Message_BasicCard_Button_OpenUriAction::uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction.uri)
  return uri_.Get();
}
inline void Intent_Message_BasicCard_Button_OpenUriAction::set_uri(const ::std::string& value) {
  
  uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction.uri)
}
#if LANG_CXX11
inline void Intent_Message_BasicCard_Button_OpenUriAction::set_uri(::std::string&& value) {
  
  uri_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction.uri)
}
#endif
inline void Intent_Message_BasicCard_Button_OpenUriAction::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction.uri)
}
inline void Intent_Message_BasicCard_Button_OpenUriAction::set_uri(const char* value,
    size_t size) {
  
  uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction.uri)
}
inline ::std::string* Intent_Message_BasicCard_Button_OpenUriAction::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction.uri)
  return uri_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Message_BasicCard_Button_OpenUriAction::release_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction.uri)
  
  return uri_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Message_BasicCard_Button_OpenUriAction::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction.uri)
}
inline ::std::string* Intent_Message_BasicCard_Button_OpenUriAction::unsafe_arena_release_uri() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction.uri)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return uri_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Message_BasicCard_Button_OpenUriAction::unsafe_arena_set_allocated_uri(
    ::std::string* uri) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      uri, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction.uri)
}

// -------------------------------------------------------------------

// Intent_Message_BasicCard_Button

// string title = 1;
inline void Intent_Message_BasicCard_Button::clear_title() {
  title_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Message_BasicCard_Button::title() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.title)
  return title_.Get();
}
inline void Intent_Message_BasicCard_Button::set_title(const ::std::string& value) {
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.title)
}
#if LANG_CXX11
inline void Intent_Message_BasicCard_Button::set_title(::std::string&& value) {
  
  title_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.title)
}
#endif
inline void Intent_Message_BasicCard_Button::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.title)
}
inline void Intent_Message_BasicCard_Button::set_title(const char* value,
    size_t size) {
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.title)
}
inline ::std::string* Intent_Message_BasicCard_Button::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.title)
  return title_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Message_BasicCard_Button::release_title() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.title)
  
  return title_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Message_BasicCard_Button::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.title)
}
inline ::std::string* Intent_Message_BasicCard_Button::unsafe_arena_release_title() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.title)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return title_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Message_BasicCard_Button::unsafe_arena_set_allocated_title(
    ::std::string* title) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (title != NULL) {
    
  } else {
    
  }
  title_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      title, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.title)
}

// .google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.OpenUriAction open_uri_action = 2;
inline bool Intent_Message_BasicCard_Button::has_open_uri_action() const {
  return this != internal_default_instance() && open_uri_action_ != NULL;
}
inline void Intent_Message_BasicCard_Button::clear_open_uri_action() {
  if (GetArenaNoVirtual() == NULL && open_uri_action_ != NULL) {
    delete open_uri_action_;
  }
  open_uri_action_ = NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction& Intent_Message_BasicCard_Button::open_uri_action() const {
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction* p = open_uri_action_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.open_uri_action)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction*>(
      &::google::cloud::dialogflow::v2beta1::_Intent_Message_BasicCard_Button_OpenUriAction_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction* Intent_Message_BasicCard_Button::release_open_uri_action() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.open_uri_action)
  
  ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction* temp = open_uri_action_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  open_uri_action_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction* Intent_Message_BasicCard_Button::unsafe_arena_release_open_uri_action() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.open_uri_action)
  
  ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction* temp = open_uri_action_;
  open_uri_action_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction* Intent_Message_BasicCard_Button::mutable_open_uri_action() {
  
  if (open_uri_action_ == NULL) {
    _slow_mutable_open_uri_action();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.open_uri_action)
  return open_uri_action_;
}
inline void Intent_Message_BasicCard_Button::set_allocated_open_uri_action(::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button_OpenUriAction* open_uri_action) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete open_uri_action_;
  }
  if (open_uri_action) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(open_uri_action);
    if (message_arena != submessage_arena) {
      open_uri_action = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, open_uri_action, submessage_arena);
    }
    
  } else {
    
  }
  open_uri_action_ = open_uri_action;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button.open_uri_action)
}

// -------------------------------------------------------------------

// Intent_Message_BasicCard

// string title = 1;
inline void Intent_Message_BasicCard::clear_title() {
  title_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Message_BasicCard::title() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.title)
  return title_.Get();
}
inline void Intent_Message_BasicCard::set_title(const ::std::string& value) {
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.title)
}
#if LANG_CXX11
inline void Intent_Message_BasicCard::set_title(::std::string&& value) {
  
  title_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.title)
}
#endif
inline void Intent_Message_BasicCard::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.title)
}
inline void Intent_Message_BasicCard::set_title(const char* value,
    size_t size) {
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.title)
}
inline ::std::string* Intent_Message_BasicCard::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.title)
  return title_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Message_BasicCard::release_title() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.title)
  
  return title_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Message_BasicCard::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.title)
}
inline ::std::string* Intent_Message_BasicCard::unsafe_arena_release_title() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.title)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return title_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Message_BasicCard::unsafe_arena_set_allocated_title(
    ::std::string* title) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (title != NULL) {
    
  } else {
    
  }
  title_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      title, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.title)
}

// string subtitle = 2;
inline void Intent_Message_BasicCard::clear_subtitle() {
  subtitle_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Message_BasicCard::subtitle() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.subtitle)
  return subtitle_.Get();
}
inline void Intent_Message_BasicCard::set_subtitle(const ::std::string& value) {
  
  subtitle_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.subtitle)
}
#if LANG_CXX11
inline void Intent_Message_BasicCard::set_subtitle(::std::string&& value) {
  
  subtitle_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.subtitle)
}
#endif
inline void Intent_Message_BasicCard::set_subtitle(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  subtitle_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.subtitle)
}
inline void Intent_Message_BasicCard::set_subtitle(const char* value,
    size_t size) {
  
  subtitle_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.subtitle)
}
inline ::std::string* Intent_Message_BasicCard::mutable_subtitle() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.subtitle)
  return subtitle_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Message_BasicCard::release_subtitle() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.subtitle)
  
  return subtitle_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Message_BasicCard::set_allocated_subtitle(::std::string* subtitle) {
  if (subtitle != NULL) {
    
  } else {
    
  }
  subtitle_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subtitle,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.subtitle)
}
inline ::std::string* Intent_Message_BasicCard::unsafe_arena_release_subtitle() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.subtitle)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return subtitle_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Message_BasicCard::unsafe_arena_set_allocated_subtitle(
    ::std::string* subtitle) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (subtitle != NULL) {
    
  } else {
    
  }
  subtitle_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      subtitle, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.subtitle)
}

// string formatted_text = 3;
inline void Intent_Message_BasicCard::clear_formatted_text() {
  formatted_text_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Message_BasicCard::formatted_text() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.formatted_text)
  return formatted_text_.Get();
}
inline void Intent_Message_BasicCard::set_formatted_text(const ::std::string& value) {
  
  formatted_text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.formatted_text)
}
#if LANG_CXX11
inline void Intent_Message_BasicCard::set_formatted_text(::std::string&& value) {
  
  formatted_text_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.formatted_text)
}
#endif
inline void Intent_Message_BasicCard::set_formatted_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  formatted_text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.formatted_text)
}
inline void Intent_Message_BasicCard::set_formatted_text(const char* value,
    size_t size) {
  
  formatted_text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.formatted_text)
}
inline ::std::string* Intent_Message_BasicCard::mutable_formatted_text() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.formatted_text)
  return formatted_text_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Message_BasicCard::release_formatted_text() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.formatted_text)
  
  return formatted_text_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Message_BasicCard::set_allocated_formatted_text(::std::string* formatted_text) {
  if (formatted_text != NULL) {
    
  } else {
    
  }
  formatted_text_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), formatted_text,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.formatted_text)
}
inline ::std::string* Intent_Message_BasicCard::unsafe_arena_release_formatted_text() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.formatted_text)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return formatted_text_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Message_BasicCard::unsafe_arena_set_allocated_formatted_text(
    ::std::string* formatted_text) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (formatted_text != NULL) {
    
  } else {
    
  }
  formatted_text_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      formatted_text, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.formatted_text)
}

// .google.cloud.dialogflow.v2beta1.Intent.Message.Image image = 4;
inline bool Intent_Message_BasicCard::has_image() const {
  return this != internal_default_instance() && image_ != NULL;
}
inline void Intent_Message_BasicCard::clear_image() {
  if (GetArenaNoVirtual() == NULL && image_ != NULL) {
    delete image_;
  }
  image_ = NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Message_Image& Intent_Message_BasicCard::image() const {
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* p = image_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.image)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::Intent_Message_Image*>(
      &::google::cloud::dialogflow::v2beta1::_Intent_Message_Image_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* Intent_Message_BasicCard::release_image() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.image)
  
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* temp = image_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  image_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* Intent_Message_BasicCard::unsafe_arena_release_image() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.image)
  
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* temp = image_;
  image_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* Intent_Message_BasicCard::mutable_image() {
  
  if (image_ == NULL) {
    _slow_mutable_image();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.image)
  return image_;
}
inline void Intent_Message_BasicCard::set_allocated_image(::google::cloud::dialogflow::v2beta1::Intent_Message_Image* image) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete image_;
  }
  if (image) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(image);
    if (message_arena != submessage_arena) {
      image = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, image, submessage_arena);
    }
    
  } else {
    
  }
  image_ = image;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.image)
}

// repeated .google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.Button buttons = 5;
inline int Intent_Message_BasicCard::buttons_size() const {
  return buttons_.size();
}
inline void Intent_Message_BasicCard::clear_buttons() {
  buttons_.Clear();
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button& Intent_Message_BasicCard::buttons(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.buttons)
  return buttons_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button* Intent_Message_BasicCard::mutable_buttons(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.buttons)
  return buttons_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button* Intent_Message_BasicCard::add_buttons() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.buttons)
  return buttons_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button >*
Intent_Message_BasicCard::mutable_buttons() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.buttons)
  return &buttons_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard_Button >&
Intent_Message_BasicCard::buttons() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard.buttons)
  return buttons_;
}

// -------------------------------------------------------------------

// Intent_Message_Suggestion

// string title = 1;
inline void Intent_Message_Suggestion::clear_title() {
  title_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Message_Suggestion::title() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion.title)
  return title_.Get();
}
inline void Intent_Message_Suggestion::set_title(const ::std::string& value) {
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion.title)
}
#if LANG_CXX11
inline void Intent_Message_Suggestion::set_title(::std::string&& value) {
  
  title_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion.title)
}
#endif
inline void Intent_Message_Suggestion::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion.title)
}
inline void Intent_Message_Suggestion::set_title(const char* value,
    size_t size) {
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion.title)
}
inline ::std::string* Intent_Message_Suggestion::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion.title)
  return title_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Message_Suggestion::release_title() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion.title)
  
  return title_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Message_Suggestion::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion.title)
}
inline ::std::string* Intent_Message_Suggestion::unsafe_arena_release_title() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion.title)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return title_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Message_Suggestion::unsafe_arena_set_allocated_title(
    ::std::string* title) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (title != NULL) {
    
  } else {
    
  }
  title_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      title, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion.title)
}

// -------------------------------------------------------------------

// Intent_Message_Suggestions

// repeated .google.cloud.dialogflow.v2beta1.Intent.Message.Suggestion suggestions = 1;
inline int Intent_Message_Suggestions::suggestions_size() const {
  return suggestions_.size();
}
inline void Intent_Message_Suggestions::clear_suggestions() {
  suggestions_.Clear();
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestion& Intent_Message_Suggestions::suggestions(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions.suggestions)
  return suggestions_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestion* Intent_Message_Suggestions::mutable_suggestions(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions.suggestions)
  return suggestions_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestion* Intent_Message_Suggestions::add_suggestions() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions.suggestions)
  return suggestions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestion >*
Intent_Message_Suggestions::mutable_suggestions() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions.suggestions)
  return &suggestions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestion >&
Intent_Message_Suggestions::suggestions() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions.suggestions)
  return suggestions_;
}

// -------------------------------------------------------------------

// Intent_Message_LinkOutSuggestion

// string destination_name = 1;
inline void Intent_Message_LinkOutSuggestion::clear_destination_name() {
  destination_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Message_LinkOutSuggestion::destination_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.destination_name)
  return destination_name_.Get();
}
inline void Intent_Message_LinkOutSuggestion::set_destination_name(const ::std::string& value) {
  
  destination_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.destination_name)
}
#if LANG_CXX11
inline void Intent_Message_LinkOutSuggestion::set_destination_name(::std::string&& value) {
  
  destination_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.destination_name)
}
#endif
inline void Intent_Message_LinkOutSuggestion::set_destination_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  destination_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.destination_name)
}
inline void Intent_Message_LinkOutSuggestion::set_destination_name(const char* value,
    size_t size) {
  
  destination_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.destination_name)
}
inline ::std::string* Intent_Message_LinkOutSuggestion::mutable_destination_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.destination_name)
  return destination_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Message_LinkOutSuggestion::release_destination_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.destination_name)
  
  return destination_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Message_LinkOutSuggestion::set_allocated_destination_name(::std::string* destination_name) {
  if (destination_name != NULL) {
    
  } else {
    
  }
  destination_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), destination_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.destination_name)
}
inline ::std::string* Intent_Message_LinkOutSuggestion::unsafe_arena_release_destination_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.destination_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return destination_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Message_LinkOutSuggestion::unsafe_arena_set_allocated_destination_name(
    ::std::string* destination_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (destination_name != NULL) {
    
  } else {
    
  }
  destination_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      destination_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.destination_name)
}

// string uri = 2;
inline void Intent_Message_LinkOutSuggestion::clear_uri() {
  uri_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Message_LinkOutSuggestion::uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.uri)
  return uri_.Get();
}
inline void Intent_Message_LinkOutSuggestion::set_uri(const ::std::string& value) {
  
  uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.uri)
}
#if LANG_CXX11
inline void Intent_Message_LinkOutSuggestion::set_uri(::std::string&& value) {
  
  uri_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.uri)
}
#endif
inline void Intent_Message_LinkOutSuggestion::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.uri)
}
inline void Intent_Message_LinkOutSuggestion::set_uri(const char* value,
    size_t size) {
  
  uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.uri)
}
inline ::std::string* Intent_Message_LinkOutSuggestion::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.uri)
  return uri_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Message_LinkOutSuggestion::release_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.uri)
  
  return uri_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Message_LinkOutSuggestion::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.uri)
}
inline ::std::string* Intent_Message_LinkOutSuggestion::unsafe_arena_release_uri() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.uri)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return uri_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Message_LinkOutSuggestion::unsafe_arena_set_allocated_uri(
    ::std::string* uri) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      uri, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion.uri)
}

// -------------------------------------------------------------------

// Intent_Message_ListSelect_Item

// .google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo info = 1;
inline bool Intent_Message_ListSelect_Item::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void Intent_Message_ListSelect_Item::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo& Intent_Message_ListSelect_Item::info() const {
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* p = info_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.info)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo*>(
      &::google::cloud::dialogflow::v2beta1::_Intent_Message_SelectItemInfo_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* Intent_Message_ListSelect_Item::release_info() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.info)
  
  ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* temp = info_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  info_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* Intent_Message_ListSelect_Item::unsafe_arena_release_info() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.info)
  
  ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* Intent_Message_ListSelect_Item::mutable_info() {
  
  if (info_ == NULL) {
    _slow_mutable_info();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.info)
  return info_;
}
inline void Intent_Message_ListSelect_Item::set_allocated_info(::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete info_;
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(info);
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    
  } else {
    
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.info)
}

// string title = 2;
inline void Intent_Message_ListSelect_Item::clear_title() {
  title_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Message_ListSelect_Item::title() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.title)
  return title_.Get();
}
inline void Intent_Message_ListSelect_Item::set_title(const ::std::string& value) {
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.title)
}
#if LANG_CXX11
inline void Intent_Message_ListSelect_Item::set_title(::std::string&& value) {
  
  title_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.title)
}
#endif
inline void Intent_Message_ListSelect_Item::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.title)
}
inline void Intent_Message_ListSelect_Item::set_title(const char* value,
    size_t size) {
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.title)
}
inline ::std::string* Intent_Message_ListSelect_Item::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.title)
  return title_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Message_ListSelect_Item::release_title() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.title)
  
  return title_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Message_ListSelect_Item::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.title)
}
inline ::std::string* Intent_Message_ListSelect_Item::unsafe_arena_release_title() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.title)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return title_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Message_ListSelect_Item::unsafe_arena_set_allocated_title(
    ::std::string* title) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (title != NULL) {
    
  } else {
    
  }
  title_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      title, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.title)
}

// string description = 3;
inline void Intent_Message_ListSelect_Item::clear_description() {
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Message_ListSelect_Item::description() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.description)
  return description_.Get();
}
inline void Intent_Message_ListSelect_Item::set_description(const ::std::string& value) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.description)
}
#if LANG_CXX11
inline void Intent_Message_ListSelect_Item::set_description(::std::string&& value) {
  
  description_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.description)
}
#endif
inline void Intent_Message_ListSelect_Item::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.description)
}
inline void Intent_Message_ListSelect_Item::set_description(const char* value,
    size_t size) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.description)
}
inline ::std::string* Intent_Message_ListSelect_Item::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.description)
  return description_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Message_ListSelect_Item::release_description() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.description)
  
  return description_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Message_ListSelect_Item::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.description)
}
inline ::std::string* Intent_Message_ListSelect_Item::unsafe_arena_release_description() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.description)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return description_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Message_ListSelect_Item::unsafe_arena_set_allocated_description(
    ::std::string* description) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (description != NULL) {
    
  } else {
    
  }
  description_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      description, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.description)
}

// .google.cloud.dialogflow.v2beta1.Intent.Message.Image image = 4;
inline bool Intent_Message_ListSelect_Item::has_image() const {
  return this != internal_default_instance() && image_ != NULL;
}
inline void Intent_Message_ListSelect_Item::clear_image() {
  if (GetArenaNoVirtual() == NULL && image_ != NULL) {
    delete image_;
  }
  image_ = NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Message_Image& Intent_Message_ListSelect_Item::image() const {
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* p = image_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.image)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::Intent_Message_Image*>(
      &::google::cloud::dialogflow::v2beta1::_Intent_Message_Image_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* Intent_Message_ListSelect_Item::release_image() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.image)
  
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* temp = image_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  image_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* Intent_Message_ListSelect_Item::unsafe_arena_release_image() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.image)
  
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* temp = image_;
  image_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* Intent_Message_ListSelect_Item::mutable_image() {
  
  if (image_ == NULL) {
    _slow_mutable_image();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.image)
  return image_;
}
inline void Intent_Message_ListSelect_Item::set_allocated_image(::google::cloud::dialogflow::v2beta1::Intent_Message_Image* image) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete image_;
  }
  if (image) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(image);
    if (message_arena != submessage_arena) {
      image = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, image, submessage_arena);
    }
    
  } else {
    
  }
  image_ = image;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item.image)
}

// -------------------------------------------------------------------

// Intent_Message_ListSelect

// string title = 1;
inline void Intent_Message_ListSelect::clear_title() {
  title_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Message_ListSelect::title() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.title)
  return title_.Get();
}
inline void Intent_Message_ListSelect::set_title(const ::std::string& value) {
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.title)
}
#if LANG_CXX11
inline void Intent_Message_ListSelect::set_title(::std::string&& value) {
  
  title_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.title)
}
#endif
inline void Intent_Message_ListSelect::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.title)
}
inline void Intent_Message_ListSelect::set_title(const char* value,
    size_t size) {
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.title)
}
inline ::std::string* Intent_Message_ListSelect::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.title)
  return title_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Message_ListSelect::release_title() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.title)
  
  return title_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Message_ListSelect::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.title)
}
inline ::std::string* Intent_Message_ListSelect::unsafe_arena_release_title() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.title)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return title_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Message_ListSelect::unsafe_arena_set_allocated_title(
    ::std::string* title) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (title != NULL) {
    
  } else {
    
  }
  title_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      title, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.title)
}

// repeated .google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.Item items = 2;
inline int Intent_Message_ListSelect::items_size() const {
  return items_.size();
}
inline void Intent_Message_ListSelect::clear_items() {
  items_.Clear();
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect_Item& Intent_Message_ListSelect::items(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.items)
  return items_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect_Item* Intent_Message_ListSelect::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.items)
  return items_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect_Item* Intent_Message_ListSelect::add_items() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect_Item >*
Intent_Message_ListSelect::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect_Item >&
Intent_Message_ListSelect::items() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect.items)
  return items_;
}

// -------------------------------------------------------------------

// Intent_Message_CarouselSelect_Item

// .google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo info = 1;
inline bool Intent_Message_CarouselSelect_Item::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void Intent_Message_CarouselSelect_Item::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo& Intent_Message_CarouselSelect_Item::info() const {
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* p = info_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.info)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo*>(
      &::google::cloud::dialogflow::v2beta1::_Intent_Message_SelectItemInfo_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* Intent_Message_CarouselSelect_Item::release_info() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.info)
  
  ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* temp = info_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  info_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* Intent_Message_CarouselSelect_Item::unsafe_arena_release_info() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.info)
  
  ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* Intent_Message_CarouselSelect_Item::mutable_info() {
  
  if (info_ == NULL) {
    _slow_mutable_info();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.info)
  return info_;
}
inline void Intent_Message_CarouselSelect_Item::set_allocated_info(::google::cloud::dialogflow::v2beta1::Intent_Message_SelectItemInfo* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete info_;
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(info);
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    
  } else {
    
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.info)
}

// string title = 2;
inline void Intent_Message_CarouselSelect_Item::clear_title() {
  title_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Message_CarouselSelect_Item::title() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.title)
  return title_.Get();
}
inline void Intent_Message_CarouselSelect_Item::set_title(const ::std::string& value) {
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.title)
}
#if LANG_CXX11
inline void Intent_Message_CarouselSelect_Item::set_title(::std::string&& value) {
  
  title_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.title)
}
#endif
inline void Intent_Message_CarouselSelect_Item::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.title)
}
inline void Intent_Message_CarouselSelect_Item::set_title(const char* value,
    size_t size) {
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.title)
}
inline ::std::string* Intent_Message_CarouselSelect_Item::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.title)
  return title_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Message_CarouselSelect_Item::release_title() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.title)
  
  return title_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Message_CarouselSelect_Item::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.title)
}
inline ::std::string* Intent_Message_CarouselSelect_Item::unsafe_arena_release_title() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.title)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return title_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Message_CarouselSelect_Item::unsafe_arena_set_allocated_title(
    ::std::string* title) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (title != NULL) {
    
  } else {
    
  }
  title_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      title, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.title)
}

// string description = 3;
inline void Intent_Message_CarouselSelect_Item::clear_description() {
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Message_CarouselSelect_Item::description() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.description)
  return description_.Get();
}
inline void Intent_Message_CarouselSelect_Item::set_description(const ::std::string& value) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.description)
}
#if LANG_CXX11
inline void Intent_Message_CarouselSelect_Item::set_description(::std::string&& value) {
  
  description_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.description)
}
#endif
inline void Intent_Message_CarouselSelect_Item::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.description)
}
inline void Intent_Message_CarouselSelect_Item::set_description(const char* value,
    size_t size) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.description)
}
inline ::std::string* Intent_Message_CarouselSelect_Item::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.description)
  return description_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Message_CarouselSelect_Item::release_description() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.description)
  
  return description_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Message_CarouselSelect_Item::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.description)
}
inline ::std::string* Intent_Message_CarouselSelect_Item::unsafe_arena_release_description() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.description)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return description_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Message_CarouselSelect_Item::unsafe_arena_set_allocated_description(
    ::std::string* description) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (description != NULL) {
    
  } else {
    
  }
  description_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      description, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.description)
}

// .google.cloud.dialogflow.v2beta1.Intent.Message.Image image = 4;
inline bool Intent_Message_CarouselSelect_Item::has_image() const {
  return this != internal_default_instance() && image_ != NULL;
}
inline void Intent_Message_CarouselSelect_Item::clear_image() {
  if (GetArenaNoVirtual() == NULL && image_ != NULL) {
    delete image_;
  }
  image_ = NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Message_Image& Intent_Message_CarouselSelect_Item::image() const {
  const ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* p = image_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.image)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::Intent_Message_Image*>(
      &::google::cloud::dialogflow::v2beta1::_Intent_Message_Image_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* Intent_Message_CarouselSelect_Item::release_image() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.image)
  
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* temp = image_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  image_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* Intent_Message_CarouselSelect_Item::unsafe_arena_release_image() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.image)
  
  ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* temp = image_;
  image_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* Intent_Message_CarouselSelect_Item::mutable_image() {
  
  if (image_ == NULL) {
    _slow_mutable_image();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.image)
  return image_;
}
inline void Intent_Message_CarouselSelect_Item::set_allocated_image(::google::cloud::dialogflow::v2beta1::Intent_Message_Image* image) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete image_;
  }
  if (image) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(image);
    if (message_arena != submessage_arena) {
      image = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, image, submessage_arena);
    }
    
  } else {
    
  }
  image_ = image;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item.image)
}

// -------------------------------------------------------------------

// Intent_Message_CarouselSelect

// repeated .google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.Item items = 1;
inline int Intent_Message_CarouselSelect::items_size() const {
  return items_.size();
}
inline void Intent_Message_CarouselSelect::clear_items() {
  items_.Clear();
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect_Item& Intent_Message_CarouselSelect::items(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.items)
  return items_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect_Item* Intent_Message_CarouselSelect::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.items)
  return items_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect_Item* Intent_Message_CarouselSelect::add_items() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect_Item >*
Intent_Message_CarouselSelect::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect_Item >&
Intent_Message_CarouselSelect::items() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect.items)
  return items_;
}

// -------------------------------------------------------------------

// Intent_Message_SelectItemInfo

// string key = 1;
inline void Intent_Message_SelectItemInfo::clear_key() {
  key_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_Message_SelectItemInfo::key() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.key)
  return key_.Get();
}
inline void Intent_Message_SelectItemInfo::set_key(const ::std::string& value) {
  
  key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.key)
}
#if LANG_CXX11
inline void Intent_Message_SelectItemInfo::set_key(::std::string&& value) {
  
  key_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.key)
}
#endif
inline void Intent_Message_SelectItemInfo::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.key)
}
inline void Intent_Message_SelectItemInfo::set_key(const char* value,
    size_t size) {
  
  key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.key)
}
inline ::std::string* Intent_Message_SelectItemInfo::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.key)
  return key_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_Message_SelectItemInfo::release_key() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.key)
  
  return key_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_Message_SelectItemInfo::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.key)
}
inline ::std::string* Intent_Message_SelectItemInfo::unsafe_arena_release_key() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.key)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return key_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_Message_SelectItemInfo::unsafe_arena_set_allocated_key(
    ::std::string* key) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (key != NULL) {
    
  } else {
    
  }
  key_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      key, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.key)
}

// repeated string synonyms = 2;
inline int Intent_Message_SelectItemInfo::synonyms_size() const {
  return synonyms_.size();
}
inline void Intent_Message_SelectItemInfo::clear_synonyms() {
  synonyms_.Clear();
}
inline const ::std::string& Intent_Message_SelectItemInfo::synonyms(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.synonyms)
  return synonyms_.Get(index);
}
inline ::std::string* Intent_Message_SelectItemInfo::mutable_synonyms(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.synonyms)
  return synonyms_.Mutable(index);
}
inline void Intent_Message_SelectItemInfo::set_synonyms(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.synonyms)
  synonyms_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Intent_Message_SelectItemInfo::set_synonyms(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.synonyms)
  synonyms_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Intent_Message_SelectItemInfo::set_synonyms(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  synonyms_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.synonyms)
}
inline void Intent_Message_SelectItemInfo::set_synonyms(int index, const char* value, size_t size) {
  synonyms_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.synonyms)
}
inline ::std::string* Intent_Message_SelectItemInfo::add_synonyms() {
  // @@protoc_insertion_point(field_add_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.synonyms)
  return synonyms_.Add();
}
inline void Intent_Message_SelectItemInfo::add_synonyms(const ::std::string& value) {
  synonyms_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.synonyms)
}
#if LANG_CXX11
inline void Intent_Message_SelectItemInfo::add_synonyms(::std::string&& value) {
  synonyms_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.synonyms)
}
#endif
inline void Intent_Message_SelectItemInfo::add_synonyms(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  synonyms_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.synonyms)
}
inline void Intent_Message_SelectItemInfo::add_synonyms(const char* value, size_t size) {
  synonyms_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.synonyms)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Intent_Message_SelectItemInfo::synonyms() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.synonyms)
  return synonyms_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Intent_Message_SelectItemInfo::mutable_synonyms() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.Intent.Message.SelectItemInfo.synonyms)
  return &synonyms_;
}

// -------------------------------------------------------------------

// Intent_Message

// .google.cloud.dialogflow.v2beta1.Intent.Message.Text text = 1;
inline bool Intent_Message::has_text() const {
  return message_case() == kText;
}
inline void Intent_Message::set_has_text() {
  _oneof_case_[0] = kText;
}
inline void Intent_Message::clear_text() {
  if (has_text()) {
    if (GetArenaNoVirtual() == NULL) {
      delete message_.text_;
    }
    clear_has_message();
  }
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Text* Intent_Message::release_text() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.text)
  if (has_text()) {
    clear_has_message();
      ::google::cloud::dialogflow::v2beta1::Intent_Message_Text* temp = message_.text_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    message_.text_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Message_Text& Intent_Message::text() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.text)
  return has_text()
      ? *message_.text_
      : *reinterpret_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_Text*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_Text_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Text* Intent_Message::unsafe_arena_release_text() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.text)
  if (has_text()) {
    clear_has_message();
    ::google::cloud::dialogflow::v2beta1::Intent_Message_Text* temp = message_.text_;
    message_.text_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Intent_Message::unsafe_arena_set_allocated_text(::google::cloud::dialogflow::v2beta1::Intent_Message_Text* text) {
  clear_message();
  if (text) {
    set_has_text();
    message_.text_ = text;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.text)
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Text* Intent_Message::mutable_text() {
  if (!has_text()) {
    clear_message();
    set_has_text();
    message_.text_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::Intent_Message_Text >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.text)
  return message_.text_;
}

// .google.cloud.dialogflow.v2beta1.Intent.Message.Image image = 2;
inline bool Intent_Message::has_image() const {
  return message_case() == kImage;
}
inline void Intent_Message::set_has_image() {
  _oneof_case_[0] = kImage;
}
inline void Intent_Message::clear_image() {
  if (has_image()) {
    if (GetArenaNoVirtual() == NULL) {
      delete message_.image_;
    }
    clear_has_message();
  }
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* Intent_Message::release_image() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.image)
  if (has_image()) {
    clear_has_message();
      ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* temp = message_.image_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    message_.image_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Message_Image& Intent_Message::image() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.image)
  return has_image()
      ? *message_.image_
      : *reinterpret_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_Image*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_Image_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* Intent_Message::unsafe_arena_release_image() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.image)
  if (has_image()) {
    clear_has_message();
    ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* temp = message_.image_;
    message_.image_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Intent_Message::unsafe_arena_set_allocated_image(::google::cloud::dialogflow::v2beta1::Intent_Message_Image* image) {
  clear_message();
  if (image) {
    set_has_image();
    message_.image_ = image;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.image)
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Image* Intent_Message::mutable_image() {
  if (!has_image()) {
    clear_message();
    set_has_image();
    message_.image_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::Intent_Message_Image >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.image)
  return message_.image_;
}

// .google.cloud.dialogflow.v2beta1.Intent.Message.QuickReplies quick_replies = 3;
inline bool Intent_Message::has_quick_replies() const {
  return message_case() == kQuickReplies;
}
inline void Intent_Message::set_has_quick_replies() {
  _oneof_case_[0] = kQuickReplies;
}
inline void Intent_Message::clear_quick_replies() {
  if (has_quick_replies()) {
    if (GetArenaNoVirtual() == NULL) {
      delete message_.quick_replies_;
    }
    clear_has_message();
  }
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies* Intent_Message::release_quick_replies() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.quick_replies)
  if (has_quick_replies()) {
    clear_has_message();
      ::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies* temp = message_.quick_replies_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    message_.quick_replies_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies& Intent_Message::quick_replies() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.quick_replies)
  return has_quick_replies()
      ? *message_.quick_replies_
      : *reinterpret_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_QuickReplies_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies* Intent_Message::unsafe_arena_release_quick_replies() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.quick_replies)
  if (has_quick_replies()) {
    clear_has_message();
    ::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies* temp = message_.quick_replies_;
    message_.quick_replies_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Intent_Message::unsafe_arena_set_allocated_quick_replies(::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies* quick_replies) {
  clear_message();
  if (quick_replies) {
    set_has_quick_replies();
    message_.quick_replies_ = quick_replies;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.quick_replies)
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies* Intent_Message::mutable_quick_replies() {
  if (!has_quick_replies()) {
    clear_message();
    set_has_quick_replies();
    message_.quick_replies_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::Intent_Message_QuickReplies >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.quick_replies)
  return message_.quick_replies_;
}

// .google.cloud.dialogflow.v2beta1.Intent.Message.Card card = 4;
inline bool Intent_Message::has_card() const {
  return message_case() == kCard;
}
inline void Intent_Message::set_has_card() {
  _oneof_case_[0] = kCard;
}
inline void Intent_Message::clear_card() {
  if (has_card()) {
    if (GetArenaNoVirtual() == NULL) {
      delete message_.card_;
    }
    clear_has_message();
  }
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Card* Intent_Message::release_card() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.card)
  if (has_card()) {
    clear_has_message();
      ::google::cloud::dialogflow::v2beta1::Intent_Message_Card* temp = message_.card_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    message_.card_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Message_Card& Intent_Message::card() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.card)
  return has_card()
      ? *message_.card_
      : *reinterpret_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_Card*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_Card_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Card* Intent_Message::unsafe_arena_release_card() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.card)
  if (has_card()) {
    clear_has_message();
    ::google::cloud::dialogflow::v2beta1::Intent_Message_Card* temp = message_.card_;
    message_.card_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Intent_Message::unsafe_arena_set_allocated_card(::google::cloud::dialogflow::v2beta1::Intent_Message_Card* card) {
  clear_message();
  if (card) {
    set_has_card();
    message_.card_ = card;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.card)
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Card* Intent_Message::mutable_card() {
  if (!has_card()) {
    clear_message();
    set_has_card();
    message_.card_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::Intent_Message_Card >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.card)
  return message_.card_;
}

// .google.protobuf.Struct payload = 5;
inline bool Intent_Message::has_payload() const {
  return message_case() == kPayload;
}
inline void Intent_Message::set_has_payload() {
  _oneof_case_[0] = kPayload;
}
inline ::google::protobuf::Struct* Intent_Message::release_payload() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.payload)
  if (has_payload()) {
    clear_has_message();
      ::google::protobuf::Struct* temp = message_.payload_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    message_.payload_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::protobuf::Struct& Intent_Message::payload() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.payload)
  return has_payload()
      ? *message_.payload_
      : *reinterpret_cast< ::google::protobuf::Struct*>(&::google::protobuf::_Struct_default_instance_);
}
inline ::google::protobuf::Struct* Intent_Message::unsafe_arena_release_payload() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.payload)
  if (has_payload()) {
    clear_has_message();
    ::google::protobuf::Struct* temp = message_.payload_;
    message_.payload_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Intent_Message::unsafe_arena_set_allocated_payload(::google::protobuf::Struct* payload) {
  clear_message();
  if (payload) {
    set_has_payload();
    message_.payload_ = payload;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.payload)
}
inline ::google::protobuf::Struct* Intent_Message::mutable_payload() {
  if (!has_payload()) {
    clear_message();
    set_has_payload();
    message_.payload_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Struct >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.payload)
  return message_.payload_;
}

// .google.cloud.dialogflow.v2beta1.Intent.Message.SimpleResponses simple_responses = 7;
inline bool Intent_Message::has_simple_responses() const {
  return message_case() == kSimpleResponses;
}
inline void Intent_Message::set_has_simple_responses() {
  _oneof_case_[0] = kSimpleResponses;
}
inline void Intent_Message::clear_simple_responses() {
  if (has_simple_responses()) {
    if (GetArenaNoVirtual() == NULL) {
      delete message_.simple_responses_;
    }
    clear_has_message();
  }
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses* Intent_Message::release_simple_responses() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.simple_responses)
  if (has_simple_responses()) {
    clear_has_message();
      ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses* temp = message_.simple_responses_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    message_.simple_responses_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses& Intent_Message::simple_responses() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.simple_responses)
  return has_simple_responses()
      ? *message_.simple_responses_
      : *reinterpret_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_SimpleResponses_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses* Intent_Message::unsafe_arena_release_simple_responses() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.simple_responses)
  if (has_simple_responses()) {
    clear_has_message();
    ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses* temp = message_.simple_responses_;
    message_.simple_responses_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Intent_Message::unsafe_arena_set_allocated_simple_responses(::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses* simple_responses) {
  clear_message();
  if (simple_responses) {
    set_has_simple_responses();
    message_.simple_responses_ = simple_responses;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.simple_responses)
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses* Intent_Message::mutable_simple_responses() {
  if (!has_simple_responses()) {
    clear_message();
    set_has_simple_responses();
    message_.simple_responses_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::Intent_Message_SimpleResponses >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.simple_responses)
  return message_.simple_responses_;
}

// .google.cloud.dialogflow.v2beta1.Intent.Message.BasicCard basic_card = 8;
inline bool Intent_Message::has_basic_card() const {
  return message_case() == kBasicCard;
}
inline void Intent_Message::set_has_basic_card() {
  _oneof_case_[0] = kBasicCard;
}
inline void Intent_Message::clear_basic_card() {
  if (has_basic_card()) {
    if (GetArenaNoVirtual() == NULL) {
      delete message_.basic_card_;
    }
    clear_has_message();
  }
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard* Intent_Message::release_basic_card() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.basic_card)
  if (has_basic_card()) {
    clear_has_message();
      ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard* temp = message_.basic_card_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    message_.basic_card_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard& Intent_Message::basic_card() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.basic_card)
  return has_basic_card()
      ? *message_.basic_card_
      : *reinterpret_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_BasicCard_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard* Intent_Message::unsafe_arena_release_basic_card() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.basic_card)
  if (has_basic_card()) {
    clear_has_message();
    ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard* temp = message_.basic_card_;
    message_.basic_card_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Intent_Message::unsafe_arena_set_allocated_basic_card(::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard* basic_card) {
  clear_message();
  if (basic_card) {
    set_has_basic_card();
    message_.basic_card_ = basic_card;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.basic_card)
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard* Intent_Message::mutable_basic_card() {
  if (!has_basic_card()) {
    clear_message();
    set_has_basic_card();
    message_.basic_card_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::Intent_Message_BasicCard >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.basic_card)
  return message_.basic_card_;
}

// .google.cloud.dialogflow.v2beta1.Intent.Message.Suggestions suggestions = 9;
inline bool Intent_Message::has_suggestions() const {
  return message_case() == kSuggestions;
}
inline void Intent_Message::set_has_suggestions() {
  _oneof_case_[0] = kSuggestions;
}
inline void Intent_Message::clear_suggestions() {
  if (has_suggestions()) {
    if (GetArenaNoVirtual() == NULL) {
      delete message_.suggestions_;
    }
    clear_has_message();
  }
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions* Intent_Message::release_suggestions() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.suggestions)
  if (has_suggestions()) {
    clear_has_message();
      ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions* temp = message_.suggestions_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    message_.suggestions_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions& Intent_Message::suggestions() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.suggestions)
  return has_suggestions()
      ? *message_.suggestions_
      : *reinterpret_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_Suggestions_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions* Intent_Message::unsafe_arena_release_suggestions() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.suggestions)
  if (has_suggestions()) {
    clear_has_message();
    ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions* temp = message_.suggestions_;
    message_.suggestions_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Intent_Message::unsafe_arena_set_allocated_suggestions(::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions* suggestions) {
  clear_message();
  if (suggestions) {
    set_has_suggestions();
    message_.suggestions_ = suggestions;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.suggestions)
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions* Intent_Message::mutable_suggestions() {
  if (!has_suggestions()) {
    clear_message();
    set_has_suggestions();
    message_.suggestions_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::Intent_Message_Suggestions >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.suggestions)
  return message_.suggestions_;
}

// .google.cloud.dialogflow.v2beta1.Intent.Message.LinkOutSuggestion link_out_suggestion = 10;
inline bool Intent_Message::has_link_out_suggestion() const {
  return message_case() == kLinkOutSuggestion;
}
inline void Intent_Message::set_has_link_out_suggestion() {
  _oneof_case_[0] = kLinkOutSuggestion;
}
inline void Intent_Message::clear_link_out_suggestion() {
  if (has_link_out_suggestion()) {
    if (GetArenaNoVirtual() == NULL) {
      delete message_.link_out_suggestion_;
    }
    clear_has_message();
  }
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion* Intent_Message::release_link_out_suggestion() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.link_out_suggestion)
  if (has_link_out_suggestion()) {
    clear_has_message();
      ::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion* temp = message_.link_out_suggestion_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    message_.link_out_suggestion_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion& Intent_Message::link_out_suggestion() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.link_out_suggestion)
  return has_link_out_suggestion()
      ? *message_.link_out_suggestion_
      : *reinterpret_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_LinkOutSuggestion_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion* Intent_Message::unsafe_arena_release_link_out_suggestion() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.link_out_suggestion)
  if (has_link_out_suggestion()) {
    clear_has_message();
    ::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion* temp = message_.link_out_suggestion_;
    message_.link_out_suggestion_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Intent_Message::unsafe_arena_set_allocated_link_out_suggestion(::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion* link_out_suggestion) {
  clear_message();
  if (link_out_suggestion) {
    set_has_link_out_suggestion();
    message_.link_out_suggestion_ = link_out_suggestion;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.link_out_suggestion)
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion* Intent_Message::mutable_link_out_suggestion() {
  if (!has_link_out_suggestion()) {
    clear_message();
    set_has_link_out_suggestion();
    message_.link_out_suggestion_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::Intent_Message_LinkOutSuggestion >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.link_out_suggestion)
  return message_.link_out_suggestion_;
}

// .google.cloud.dialogflow.v2beta1.Intent.Message.ListSelect list_select = 11;
inline bool Intent_Message::has_list_select() const {
  return message_case() == kListSelect;
}
inline void Intent_Message::set_has_list_select() {
  _oneof_case_[0] = kListSelect;
}
inline void Intent_Message::clear_list_select() {
  if (has_list_select()) {
    if (GetArenaNoVirtual() == NULL) {
      delete message_.list_select_;
    }
    clear_has_message();
  }
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect* Intent_Message::release_list_select() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.list_select)
  if (has_list_select()) {
    clear_has_message();
      ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect* temp = message_.list_select_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    message_.list_select_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect& Intent_Message::list_select() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.list_select)
  return has_list_select()
      ? *message_.list_select_
      : *reinterpret_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_ListSelect_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect* Intent_Message::unsafe_arena_release_list_select() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.list_select)
  if (has_list_select()) {
    clear_has_message();
    ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect* temp = message_.list_select_;
    message_.list_select_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Intent_Message::unsafe_arena_set_allocated_list_select(::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect* list_select) {
  clear_message();
  if (list_select) {
    set_has_list_select();
    message_.list_select_ = list_select;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.list_select)
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect* Intent_Message::mutable_list_select() {
  if (!has_list_select()) {
    clear_message();
    set_has_list_select();
    message_.list_select_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::Intent_Message_ListSelect >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.list_select)
  return message_.list_select_;
}

// .google.cloud.dialogflow.v2beta1.Intent.Message.CarouselSelect carousel_select = 12;
inline bool Intent_Message::has_carousel_select() const {
  return message_case() == kCarouselSelect;
}
inline void Intent_Message::set_has_carousel_select() {
  _oneof_case_[0] = kCarouselSelect;
}
inline void Intent_Message::clear_carousel_select() {
  if (has_carousel_select()) {
    if (GetArenaNoVirtual() == NULL) {
      delete message_.carousel_select_;
    }
    clear_has_message();
  }
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect* Intent_Message::release_carousel_select() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.Message.carousel_select)
  if (has_carousel_select()) {
    clear_has_message();
      ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect* temp = message_.carousel_select_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    message_.carousel_select_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect& Intent_Message::carousel_select() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.carousel_select)
  return has_carousel_select()
      ? *message_.carousel_select_
      : *reinterpret_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect*>(&::google::cloud::dialogflow::v2beta1::_Intent_Message_CarouselSelect_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect* Intent_Message::unsafe_arena_release_carousel_select() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.Message.carousel_select)
  if (has_carousel_select()) {
    clear_has_message();
    ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect* temp = message_.carousel_select_;
    message_.carousel_select_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Intent_Message::unsafe_arena_set_allocated_carousel_select(::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect* carousel_select) {
  clear_message();
  if (carousel_select) {
    set_has_carousel_select();
    message_.carousel_select_ = carousel_select;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.Message.carousel_select)
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect* Intent_Message::mutable_carousel_select() {
  if (!has_carousel_select()) {
    clear_message();
    set_has_carousel_select();
    message_.carousel_select_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::Intent_Message_CarouselSelect >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.Message.carousel_select)
  return message_.carousel_select_;
}

// .google.cloud.dialogflow.v2beta1.Intent.Message.Platform platform = 6;
inline void Intent_Message::clear_platform() {
  platform_ = 0;
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Platform Intent_Message::platform() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.Message.platform)
  return static_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_Platform >(platform_);
}
inline void Intent_Message::set_platform(::google::cloud::dialogflow::v2beta1::Intent_Message_Platform value) {
  
  platform_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.Message.platform)
}

inline bool Intent_Message::has_message() const {
  return message_case() != MESSAGE_NOT_SET;
}
inline void Intent_Message::clear_has_message() {
  _oneof_case_[0] = MESSAGE_NOT_SET;
}
inline Intent_Message::MessageCase Intent_Message::message_case() const {
  return Intent_Message::MessageCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Intent_FollowupIntentInfo

// string followup_intent_name = 1;
inline void Intent_FollowupIntentInfo::clear_followup_intent_name() {
  followup_intent_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_FollowupIntentInfo::followup_intent_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.followup_intent_name)
  return followup_intent_name_.Get();
}
inline void Intent_FollowupIntentInfo::set_followup_intent_name(const ::std::string& value) {
  
  followup_intent_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.followup_intent_name)
}
#if LANG_CXX11
inline void Intent_FollowupIntentInfo::set_followup_intent_name(::std::string&& value) {
  
  followup_intent_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.followup_intent_name)
}
#endif
inline void Intent_FollowupIntentInfo::set_followup_intent_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  followup_intent_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.followup_intent_name)
}
inline void Intent_FollowupIntentInfo::set_followup_intent_name(const char* value,
    size_t size) {
  
  followup_intent_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.followup_intent_name)
}
inline ::std::string* Intent_FollowupIntentInfo::mutable_followup_intent_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.followup_intent_name)
  return followup_intent_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_FollowupIntentInfo::release_followup_intent_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.followup_intent_name)
  
  return followup_intent_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_FollowupIntentInfo::set_allocated_followup_intent_name(::std::string* followup_intent_name) {
  if (followup_intent_name != NULL) {
    
  } else {
    
  }
  followup_intent_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), followup_intent_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.followup_intent_name)
}
inline ::std::string* Intent_FollowupIntentInfo::unsafe_arena_release_followup_intent_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.followup_intent_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return followup_intent_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_FollowupIntentInfo::unsafe_arena_set_allocated_followup_intent_name(
    ::std::string* followup_intent_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (followup_intent_name != NULL) {
    
  } else {
    
  }
  followup_intent_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      followup_intent_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.followup_intent_name)
}

// string parent_followup_intent_name = 2;
inline void Intent_FollowupIntentInfo::clear_parent_followup_intent_name() {
  parent_followup_intent_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent_FollowupIntentInfo::parent_followup_intent_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.parent_followup_intent_name)
  return parent_followup_intent_name_.Get();
}
inline void Intent_FollowupIntentInfo::set_parent_followup_intent_name(const ::std::string& value) {
  
  parent_followup_intent_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.parent_followup_intent_name)
}
#if LANG_CXX11
inline void Intent_FollowupIntentInfo::set_parent_followup_intent_name(::std::string&& value) {
  
  parent_followup_intent_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.parent_followup_intent_name)
}
#endif
inline void Intent_FollowupIntentInfo::set_parent_followup_intent_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_followup_intent_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.parent_followup_intent_name)
}
inline void Intent_FollowupIntentInfo::set_parent_followup_intent_name(const char* value,
    size_t size) {
  
  parent_followup_intent_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.parent_followup_intent_name)
}
inline ::std::string* Intent_FollowupIntentInfo::mutable_parent_followup_intent_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.parent_followup_intent_name)
  return parent_followup_intent_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent_FollowupIntentInfo::release_parent_followup_intent_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.parent_followup_intent_name)
  
  return parent_followup_intent_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent_FollowupIntentInfo::set_allocated_parent_followup_intent_name(::std::string* parent_followup_intent_name) {
  if (parent_followup_intent_name != NULL) {
    
  } else {
    
  }
  parent_followup_intent_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent_followup_intent_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.parent_followup_intent_name)
}
inline ::std::string* Intent_FollowupIntentInfo::unsafe_arena_release_parent_followup_intent_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.parent_followup_intent_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_followup_intent_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent_FollowupIntentInfo::unsafe_arena_set_allocated_parent_followup_intent_name(
    ::std::string* parent_followup_intent_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent_followup_intent_name != NULL) {
    
  } else {
    
  }
  parent_followup_intent_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent_followup_intent_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo.parent_followup_intent_name)
}

// -------------------------------------------------------------------

// Intent

// string name = 1;
inline void Intent::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.name)
  return name_.Get();
}
inline void Intent::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.name)
}
#if LANG_CXX11
inline void Intent::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.name)
}
#endif
inline void Intent::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.name)
}
inline void Intent::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.name)
}
inline ::std::string* Intent::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.name)
}
inline ::std::string* Intent::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.name)
}

// string display_name = 2;
inline void Intent::clear_display_name() {
  display_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent::display_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.display_name)
  return display_name_.Get();
}
inline void Intent::set_display_name(const ::std::string& value) {
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.display_name)
}
#if LANG_CXX11
inline void Intent::set_display_name(::std::string&& value) {
  
  display_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.display_name)
}
#endif
inline void Intent::set_display_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.display_name)
}
inline void Intent::set_display_name(const char* value,
    size_t size) {
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.display_name)
}
inline ::std::string* Intent::mutable_display_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.display_name)
  return display_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent::release_display_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.display_name)
  
  return display_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent::set_allocated_display_name(::std::string* display_name) {
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.display_name)
}
inline ::std::string* Intent::unsafe_arena_release_display_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.display_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return display_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent::unsafe_arena_set_allocated_display_name(
    ::std::string* display_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      display_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.display_name)
}

// .google.cloud.dialogflow.v2beta1.Intent.WebhookState webhook_state = 6;
inline void Intent::clear_webhook_state() {
  webhook_state_ = 0;
}
inline ::google::cloud::dialogflow::v2beta1::Intent_WebhookState Intent::webhook_state() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.webhook_state)
  return static_cast< ::google::cloud::dialogflow::v2beta1::Intent_WebhookState >(webhook_state_);
}
inline void Intent::set_webhook_state(::google::cloud::dialogflow::v2beta1::Intent_WebhookState value) {
  
  webhook_state_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.webhook_state)
}

// int32 priority = 3;
inline void Intent::clear_priority() {
  priority_ = 0;
}
inline ::google::protobuf::int32 Intent::priority() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.priority)
  return priority_;
}
inline void Intent::set_priority(::google::protobuf::int32 value) {
  
  priority_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.priority)
}

// bool is_fallback = 4;
inline void Intent::clear_is_fallback() {
  is_fallback_ = false;
}
inline bool Intent::is_fallback() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.is_fallback)
  return is_fallback_;
}
inline void Intent::set_is_fallback(bool value) {
  
  is_fallback_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.is_fallback)
}

// bool ml_enabled = 5;
inline void Intent::clear_ml_enabled() {
  ml_enabled_ = false;
}
inline bool Intent::ml_enabled() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.ml_enabled)
  return ml_enabled_;
}
inline void Intent::set_ml_enabled(bool value) {
  
  ml_enabled_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.ml_enabled)
}

// repeated string input_context_names = 7;
inline int Intent::input_context_names_size() const {
  return input_context_names_.size();
}
inline void Intent::clear_input_context_names() {
  input_context_names_.Clear();
}
inline const ::std::string& Intent::input_context_names(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.input_context_names)
  return input_context_names_.Get(index);
}
inline ::std::string* Intent::mutable_input_context_names(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.input_context_names)
  return input_context_names_.Mutable(index);
}
inline void Intent::set_input_context_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.input_context_names)
  input_context_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Intent::set_input_context_names(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.input_context_names)
  input_context_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Intent::set_input_context_names(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  input_context_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.input_context_names)
}
inline void Intent::set_input_context_names(int index, const char* value, size_t size) {
  input_context_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.input_context_names)
}
inline ::std::string* Intent::add_input_context_names() {
  // @@protoc_insertion_point(field_add_mutable:google.cloud.dialogflow.v2beta1.Intent.input_context_names)
  return input_context_names_.Add();
}
inline void Intent::add_input_context_names(const ::std::string& value) {
  input_context_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Intent.input_context_names)
}
#if LANG_CXX11
inline void Intent::add_input_context_names(::std::string&& value) {
  input_context_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Intent.input_context_names)
}
#endif
inline void Intent::add_input_context_names(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  input_context_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.dialogflow.v2beta1.Intent.input_context_names)
}
inline void Intent::add_input_context_names(const char* value, size_t size) {
  input_context_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.dialogflow.v2beta1.Intent.input_context_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Intent::input_context_names() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.Intent.input_context_names)
  return input_context_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Intent::mutable_input_context_names() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.Intent.input_context_names)
  return &input_context_names_;
}

// repeated string events = 8;
inline int Intent::events_size() const {
  return events_.size();
}
inline void Intent::clear_events() {
  events_.Clear();
}
inline const ::std::string& Intent::events(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.events)
  return events_.Get(index);
}
inline ::std::string* Intent::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.events)
  return events_.Mutable(index);
}
inline void Intent::set_events(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.events)
  events_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Intent::set_events(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.events)
  events_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Intent::set_events(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  events_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.events)
}
inline void Intent::set_events(int index, const char* value, size_t size) {
  events_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.events)
}
inline ::std::string* Intent::add_events() {
  // @@protoc_insertion_point(field_add_mutable:google.cloud.dialogflow.v2beta1.Intent.events)
  return events_.Add();
}
inline void Intent::add_events(const ::std::string& value) {
  events_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Intent.events)
}
#if LANG_CXX11
inline void Intent::add_events(::std::string&& value) {
  events_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Intent.events)
}
#endif
inline void Intent::add_events(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  events_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.dialogflow.v2beta1.Intent.events)
}
inline void Intent::add_events(const char* value, size_t size) {
  events_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.dialogflow.v2beta1.Intent.events)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Intent::events() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.Intent.events)
  return events_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Intent::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.Intent.events)
  return &events_;
}

// repeated .google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase training_phrases = 9;
inline int Intent::training_phrases_size() const {
  return training_phrases_.size();
}
inline void Intent::clear_training_phrases() {
  training_phrases_.Clear();
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase& Intent::training_phrases(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.training_phrases)
  return training_phrases_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase* Intent::mutable_training_phrases(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.training_phrases)
  return training_phrases_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase* Intent::add_training_phrases() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Intent.training_phrases)
  return training_phrases_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase >*
Intent::mutable_training_phrases() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.Intent.training_phrases)
  return &training_phrases_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase >&
Intent::training_phrases() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.Intent.training_phrases)
  return training_phrases_;
}

// string action = 10;
inline void Intent::clear_action() {
  action_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent::action() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.action)
  return action_.Get();
}
inline void Intent::set_action(const ::std::string& value) {
  
  action_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.action)
}
#if LANG_CXX11
inline void Intent::set_action(::std::string&& value) {
  
  action_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.action)
}
#endif
inline void Intent::set_action(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  action_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.action)
}
inline void Intent::set_action(const char* value,
    size_t size) {
  
  action_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.action)
}
inline ::std::string* Intent::mutable_action() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.action)
  return action_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent::release_action() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.action)
  
  return action_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent::set_allocated_action(::std::string* action) {
  if (action != NULL) {
    
  } else {
    
  }
  action_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.action)
}
inline ::std::string* Intent::unsafe_arena_release_action() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.action)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return action_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent::unsafe_arena_set_allocated_action(
    ::std::string* action) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (action != NULL) {
    
  } else {
    
  }
  action_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      action, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.action)
}

// repeated .google.cloud.dialogflow.v2beta1.Context output_contexts = 11;
inline int Intent::output_contexts_size() const {
  return output_contexts_.size();
}
inline const ::google::cloud::dialogflow::v2beta1::Context& Intent::output_contexts(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.output_contexts)
  return output_contexts_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::Context* Intent::mutable_output_contexts(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.output_contexts)
  return output_contexts_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::Context* Intent::add_output_contexts() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Intent.output_contexts)
  return output_contexts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Context >*
Intent::mutable_output_contexts() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.Intent.output_contexts)
  return &output_contexts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Context >&
Intent::output_contexts() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.Intent.output_contexts)
  return output_contexts_;
}

// bool reset_contexts = 12;
inline void Intent::clear_reset_contexts() {
  reset_contexts_ = false;
}
inline bool Intent::reset_contexts() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.reset_contexts)
  return reset_contexts_;
}
inline void Intent::set_reset_contexts(bool value) {
  
  reset_contexts_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.reset_contexts)
}

// repeated .google.cloud.dialogflow.v2beta1.Intent.Parameter parameters = 13;
inline int Intent::parameters_size() const {
  return parameters_.size();
}
inline void Intent::clear_parameters() {
  parameters_.Clear();
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Parameter& Intent::parameters(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.parameters)
  return parameters_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Parameter* Intent::mutable_parameters(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.parameters)
  return parameters_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Parameter* Intent::add_parameters() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Intent.parameters)
  return parameters_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Parameter >*
Intent::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.Intent.parameters)
  return &parameters_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Parameter >&
Intent::parameters() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.Intent.parameters)
  return parameters_;
}

// repeated .google.cloud.dialogflow.v2beta1.Intent.Message messages = 14;
inline int Intent::messages_size() const {
  return messages_.size();
}
inline void Intent::clear_messages() {
  messages_.Clear();
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Message& Intent::messages(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.messages)
  return messages_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message* Intent::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.messages)
  return messages_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message* Intent::add_messages() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Intent.messages)
  return messages_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message >*
Intent::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.Intent.messages)
  return &messages_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message >&
Intent::messages() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.Intent.messages)
  return messages_;
}

// repeated .google.cloud.dialogflow.v2beta1.Intent.Message.Platform default_response_platforms = 15;
inline int Intent::default_response_platforms_size() const {
  return default_response_platforms_.size();
}
inline void Intent::clear_default_response_platforms() {
  default_response_platforms_.Clear();
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message_Platform Intent::default_response_platforms(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.default_response_platforms)
  return static_cast< ::google::cloud::dialogflow::v2beta1::Intent_Message_Platform >(default_response_platforms_.Get(index));
}
inline void Intent::set_default_response_platforms(int index, ::google::cloud::dialogflow::v2beta1::Intent_Message_Platform value) {
  default_response_platforms_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.default_response_platforms)
}
inline void Intent::add_default_response_platforms(::google::cloud::dialogflow::v2beta1::Intent_Message_Platform value) {
  default_response_platforms_.Add(value);
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Intent.default_response_platforms)
}
inline const ::google::protobuf::RepeatedField<int>&
Intent::default_response_platforms() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.Intent.default_response_platforms)
  return default_response_platforms_;
}
inline ::google::protobuf::RepeatedField<int>*
Intent::mutable_default_response_platforms() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.Intent.default_response_platforms)
  return &default_response_platforms_;
}

// string root_followup_intent_name = 16;
inline void Intent::clear_root_followup_intent_name() {
  root_followup_intent_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent::root_followup_intent_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.root_followup_intent_name)
  return root_followup_intent_name_.Get();
}
inline void Intent::set_root_followup_intent_name(const ::std::string& value) {
  
  root_followup_intent_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.root_followup_intent_name)
}
#if LANG_CXX11
inline void Intent::set_root_followup_intent_name(::std::string&& value) {
  
  root_followup_intent_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.root_followup_intent_name)
}
#endif
inline void Intent::set_root_followup_intent_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  root_followup_intent_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.root_followup_intent_name)
}
inline void Intent::set_root_followup_intent_name(const char* value,
    size_t size) {
  
  root_followup_intent_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.root_followup_intent_name)
}
inline ::std::string* Intent::mutable_root_followup_intent_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.root_followup_intent_name)
  return root_followup_intent_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent::release_root_followup_intent_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.root_followup_intent_name)
  
  return root_followup_intent_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent::set_allocated_root_followup_intent_name(::std::string* root_followup_intent_name) {
  if (root_followup_intent_name != NULL) {
    
  } else {
    
  }
  root_followup_intent_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), root_followup_intent_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.root_followup_intent_name)
}
inline ::std::string* Intent::unsafe_arena_release_root_followup_intent_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.root_followup_intent_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return root_followup_intent_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent::unsafe_arena_set_allocated_root_followup_intent_name(
    ::std::string* root_followup_intent_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (root_followup_intent_name != NULL) {
    
  } else {
    
  }
  root_followup_intent_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      root_followup_intent_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.root_followup_intent_name)
}

// string parent_followup_intent_name = 17;
inline void Intent::clear_parent_followup_intent_name() {
  parent_followup_intent_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Intent::parent_followup_intent_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.parent_followup_intent_name)
  return parent_followup_intent_name_.Get();
}
inline void Intent::set_parent_followup_intent_name(const ::std::string& value) {
  
  parent_followup_intent_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Intent.parent_followup_intent_name)
}
#if LANG_CXX11
inline void Intent::set_parent_followup_intent_name(::std::string&& value) {
  
  parent_followup_intent_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Intent.parent_followup_intent_name)
}
#endif
inline void Intent::set_parent_followup_intent_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_followup_intent_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Intent.parent_followup_intent_name)
}
inline void Intent::set_parent_followup_intent_name(const char* value,
    size_t size) {
  
  parent_followup_intent_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Intent.parent_followup_intent_name)
}
inline ::std::string* Intent::mutable_parent_followup_intent_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.parent_followup_intent_name)
  return parent_followup_intent_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Intent::release_parent_followup_intent_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Intent.parent_followup_intent_name)
  
  return parent_followup_intent_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Intent::set_allocated_parent_followup_intent_name(::std::string* parent_followup_intent_name) {
  if (parent_followup_intent_name != NULL) {
    
  } else {
    
  }
  parent_followup_intent_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent_followup_intent_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Intent.parent_followup_intent_name)
}
inline ::std::string* Intent::unsafe_arena_release_parent_followup_intent_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Intent.parent_followup_intent_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_followup_intent_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Intent::unsafe_arena_set_allocated_parent_followup_intent_name(
    ::std::string* parent_followup_intent_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent_followup_intent_name != NULL) {
    
  } else {
    
  }
  parent_followup_intent_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent_followup_intent_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Intent.parent_followup_intent_name)
}

// repeated .google.cloud.dialogflow.v2beta1.Intent.FollowupIntentInfo followup_intent_info = 18;
inline int Intent::followup_intent_info_size() const {
  return followup_intent_info_.size();
}
inline void Intent::clear_followup_intent_info() {
  followup_intent_info_.Clear();
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_FollowupIntentInfo& Intent::followup_intent_info(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Intent.followup_intent_info)
  return followup_intent_info_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_FollowupIntentInfo* Intent::mutable_followup_intent_info(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Intent.followup_intent_info)
  return followup_intent_info_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_FollowupIntentInfo* Intent::add_followup_intent_info() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Intent.followup_intent_info)
  return followup_intent_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_FollowupIntentInfo >*
Intent::mutable_followup_intent_info() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.Intent.followup_intent_info)
  return &followup_intent_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_FollowupIntentInfo >&
Intent::followup_intent_info() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.Intent.followup_intent_info)
  return followup_intent_info_;
}

// -------------------------------------------------------------------

// ListIntentsRequest

// string parent = 1;
inline void ListIntentsRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListIntentsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListIntentsRequest.parent)
  return parent_.Get();
}
inline void ListIntentsRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ListIntentsRequest.parent)
}
#if LANG_CXX11
inline void ListIntentsRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.ListIntentsRequest.parent)
}
#endif
inline void ListIntentsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.ListIntentsRequest.parent)
}
inline void ListIntentsRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.ListIntentsRequest.parent)
}
inline ::std::string* ListIntentsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ListIntentsRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListIntentsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.ListIntentsRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListIntentsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.ListIntentsRequest.parent)
}
inline ::std::string* ListIntentsRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.ListIntentsRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListIntentsRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.ListIntentsRequest.parent)
}

// string language_code = 2;
inline void ListIntentsRequest::clear_language_code() {
  language_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListIntentsRequest::language_code() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListIntentsRequest.language_code)
  return language_code_.Get();
}
inline void ListIntentsRequest::set_language_code(const ::std::string& value) {
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ListIntentsRequest.language_code)
}
#if LANG_CXX11
inline void ListIntentsRequest::set_language_code(::std::string&& value) {
  
  language_code_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.ListIntentsRequest.language_code)
}
#endif
inline void ListIntentsRequest::set_language_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.ListIntentsRequest.language_code)
}
inline void ListIntentsRequest::set_language_code(const char* value,
    size_t size) {
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.ListIntentsRequest.language_code)
}
inline ::std::string* ListIntentsRequest::mutable_language_code() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ListIntentsRequest.language_code)
  return language_code_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListIntentsRequest::release_language_code() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.ListIntentsRequest.language_code)
  
  return language_code_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListIntentsRequest::set_allocated_language_code(::std::string* language_code) {
  if (language_code != NULL) {
    
  } else {
    
  }
  language_code_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language_code,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.ListIntentsRequest.language_code)
}
inline ::std::string* ListIntentsRequest::unsafe_arena_release_language_code() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.ListIntentsRequest.language_code)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return language_code_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListIntentsRequest::unsafe_arena_set_allocated_language_code(
    ::std::string* language_code) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (language_code != NULL) {
    
  } else {
    
  }
  language_code_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      language_code, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.ListIntentsRequest.language_code)
}

// .google.cloud.dialogflow.v2beta1.IntentView intent_view = 3;
inline void ListIntentsRequest::clear_intent_view() {
  intent_view_ = 0;
}
inline ::google::cloud::dialogflow::v2beta1::IntentView ListIntentsRequest::intent_view() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListIntentsRequest.intent_view)
  return static_cast< ::google::cloud::dialogflow::v2beta1::IntentView >(intent_view_);
}
inline void ListIntentsRequest::set_intent_view(::google::cloud::dialogflow::v2beta1::IntentView value) {
  
  intent_view_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ListIntentsRequest.intent_view)
}

// int32 page_size = 4;
inline void ListIntentsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListIntentsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListIntentsRequest.page_size)
  return page_size_;
}
inline void ListIntentsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ListIntentsRequest.page_size)
}

// string page_token = 5;
inline void ListIntentsRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListIntentsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListIntentsRequest.page_token)
  return page_token_.Get();
}
inline void ListIntentsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ListIntentsRequest.page_token)
}
#if LANG_CXX11
inline void ListIntentsRequest::set_page_token(::std::string&& value) {
  
  page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.ListIntentsRequest.page_token)
}
#endif
inline void ListIntentsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.ListIntentsRequest.page_token)
}
inline void ListIntentsRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.ListIntentsRequest.page_token)
}
inline ::std::string* ListIntentsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ListIntentsRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListIntentsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.ListIntentsRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListIntentsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.ListIntentsRequest.page_token)
}
inline ::std::string* ListIntentsRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.ListIntentsRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListIntentsRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.ListIntentsRequest.page_token)
}

// -------------------------------------------------------------------

// ListIntentsResponse

// repeated .google.cloud.dialogflow.v2beta1.Intent intents = 1;
inline int ListIntentsResponse::intents_size() const {
  return intents_.size();
}
inline void ListIntentsResponse::clear_intents() {
  intents_.Clear();
}
inline const ::google::cloud::dialogflow::v2beta1::Intent& ListIntentsResponse::intents(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListIntentsResponse.intents)
  return intents_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent* ListIntentsResponse::mutable_intents(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ListIntentsResponse.intents)
  return intents_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent* ListIntentsResponse::add_intents() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.ListIntentsResponse.intents)
  return intents_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent >*
ListIntentsResponse::mutable_intents() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.ListIntentsResponse.intents)
  return &intents_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent >&
ListIntentsResponse::intents() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.ListIntentsResponse.intents)
  return intents_;
}

// string next_page_token = 2;
inline void ListIntentsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListIntentsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListIntentsResponse.next_page_token)
  return next_page_token_.Get();
}
inline void ListIntentsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ListIntentsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListIntentsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.ListIntentsResponse.next_page_token)
}
#endif
inline void ListIntentsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.ListIntentsResponse.next_page_token)
}
inline void ListIntentsResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.ListIntentsResponse.next_page_token)
}
inline ::std::string* ListIntentsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ListIntentsResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListIntentsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.ListIntentsResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListIntentsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.ListIntentsResponse.next_page_token)
}
inline ::std::string* ListIntentsResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.ListIntentsResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListIntentsResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.ListIntentsResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetIntentRequest

// string name = 1;
inline void GetIntentRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetIntentRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.GetIntentRequest.name)
  return name_.Get();
}
inline void GetIntentRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.GetIntentRequest.name)
}
#if LANG_CXX11
inline void GetIntentRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.GetIntentRequest.name)
}
#endif
inline void GetIntentRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.GetIntentRequest.name)
}
inline void GetIntentRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.GetIntentRequest.name)
}
inline ::std::string* GetIntentRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.GetIntentRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetIntentRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.GetIntentRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GetIntentRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.GetIntentRequest.name)
}
inline ::std::string* GetIntentRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.GetIntentRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetIntentRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.GetIntentRequest.name)
}

// string language_code = 2;
inline void GetIntentRequest::clear_language_code() {
  language_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetIntentRequest::language_code() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.GetIntentRequest.language_code)
  return language_code_.Get();
}
inline void GetIntentRequest::set_language_code(const ::std::string& value) {
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.GetIntentRequest.language_code)
}
#if LANG_CXX11
inline void GetIntentRequest::set_language_code(::std::string&& value) {
  
  language_code_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.GetIntentRequest.language_code)
}
#endif
inline void GetIntentRequest::set_language_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.GetIntentRequest.language_code)
}
inline void GetIntentRequest::set_language_code(const char* value,
    size_t size) {
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.GetIntentRequest.language_code)
}
inline ::std::string* GetIntentRequest::mutable_language_code() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.GetIntentRequest.language_code)
  return language_code_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetIntentRequest::release_language_code() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.GetIntentRequest.language_code)
  
  return language_code_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GetIntentRequest::set_allocated_language_code(::std::string* language_code) {
  if (language_code != NULL) {
    
  } else {
    
  }
  language_code_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language_code,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.GetIntentRequest.language_code)
}
inline ::std::string* GetIntentRequest::unsafe_arena_release_language_code() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.GetIntentRequest.language_code)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return language_code_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetIntentRequest::unsafe_arena_set_allocated_language_code(
    ::std::string* language_code) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (language_code != NULL) {
    
  } else {
    
  }
  language_code_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      language_code, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.GetIntentRequest.language_code)
}

// .google.cloud.dialogflow.v2beta1.IntentView intent_view = 3;
inline void GetIntentRequest::clear_intent_view() {
  intent_view_ = 0;
}
inline ::google::cloud::dialogflow::v2beta1::IntentView GetIntentRequest::intent_view() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.GetIntentRequest.intent_view)
  return static_cast< ::google::cloud::dialogflow::v2beta1::IntentView >(intent_view_);
}
inline void GetIntentRequest::set_intent_view(::google::cloud::dialogflow::v2beta1::IntentView value) {
  
  intent_view_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.GetIntentRequest.intent_view)
}

// -------------------------------------------------------------------

// CreateIntentRequest

// string parent = 1;
inline void CreateIntentRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CreateIntentRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.CreateIntentRequest.parent)
  return parent_.Get();
}
inline void CreateIntentRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.CreateIntentRequest.parent)
}
#if LANG_CXX11
inline void CreateIntentRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.CreateIntentRequest.parent)
}
#endif
inline void CreateIntentRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.CreateIntentRequest.parent)
}
inline void CreateIntentRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.CreateIntentRequest.parent)
}
inline ::std::string* CreateIntentRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.CreateIntentRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CreateIntentRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.CreateIntentRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void CreateIntentRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.CreateIntentRequest.parent)
}
inline ::std::string* CreateIntentRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.CreateIntentRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CreateIntentRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.CreateIntentRequest.parent)
}

// .google.cloud.dialogflow.v2beta1.Intent intent = 2;
inline bool CreateIntentRequest::has_intent() const {
  return this != internal_default_instance() && intent_ != NULL;
}
inline void CreateIntentRequest::clear_intent() {
  if (GetArenaNoVirtual() == NULL && intent_ != NULL) {
    delete intent_;
  }
  intent_ = NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::Intent& CreateIntentRequest::intent() const {
  const ::google::cloud::dialogflow::v2beta1::Intent* p = intent_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.CreateIntentRequest.intent)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::Intent*>(
      &::google::cloud::dialogflow::v2beta1::_Intent_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::Intent* CreateIntentRequest::release_intent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.CreateIntentRequest.intent)
  
  ::google::cloud::dialogflow::v2beta1::Intent* temp = intent_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  intent_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Intent* CreateIntentRequest::unsafe_arena_release_intent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.CreateIntentRequest.intent)
  
  ::google::cloud::dialogflow::v2beta1::Intent* temp = intent_;
  intent_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Intent* CreateIntentRequest::mutable_intent() {
  
  if (intent_ == NULL) {
    _slow_mutable_intent();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.CreateIntentRequest.intent)
  return intent_;
}
inline void CreateIntentRequest::set_allocated_intent(::google::cloud::dialogflow::v2beta1::Intent* intent) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete intent_;
  }
  if (intent) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(intent);
    if (message_arena != submessage_arena) {
      intent = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, intent, submessage_arena);
    }
    
  } else {
    
  }
  intent_ = intent;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.CreateIntentRequest.intent)
}

// string language_code = 3;
inline void CreateIntentRequest::clear_language_code() {
  language_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CreateIntentRequest::language_code() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.CreateIntentRequest.language_code)
  return language_code_.Get();
}
inline void CreateIntentRequest::set_language_code(const ::std::string& value) {
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.CreateIntentRequest.language_code)
}
#if LANG_CXX11
inline void CreateIntentRequest::set_language_code(::std::string&& value) {
  
  language_code_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.CreateIntentRequest.language_code)
}
#endif
inline void CreateIntentRequest::set_language_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.CreateIntentRequest.language_code)
}
inline void CreateIntentRequest::set_language_code(const char* value,
    size_t size) {
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.CreateIntentRequest.language_code)
}
inline ::std::string* CreateIntentRequest::mutable_language_code() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.CreateIntentRequest.language_code)
  return language_code_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CreateIntentRequest::release_language_code() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.CreateIntentRequest.language_code)
  
  return language_code_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void CreateIntentRequest::set_allocated_language_code(::std::string* language_code) {
  if (language_code != NULL) {
    
  } else {
    
  }
  language_code_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language_code,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.CreateIntentRequest.language_code)
}
inline ::std::string* CreateIntentRequest::unsafe_arena_release_language_code() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.CreateIntentRequest.language_code)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return language_code_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CreateIntentRequest::unsafe_arena_set_allocated_language_code(
    ::std::string* language_code) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (language_code != NULL) {
    
  } else {
    
  }
  language_code_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      language_code, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.CreateIntentRequest.language_code)
}

// .google.cloud.dialogflow.v2beta1.IntentView intent_view = 4;
inline void CreateIntentRequest::clear_intent_view() {
  intent_view_ = 0;
}
inline ::google::cloud::dialogflow::v2beta1::IntentView CreateIntentRequest::intent_view() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.CreateIntentRequest.intent_view)
  return static_cast< ::google::cloud::dialogflow::v2beta1::IntentView >(intent_view_);
}
inline void CreateIntentRequest::set_intent_view(::google::cloud::dialogflow::v2beta1::IntentView value) {
  
  intent_view_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.CreateIntentRequest.intent_view)
}

// -------------------------------------------------------------------

// UpdateIntentRequest

// .google.cloud.dialogflow.v2beta1.Intent intent = 1;
inline bool UpdateIntentRequest::has_intent() const {
  return this != internal_default_instance() && intent_ != NULL;
}
inline void UpdateIntentRequest::clear_intent() {
  if (GetArenaNoVirtual() == NULL && intent_ != NULL) {
    delete intent_;
  }
  intent_ = NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::Intent& UpdateIntentRequest::intent() const {
  const ::google::cloud::dialogflow::v2beta1::Intent* p = intent_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.UpdateIntentRequest.intent)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::Intent*>(
      &::google::cloud::dialogflow::v2beta1::_Intent_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::Intent* UpdateIntentRequest::release_intent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.UpdateIntentRequest.intent)
  
  ::google::cloud::dialogflow::v2beta1::Intent* temp = intent_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  intent_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Intent* UpdateIntentRequest::unsafe_arena_release_intent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.UpdateIntentRequest.intent)
  
  ::google::cloud::dialogflow::v2beta1::Intent* temp = intent_;
  intent_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Intent* UpdateIntentRequest::mutable_intent() {
  
  if (intent_ == NULL) {
    _slow_mutable_intent();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.UpdateIntentRequest.intent)
  return intent_;
}
inline void UpdateIntentRequest::set_allocated_intent(::google::cloud::dialogflow::v2beta1::Intent* intent) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete intent_;
  }
  if (intent) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(intent);
    if (message_arena != submessage_arena) {
      intent = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, intent, submessage_arena);
    }
    
  } else {
    
  }
  intent_ = intent;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.UpdateIntentRequest.intent)
}

// string language_code = 2;
inline void UpdateIntentRequest::clear_language_code() {
  language_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& UpdateIntentRequest::language_code() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.UpdateIntentRequest.language_code)
  return language_code_.Get();
}
inline void UpdateIntentRequest::set_language_code(const ::std::string& value) {
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.UpdateIntentRequest.language_code)
}
#if LANG_CXX11
inline void UpdateIntentRequest::set_language_code(::std::string&& value) {
  
  language_code_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.UpdateIntentRequest.language_code)
}
#endif
inline void UpdateIntentRequest::set_language_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.UpdateIntentRequest.language_code)
}
inline void UpdateIntentRequest::set_language_code(const char* value,
    size_t size) {
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.UpdateIntentRequest.language_code)
}
inline ::std::string* UpdateIntentRequest::mutable_language_code() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.UpdateIntentRequest.language_code)
  return language_code_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UpdateIntentRequest::release_language_code() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.UpdateIntentRequest.language_code)
  
  return language_code_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UpdateIntentRequest::set_allocated_language_code(::std::string* language_code) {
  if (language_code != NULL) {
    
  } else {
    
  }
  language_code_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language_code,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.UpdateIntentRequest.language_code)
}
inline ::std::string* UpdateIntentRequest::unsafe_arena_release_language_code() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.UpdateIntentRequest.language_code)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return language_code_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UpdateIntentRequest::unsafe_arena_set_allocated_language_code(
    ::std::string* language_code) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (language_code != NULL) {
    
  } else {
    
  }
  language_code_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      language_code, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.UpdateIntentRequest.language_code)
}

// .google.protobuf.FieldMask update_mask = 3;
inline bool UpdateIntentRequest::has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != NULL;
}
inline const ::google::protobuf::FieldMask& UpdateIntentRequest::update_mask() const {
  const ::google::protobuf::FieldMask* p = update_mask_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.UpdateIntentRequest.update_mask)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FieldMask*>(
      &::google::protobuf::_FieldMask_default_instance_);
}
inline ::google::protobuf::FieldMask* UpdateIntentRequest::release_update_mask() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.UpdateIntentRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateIntentRequest::unsafe_arena_release_update_mask() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.UpdateIntentRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateIntentRequest::mutable_update_mask() {
  
  if (update_mask_ == NULL) {
    _slow_mutable_update_mask();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.UpdateIntentRequest.update_mask)
  return update_mask_;
}
inline void UpdateIntentRequest::set_allocated_update_mask(::google::protobuf::FieldMask* update_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_mask_);
  }
  if (update_mask) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update_mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    
  } else {
    
  }
  update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.UpdateIntentRequest.update_mask)
}

// .google.cloud.dialogflow.v2beta1.IntentView intent_view = 4;
inline void UpdateIntentRequest::clear_intent_view() {
  intent_view_ = 0;
}
inline ::google::cloud::dialogflow::v2beta1::IntentView UpdateIntentRequest::intent_view() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.UpdateIntentRequest.intent_view)
  return static_cast< ::google::cloud::dialogflow::v2beta1::IntentView >(intent_view_);
}
inline void UpdateIntentRequest::set_intent_view(::google::cloud::dialogflow::v2beta1::IntentView value) {
  
  intent_view_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.UpdateIntentRequest.intent_view)
}

// -------------------------------------------------------------------

// DeleteIntentRequest

// string name = 1;
inline void DeleteIntentRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DeleteIntentRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.DeleteIntentRequest.name)
  return name_.Get();
}
inline void DeleteIntentRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.DeleteIntentRequest.name)
}
#if LANG_CXX11
inline void DeleteIntentRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.DeleteIntentRequest.name)
}
#endif
inline void DeleteIntentRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.DeleteIntentRequest.name)
}
inline void DeleteIntentRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.DeleteIntentRequest.name)
}
inline ::std::string* DeleteIntentRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.DeleteIntentRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DeleteIntentRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.DeleteIntentRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void DeleteIntentRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.DeleteIntentRequest.name)
}
inline ::std::string* DeleteIntentRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.DeleteIntentRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DeleteIntentRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.DeleteIntentRequest.name)
}

// -------------------------------------------------------------------

// BatchUpdateIntentsRequest

// string parent = 1;
inline void BatchUpdateIntentsRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& BatchUpdateIntentsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.parent)
  return parent_.Get();
}
inline void BatchUpdateIntentsRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.parent)
}
#if LANG_CXX11
inline void BatchUpdateIntentsRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.parent)
}
#endif
inline void BatchUpdateIntentsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.parent)
}
inline void BatchUpdateIntentsRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.parent)
}
inline ::std::string* BatchUpdateIntentsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* BatchUpdateIntentsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void BatchUpdateIntentsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.parent)
}
inline ::std::string* BatchUpdateIntentsRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void BatchUpdateIntentsRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.parent)
}

// string intent_batch_uri = 2;
inline bool BatchUpdateIntentsRequest::has_intent_batch_uri() const {
  return intent_batch_case() == kIntentBatchUri;
}
inline void BatchUpdateIntentsRequest::set_has_intent_batch_uri() {
  _oneof_case_[0] = kIntentBatchUri;
}
inline void BatchUpdateIntentsRequest::clear_intent_batch_uri() {
  if (has_intent_batch_uri()) {
    intent_batch_.intent_batch_uri_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_intent_batch();
  }
}
inline const ::std::string& BatchUpdateIntentsRequest::intent_batch_uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.intent_batch_uri)
  if (has_intent_batch_uri()) {
    return intent_batch_.intent_batch_uri_.Get();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void BatchUpdateIntentsRequest::set_intent_batch_uri(const ::std::string& value) {
  if (!has_intent_batch_uri()) {
    clear_intent_batch();
    set_has_intent_batch_uri();
    intent_batch_.intent_batch_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  intent_batch_.intent_batch_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.intent_batch_uri)
}
#if LANG_CXX11
inline void BatchUpdateIntentsRequest::set_intent_batch_uri(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.intent_batch_uri)
  if (!has_intent_batch_uri()) {
    clear_intent_batch();
    set_has_intent_batch_uri();
    intent_batch_.intent_batch_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  intent_batch_.intent_batch_uri_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.intent_batch_uri)
}
#endif
inline void BatchUpdateIntentsRequest::set_intent_batch_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_intent_batch_uri()) {
    clear_intent_batch();
    set_has_intent_batch_uri();
    intent_batch_.intent_batch_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  intent_batch_.intent_batch_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.intent_batch_uri)
}
inline void BatchUpdateIntentsRequest::set_intent_batch_uri(const char* value,
                             size_t size) {
  if (!has_intent_batch_uri()) {
    clear_intent_batch();
    set_has_intent_batch_uri();
    intent_batch_.intent_batch_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  intent_batch_.intent_batch_uri_.Set(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.intent_batch_uri)
}
inline ::std::string* BatchUpdateIntentsRequest::mutable_intent_batch_uri() {
  if (!has_intent_batch_uri()) {
    clear_intent_batch();
    set_has_intent_batch_uri();
    intent_batch_.intent_batch_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return intent_batch_.intent_batch_uri_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.intent_batch_uri)
}
inline ::std::string* BatchUpdateIntentsRequest::release_intent_batch_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.intent_batch_uri)
  if (has_intent_batch_uri()) {
    clear_has_intent_batch();
    return intent_batch_.intent_batch_uri_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void BatchUpdateIntentsRequest::set_allocated_intent_batch_uri(::std::string* intent_batch_uri) {
  if (!has_intent_batch_uri()) {
    intent_batch_.intent_batch_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_intent_batch();
  if (intent_batch_uri != NULL) {
    set_has_intent_batch_uri();
    intent_batch_.intent_batch_uri_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), intent_batch_uri,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.intent_batch_uri)
}
inline ::std::string* BatchUpdateIntentsRequest::unsafe_arena_release_intent_batch_uri() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.intent_batch_uri)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_intent_batch_uri()) {
    clear_has_intent_batch();
    return intent_batch_.intent_batch_uri_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void BatchUpdateIntentsRequest::unsafe_arena_set_allocated_intent_batch_uri(::std::string* intent_batch_uri) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_intent_batch_uri()) {
    intent_batch_.intent_batch_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_intent_batch();
  if (intent_batch_uri) {
    set_has_intent_batch_uri();
    intent_batch_.intent_batch_uri_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), intent_batch_uri, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.intent_batch_uri)
}

// .google.cloud.dialogflow.v2beta1.IntentBatch intent_batch_inline = 3;
inline bool BatchUpdateIntentsRequest::has_intent_batch_inline() const {
  return intent_batch_case() == kIntentBatchInline;
}
inline void BatchUpdateIntentsRequest::set_has_intent_batch_inline() {
  _oneof_case_[0] = kIntentBatchInline;
}
inline void BatchUpdateIntentsRequest::clear_intent_batch_inline() {
  if (has_intent_batch_inline()) {
    if (GetArenaNoVirtual() == NULL) {
      delete intent_batch_.intent_batch_inline_;
    }
    clear_has_intent_batch();
  }
}
inline ::google::cloud::dialogflow::v2beta1::IntentBatch* BatchUpdateIntentsRequest::release_intent_batch_inline() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.intent_batch_inline)
  if (has_intent_batch_inline()) {
    clear_has_intent_batch();
      ::google::cloud::dialogflow::v2beta1::IntentBatch* temp = intent_batch_.intent_batch_inline_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    intent_batch_.intent_batch_inline_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::dialogflow::v2beta1::IntentBatch& BatchUpdateIntentsRequest::intent_batch_inline() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.intent_batch_inline)
  return has_intent_batch_inline()
      ? *intent_batch_.intent_batch_inline_
      : *reinterpret_cast< ::google::cloud::dialogflow::v2beta1::IntentBatch*>(&::google::cloud::dialogflow::v2beta1::_IntentBatch_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::IntentBatch* BatchUpdateIntentsRequest::unsafe_arena_release_intent_batch_inline() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.intent_batch_inline)
  if (has_intent_batch_inline()) {
    clear_has_intent_batch();
    ::google::cloud::dialogflow::v2beta1::IntentBatch* temp = intent_batch_.intent_batch_inline_;
    intent_batch_.intent_batch_inline_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void BatchUpdateIntentsRequest::unsafe_arena_set_allocated_intent_batch_inline(::google::cloud::dialogflow::v2beta1::IntentBatch* intent_batch_inline) {
  clear_intent_batch();
  if (intent_batch_inline) {
    set_has_intent_batch_inline();
    intent_batch_.intent_batch_inline_ = intent_batch_inline;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.intent_batch_inline)
}
inline ::google::cloud::dialogflow::v2beta1::IntentBatch* BatchUpdateIntentsRequest::mutable_intent_batch_inline() {
  if (!has_intent_batch_inline()) {
    clear_intent_batch();
    set_has_intent_batch_inline();
    intent_batch_.intent_batch_inline_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::IntentBatch >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.intent_batch_inline)
  return intent_batch_.intent_batch_inline_;
}

// string language_code = 4;
inline void BatchUpdateIntentsRequest::clear_language_code() {
  language_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& BatchUpdateIntentsRequest::language_code() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.language_code)
  return language_code_.Get();
}
inline void BatchUpdateIntentsRequest::set_language_code(const ::std::string& value) {
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.language_code)
}
#if LANG_CXX11
inline void BatchUpdateIntentsRequest::set_language_code(::std::string&& value) {
  
  language_code_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.language_code)
}
#endif
inline void BatchUpdateIntentsRequest::set_language_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.language_code)
}
inline void BatchUpdateIntentsRequest::set_language_code(const char* value,
    size_t size) {
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.language_code)
}
inline ::std::string* BatchUpdateIntentsRequest::mutable_language_code() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.language_code)
  return language_code_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* BatchUpdateIntentsRequest::release_language_code() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.language_code)
  
  return language_code_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void BatchUpdateIntentsRequest::set_allocated_language_code(::std::string* language_code) {
  if (language_code != NULL) {
    
  } else {
    
  }
  language_code_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language_code,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.language_code)
}
inline ::std::string* BatchUpdateIntentsRequest::unsafe_arena_release_language_code() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.language_code)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return language_code_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void BatchUpdateIntentsRequest::unsafe_arena_set_allocated_language_code(
    ::std::string* language_code) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (language_code != NULL) {
    
  } else {
    
  }
  language_code_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      language_code, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.language_code)
}

// .google.protobuf.FieldMask update_mask = 5;
inline bool BatchUpdateIntentsRequest::has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != NULL;
}
inline const ::google::protobuf::FieldMask& BatchUpdateIntentsRequest::update_mask() const {
  const ::google::protobuf::FieldMask* p = update_mask_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.update_mask)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FieldMask*>(
      &::google::protobuf::_FieldMask_default_instance_);
}
inline ::google::protobuf::FieldMask* BatchUpdateIntentsRequest::release_update_mask() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* BatchUpdateIntentsRequest::unsafe_arena_release_update_mask() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* BatchUpdateIntentsRequest::mutable_update_mask() {
  
  if (update_mask_ == NULL) {
    _slow_mutable_update_mask();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.update_mask)
  return update_mask_;
}
inline void BatchUpdateIntentsRequest::set_allocated_update_mask(::google::protobuf::FieldMask* update_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_mask_);
  }
  if (update_mask) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update_mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    
  } else {
    
  }
  update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.update_mask)
}

// .google.cloud.dialogflow.v2beta1.IntentView intent_view = 6;
inline void BatchUpdateIntentsRequest::clear_intent_view() {
  intent_view_ = 0;
}
inline ::google::cloud::dialogflow::v2beta1::IntentView BatchUpdateIntentsRequest::intent_view() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.intent_view)
  return static_cast< ::google::cloud::dialogflow::v2beta1::IntentView >(intent_view_);
}
inline void BatchUpdateIntentsRequest::set_intent_view(::google::cloud::dialogflow::v2beta1::IntentView value) {
  
  intent_view_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsRequest.intent_view)
}

inline bool BatchUpdateIntentsRequest::has_intent_batch() const {
  return intent_batch_case() != INTENT_BATCH_NOT_SET;
}
inline void BatchUpdateIntentsRequest::clear_has_intent_batch() {
  _oneof_case_[0] = INTENT_BATCH_NOT_SET;
}
inline BatchUpdateIntentsRequest::IntentBatchCase BatchUpdateIntentsRequest::intent_batch_case() const {
  return BatchUpdateIntentsRequest::IntentBatchCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// BatchUpdateIntentsResponse

// repeated .google.cloud.dialogflow.v2beta1.Intent intents = 1;
inline int BatchUpdateIntentsResponse::intents_size() const {
  return intents_.size();
}
inline void BatchUpdateIntentsResponse::clear_intents() {
  intents_.Clear();
}
inline const ::google::cloud::dialogflow::v2beta1::Intent& BatchUpdateIntentsResponse::intents(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse.intents)
  return intents_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent* BatchUpdateIntentsResponse::mutable_intents(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse.intents)
  return intents_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent* BatchUpdateIntentsResponse::add_intents() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse.intents)
  return intents_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent >*
BatchUpdateIntentsResponse::mutable_intents() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse.intents)
  return &intents_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent >&
BatchUpdateIntentsResponse::intents() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.BatchUpdateIntentsResponse.intents)
  return intents_;
}

// -------------------------------------------------------------------

// BatchDeleteIntentsRequest

// string parent = 1;
inline void BatchDeleteIntentsRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& BatchDeleteIntentsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest.parent)
  return parent_.Get();
}
inline void BatchDeleteIntentsRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest.parent)
}
#if LANG_CXX11
inline void BatchDeleteIntentsRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest.parent)
}
#endif
inline void BatchDeleteIntentsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest.parent)
}
inline void BatchDeleteIntentsRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest.parent)
}
inline ::std::string* BatchDeleteIntentsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* BatchDeleteIntentsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void BatchDeleteIntentsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest.parent)
}
inline ::std::string* BatchDeleteIntentsRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void BatchDeleteIntentsRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest.parent)
}

// repeated .google.cloud.dialogflow.v2beta1.Intent intents = 2;
inline int BatchDeleteIntentsRequest::intents_size() const {
  return intents_.size();
}
inline void BatchDeleteIntentsRequest::clear_intents() {
  intents_.Clear();
}
inline const ::google::cloud::dialogflow::v2beta1::Intent& BatchDeleteIntentsRequest::intents(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest.intents)
  return intents_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent* BatchDeleteIntentsRequest::mutable_intents(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest.intents)
  return intents_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent* BatchDeleteIntentsRequest::add_intents() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest.intents)
  return intents_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent >*
BatchDeleteIntentsRequest::mutable_intents() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest.intents)
  return &intents_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent >&
BatchDeleteIntentsRequest::intents() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.BatchDeleteIntentsRequest.intents)
  return intents_;
}

// -------------------------------------------------------------------

// IntentBatch

// repeated .google.cloud.dialogflow.v2beta1.Intent intents = 1;
inline int IntentBatch::intents_size() const {
  return intents_.size();
}
inline void IntentBatch::clear_intents() {
  intents_.Clear();
}
inline const ::google::cloud::dialogflow::v2beta1::Intent& IntentBatch::intents(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.IntentBatch.intents)
  return intents_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent* IntentBatch::mutable_intents(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.IntentBatch.intents)
  return intents_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent* IntentBatch::add_intents() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.IntentBatch.intents)
  return intents_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent >*
IntentBatch::mutable_intents() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.IntentBatch.intents)
  return &intents_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent >&
IntentBatch::intents() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.IntentBatch.intents)
  return intents_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Type>() {
  return ::google::cloud::dialogflow::v2beta1::Intent_TrainingPhrase_Type_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::dialogflow::v2beta1::Intent_Message_Platform> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::dialogflow::v2beta1::Intent_Message_Platform>() {
  return ::google::cloud::dialogflow::v2beta1::Intent_Message_Platform_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::dialogflow::v2beta1::Intent_WebhookState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::dialogflow::v2beta1::Intent_WebhookState>() {
  return ::google::cloud::dialogflow::v2beta1::Intent_WebhookState_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::dialogflow::v2beta1::IntentView> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::dialogflow::v2beta1::IntentView>() {
  return ::google::cloud::dialogflow::v2beta1::IntentView_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fcloud_2fdialogflow_2fv2beta1_2fintent_2eproto__INCLUDED
