// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/cloud/dialogflow/v2beta1/context.proto

#include "google/cloud/dialogflow/v2beta1/context.pb.h"
#include "google/cloud/dialogflow/v2beta1/context.grpc.pb.h"

#include <grpc++/impl/codegen/async_stream.h>
#include <grpc++/impl/codegen/async_unary_call.h>
#include <grpc++/impl/codegen/channel_interface.h>
#include <grpc++/impl/codegen/client_unary_call.h>
#include <grpc++/impl/codegen/method_handler_impl.h>
#include <grpc++/impl/codegen/rpc_service_method.h>
#include <grpc++/impl/codegen/service_type.h>
#include <grpc++/impl/codegen/sync_stream.h>
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {

static const char* Contexts_method_names[] = {
  "/google.cloud.dialogflow.v2beta1.Contexts/ListContexts",
  "/google.cloud.dialogflow.v2beta1.Contexts/GetContext",
  "/google.cloud.dialogflow.v2beta1.Contexts/CreateContext",
  "/google.cloud.dialogflow.v2beta1.Contexts/UpdateContext",
  "/google.cloud.dialogflow.v2beta1.Contexts/DeleteContext",
  "/google.cloud.dialogflow.v2beta1.Contexts/DeleteAllContexts",
};

std::unique_ptr< Contexts::Stub> Contexts::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< Contexts::Stub> stub(new Contexts::Stub(channel));
  return stub;
}

Contexts::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_ListContexts_(Contexts_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetContext_(Contexts_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateContext_(Contexts_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateContext_(Contexts_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteContext_(Contexts_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteAllContexts_(Contexts_method_names[5], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status Contexts::Stub::ListContexts(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListContextsRequest& request, ::google::cloud::dialogflow::v2beta1::ListContextsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListContexts_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::ListContextsResponse>* Contexts::Stub::AsyncListContextsRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListContextsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dialogflow::v2beta1::ListContextsResponse>::Create(channel_.get(), cq, rpcmethod_ListContexts_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::ListContextsResponse>* Contexts::Stub::PrepareAsyncListContextsRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListContextsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dialogflow::v2beta1::ListContextsResponse>::Create(channel_.get(), cq, rpcmethod_ListContexts_, context, request, false);
}

::grpc::Status Contexts::Stub::GetContext(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetContextRequest& request, ::google::cloud::dialogflow::v2beta1::Context* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetContext_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Context>* Contexts::Stub::AsyncGetContextRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetContextRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dialogflow::v2beta1::Context>::Create(channel_.get(), cq, rpcmethod_GetContext_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Context>* Contexts::Stub::PrepareAsyncGetContextRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetContextRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dialogflow::v2beta1::Context>::Create(channel_.get(), cq, rpcmethod_GetContext_, context, request, false);
}

::grpc::Status Contexts::Stub::CreateContext(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateContextRequest& request, ::google::cloud::dialogflow::v2beta1::Context* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateContext_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Context>* Contexts::Stub::AsyncCreateContextRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateContextRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dialogflow::v2beta1::Context>::Create(channel_.get(), cq, rpcmethod_CreateContext_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Context>* Contexts::Stub::PrepareAsyncCreateContextRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateContextRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dialogflow::v2beta1::Context>::Create(channel_.get(), cq, rpcmethod_CreateContext_, context, request, false);
}

::grpc::Status Contexts::Stub::UpdateContext(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateContextRequest& request, ::google::cloud::dialogflow::v2beta1::Context* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateContext_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Context>* Contexts::Stub::AsyncUpdateContextRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateContextRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dialogflow::v2beta1::Context>::Create(channel_.get(), cq, rpcmethod_UpdateContext_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Context>* Contexts::Stub::PrepareAsyncUpdateContextRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateContextRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dialogflow::v2beta1::Context>::Create(channel_.get(), cq, rpcmethod_UpdateContext_, context, request, false);
}

::grpc::Status Contexts::Stub::DeleteContext(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteContextRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteContext_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Contexts::Stub::AsyncDeleteContextRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteContextRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteContext_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Contexts::Stub::PrepareAsyncDeleteContextRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteContextRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteContext_, context, request, false);
}

::grpc::Status Contexts::Stub::DeleteAllContexts(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteAllContextsRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteAllContexts_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Contexts::Stub::AsyncDeleteAllContextsRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteAllContextsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteAllContexts_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Contexts::Stub::PrepareAsyncDeleteAllContextsRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteAllContextsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteAllContexts_, context, request, false);
}

Contexts::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Contexts_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Contexts::Service, ::google::cloud::dialogflow::v2beta1::ListContextsRequest, ::google::cloud::dialogflow::v2beta1::ListContextsResponse>(
          std::mem_fn(&Contexts::Service::ListContexts), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Contexts_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Contexts::Service, ::google::cloud::dialogflow::v2beta1::GetContextRequest, ::google::cloud::dialogflow::v2beta1::Context>(
          std::mem_fn(&Contexts::Service::GetContext), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Contexts_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Contexts::Service, ::google::cloud::dialogflow::v2beta1::CreateContextRequest, ::google::cloud::dialogflow::v2beta1::Context>(
          std::mem_fn(&Contexts::Service::CreateContext), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Contexts_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Contexts::Service, ::google::cloud::dialogflow::v2beta1::UpdateContextRequest, ::google::cloud::dialogflow::v2beta1::Context>(
          std::mem_fn(&Contexts::Service::UpdateContext), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Contexts_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Contexts::Service, ::google::cloud::dialogflow::v2beta1::DeleteContextRequest, ::google::protobuf::Empty>(
          std::mem_fn(&Contexts::Service::DeleteContext), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Contexts_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Contexts::Service, ::google::cloud::dialogflow::v2beta1::DeleteAllContextsRequest, ::google::protobuf::Empty>(
          std::mem_fn(&Contexts::Service::DeleteAllContexts), this)));
}

Contexts::Service::~Service() {
}

::grpc::Status Contexts::Service::ListContexts(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::ListContextsRequest* request, ::google::cloud::dialogflow::v2beta1::ListContextsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Contexts::Service::GetContext(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::GetContextRequest* request, ::google::cloud::dialogflow::v2beta1::Context* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Contexts::Service::CreateContext(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::CreateContextRequest* request, ::google::cloud::dialogflow::v2beta1::Context* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Contexts::Service::UpdateContext(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateContextRequest* request, ::google::cloud::dialogflow::v2beta1::Context* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Contexts::Service::DeleteContext(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteContextRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Contexts::Service::DeleteAllContexts(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteAllContextsRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace cloud
}  // namespace dialogflow
}  // namespace v2beta1

