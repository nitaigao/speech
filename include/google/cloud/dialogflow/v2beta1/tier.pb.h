// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/v2beta1/tier.proto

#ifndef PROTOBUF_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto__INCLUDED
#define PROTOBUF_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include <google/protobuf/field_mask.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsAgentTierImpl();
void InitDefaultsAgentTier();
void InitDefaultsGetAgentTierRequestImpl();
void InitDefaultsGetAgentTierRequest();
void InitDefaultsUpdateAgentTierRequestImpl();
void InitDefaultsUpdateAgentTierRequest();
inline void InitDefaults() {
  InitDefaultsAgentTier();
  InitDefaultsGetAgentTierRequest();
  InitDefaultsUpdateAgentTierRequest();
}
}  // namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {
class AgentTier;
class AgentTierDefaultTypeInternal;
extern AgentTierDefaultTypeInternal _AgentTier_default_instance_;
class GetAgentTierRequest;
class GetAgentTierRequestDefaultTypeInternal;
extern GetAgentTierRequestDefaultTypeInternal _GetAgentTierRequest_default_instance_;
class UpdateAgentTierRequest;
class UpdateAgentTierRequestDefaultTypeInternal;
extern UpdateAgentTierRequestDefaultTypeInternal _UpdateAgentTierRequest_default_instance_;
}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {

enum Tier {
  TIER_UNSPECIFIED = 0,
  TIER_STANDARD = 1,
  TIER_ENTERPRISE = 2,
  Tier_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Tier_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Tier_IsValid(int value);
const Tier Tier_MIN = TIER_UNSPECIFIED;
const Tier Tier_MAX = TIER_ENTERPRISE;
const int Tier_ARRAYSIZE = Tier_MAX + 1;

const ::google::protobuf::EnumDescriptor* Tier_descriptor();
inline const ::std::string& Tier_Name(Tier value) {
  return ::google::protobuf::internal::NameOfEnum(
    Tier_descriptor(), value);
}
inline bool Tier_Parse(
    const ::std::string& name, Tier* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Tier>(
    Tier_descriptor(), name, value);
}
// ===================================================================

class AgentTier : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.AgentTier) */ {
 public:
  AgentTier();
  virtual ~AgentTier();

  AgentTier(const AgentTier& from);

  inline AgentTier& operator=(const AgentTier& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AgentTier(AgentTier&& from) noexcept
    : AgentTier() {
    *this = ::std::move(from);
  }

  inline AgentTier& operator=(AgentTier&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const AgentTier& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AgentTier* internal_default_instance() {
    return reinterpret_cast<const AgentTier*>(
               &_AgentTier_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(AgentTier* other);
  void Swap(AgentTier* other);
  friend void swap(AgentTier& a, AgentTier& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AgentTier* New() const PROTOBUF_FINAL { return New(NULL); }

  AgentTier* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AgentTier& from);
  void MergeFrom(const AgentTier& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AgentTier* other);
  protected:
  explicit AgentTier(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.cloud.dialogflow.v2beta1.Tier tier = 1;
  void clear_tier();
  static const int kTierFieldNumber = 1;
  ::google::cloud::dialogflow::v2beta1::Tier tier() const;
  void set_tier(::google::cloud::dialogflow::v2beta1::Tier value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.AgentTier)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int tier_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::InitDefaultsAgentTierImpl();
};
// -------------------------------------------------------------------

class GetAgentTierRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.GetAgentTierRequest) */ {
 public:
  GetAgentTierRequest();
  virtual ~GetAgentTierRequest();

  GetAgentTierRequest(const GetAgentTierRequest& from);

  inline GetAgentTierRequest& operator=(const GetAgentTierRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetAgentTierRequest(GetAgentTierRequest&& from) noexcept
    : GetAgentTierRequest() {
    *this = ::std::move(from);
  }

  inline GetAgentTierRequest& operator=(GetAgentTierRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAgentTierRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetAgentTierRequest* internal_default_instance() {
    return reinterpret_cast<const GetAgentTierRequest*>(
               &_GetAgentTierRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(GetAgentTierRequest* other);
  void Swap(GetAgentTierRequest* other);
  friend void swap(GetAgentTierRequest& a, GetAgentTierRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetAgentTierRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAgentTierRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAgentTierRequest& from);
  void MergeFrom(const GetAgentTierRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAgentTierRequest* other);
  protected:
  explicit GetAgentTierRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.GetAgentTierRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::InitDefaultsGetAgentTierRequestImpl();
};
// -------------------------------------------------------------------

class UpdateAgentTierRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest) */ {
 public:
  UpdateAgentTierRequest();
  virtual ~UpdateAgentTierRequest();

  UpdateAgentTierRequest(const UpdateAgentTierRequest& from);

  inline UpdateAgentTierRequest& operator=(const UpdateAgentTierRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateAgentTierRequest(UpdateAgentTierRequest&& from) noexcept
    : UpdateAgentTierRequest() {
    *this = ::std::move(from);
  }

  inline UpdateAgentTierRequest& operator=(UpdateAgentTierRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateAgentTierRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateAgentTierRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateAgentTierRequest*>(
               &_UpdateAgentTierRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(UpdateAgentTierRequest* other);
  void Swap(UpdateAgentTierRequest* other);
  friend void swap(UpdateAgentTierRequest& a, UpdateAgentTierRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateAgentTierRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateAgentTierRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateAgentTierRequest& from);
  void MergeFrom(const UpdateAgentTierRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateAgentTierRequest* other);
  protected:
  explicit UpdateAgentTierRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // .google.cloud.dialogflow.v2beta1.AgentTier agent_tier = 2;
  bool has_agent_tier() const;
  void clear_agent_tier();
  static const int kAgentTierFieldNumber = 2;
  private:
  void _slow_mutable_agent_tier();
  public:
  const ::google::cloud::dialogflow::v2beta1::AgentTier& agent_tier() const;
  ::google::cloud::dialogflow::v2beta1::AgentTier* release_agent_tier();
  ::google::cloud::dialogflow::v2beta1::AgentTier* mutable_agent_tier();
  void set_allocated_agent_tier(::google::cloud::dialogflow::v2beta1::AgentTier* agent_tier);
  void unsafe_arena_set_allocated_agent_tier(
      ::google::cloud::dialogflow::v2beta1::AgentTier* agent_tier);
  ::google::cloud::dialogflow::v2beta1::AgentTier* unsafe_arena_release_agent_tier();

  // .google.protobuf.FieldMask update_mask = 3;
  bool has_update_mask() const;
  void clear_update_mask();
  static const int kUpdateMaskFieldNumber = 3;
  private:
  void _slow_mutable_update_mask();
  public:
  const ::google::protobuf::FieldMask& update_mask() const;
  ::google::protobuf::FieldMask* release_update_mask();
  ::google::protobuf::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* update_mask);
  void unsafe_arena_set_allocated_update_mask(
      ::google::protobuf::FieldMask* update_mask);
  ::google::protobuf::FieldMask* unsafe_arena_release_update_mask();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::cloud::dialogflow::v2beta1::AgentTier* agent_tier_;
  ::google::protobuf::FieldMask* update_mask_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::InitDefaultsUpdateAgentTierRequestImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AgentTier

// .google.cloud.dialogflow.v2beta1.Tier tier = 1;
inline void AgentTier::clear_tier() {
  tier_ = 0;
}
inline ::google::cloud::dialogflow::v2beta1::Tier AgentTier::tier() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.AgentTier.tier)
  return static_cast< ::google::cloud::dialogflow::v2beta1::Tier >(tier_);
}
inline void AgentTier::set_tier(::google::cloud::dialogflow::v2beta1::Tier value) {
  
  tier_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.AgentTier.tier)
}

// -------------------------------------------------------------------

// GetAgentTierRequest

// string name = 1;
inline void GetAgentTierRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetAgentTierRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.GetAgentTierRequest.name)
  return name_.Get();
}
inline void GetAgentTierRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.GetAgentTierRequest.name)
}
#if LANG_CXX11
inline void GetAgentTierRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.GetAgentTierRequest.name)
}
#endif
inline void GetAgentTierRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.GetAgentTierRequest.name)
}
inline void GetAgentTierRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.GetAgentTierRequest.name)
}
inline ::std::string* GetAgentTierRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.GetAgentTierRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetAgentTierRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.GetAgentTierRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GetAgentTierRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.GetAgentTierRequest.name)
}
inline ::std::string* GetAgentTierRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.GetAgentTierRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetAgentTierRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.GetAgentTierRequest.name)
}

// -------------------------------------------------------------------

// UpdateAgentTierRequest

// string name = 1;
inline void UpdateAgentTierRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& UpdateAgentTierRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest.name)
  return name_.Get();
}
inline void UpdateAgentTierRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest.name)
}
#if LANG_CXX11
inline void UpdateAgentTierRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest.name)
}
#endif
inline void UpdateAgentTierRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest.name)
}
inline void UpdateAgentTierRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest.name)
}
inline ::std::string* UpdateAgentTierRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UpdateAgentTierRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UpdateAgentTierRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest.name)
}
inline ::std::string* UpdateAgentTierRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UpdateAgentTierRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest.name)
}

// .google.cloud.dialogflow.v2beta1.AgentTier agent_tier = 2;
inline bool UpdateAgentTierRequest::has_agent_tier() const {
  return this != internal_default_instance() && agent_tier_ != NULL;
}
inline void UpdateAgentTierRequest::clear_agent_tier() {
  if (GetArenaNoVirtual() == NULL && agent_tier_ != NULL) {
    delete agent_tier_;
  }
  agent_tier_ = NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::AgentTier& UpdateAgentTierRequest::agent_tier() const {
  const ::google::cloud::dialogflow::v2beta1::AgentTier* p = agent_tier_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest.agent_tier)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::AgentTier*>(
      &::google::cloud::dialogflow::v2beta1::_AgentTier_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::AgentTier* UpdateAgentTierRequest::release_agent_tier() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest.agent_tier)
  
  ::google::cloud::dialogflow::v2beta1::AgentTier* temp = agent_tier_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  agent_tier_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::AgentTier* UpdateAgentTierRequest::unsafe_arena_release_agent_tier() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest.agent_tier)
  
  ::google::cloud::dialogflow::v2beta1::AgentTier* temp = agent_tier_;
  agent_tier_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::AgentTier* UpdateAgentTierRequest::mutable_agent_tier() {
  
  if (agent_tier_ == NULL) {
    _slow_mutable_agent_tier();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest.agent_tier)
  return agent_tier_;
}
inline void UpdateAgentTierRequest::set_allocated_agent_tier(::google::cloud::dialogflow::v2beta1::AgentTier* agent_tier) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete agent_tier_;
  }
  if (agent_tier) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(agent_tier);
    if (message_arena != submessage_arena) {
      agent_tier = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, agent_tier, submessage_arena);
    }
    
  } else {
    
  }
  agent_tier_ = agent_tier;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest.agent_tier)
}

// .google.protobuf.FieldMask update_mask = 3;
inline bool UpdateAgentTierRequest::has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != NULL;
}
inline const ::google::protobuf::FieldMask& UpdateAgentTierRequest::update_mask() const {
  const ::google::protobuf::FieldMask* p = update_mask_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest.update_mask)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FieldMask*>(
      &::google::protobuf::_FieldMask_default_instance_);
}
inline ::google::protobuf::FieldMask* UpdateAgentTierRequest::release_update_mask() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateAgentTierRequest::unsafe_arena_release_update_mask() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateAgentTierRequest::mutable_update_mask() {
  
  if (update_mask_ == NULL) {
    _slow_mutable_update_mask();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest.update_mask)
  return update_mask_;
}
inline void UpdateAgentTierRequest::set_allocated_update_mask(::google::protobuf::FieldMask* update_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_mask_);
  }
  if (update_mask) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update_mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    
  } else {
    
  }
  update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest.update_mask)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::cloud::dialogflow::v2beta1::Tier> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::dialogflow::v2beta1::Tier>() {
  return ::google::cloud::dialogflow::v2beta1::Tier_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto__INCLUDED
