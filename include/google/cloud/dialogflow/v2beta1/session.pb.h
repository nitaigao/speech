// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/v2beta1/session.proto

#ifndef PROTOBUF_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto__INCLUDED
#define PROTOBUF_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/cloud/dialogflow/v2beta1/context.pb.h"
#include "google/cloud/dialogflow/v2beta1/intent.pb.h"
#include "google/cloud/dialogflow/v2beta1/session_entity_type.pb.h"
#include <google/protobuf/struct.pb.h>
#include "google/rpc/status.pb.h"
#include "google/type/latlng.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[11];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsDetectIntentRequestImpl();
void InitDefaultsDetectIntentRequest();
void InitDefaultsDetectIntentResponseImpl();
void InitDefaultsDetectIntentResponse();
void InitDefaultsQueryParametersImpl();
void InitDefaultsQueryParameters();
void InitDefaultsQueryInputImpl();
void InitDefaultsQueryInput();
void InitDefaultsQueryResultImpl();
void InitDefaultsQueryResult();
void InitDefaultsStreamingDetectIntentRequestImpl();
void InitDefaultsStreamingDetectIntentRequest();
void InitDefaultsStreamingDetectIntentResponseImpl();
void InitDefaultsStreamingDetectIntentResponse();
void InitDefaultsStreamingRecognitionResultImpl();
void InitDefaultsStreamingRecognitionResult();
void InitDefaultsInputAudioConfigImpl();
void InitDefaultsInputAudioConfig();
void InitDefaultsTextInputImpl();
void InitDefaultsTextInput();
void InitDefaultsEventInputImpl();
void InitDefaultsEventInput();
inline void InitDefaults() {
  InitDefaultsDetectIntentRequest();
  InitDefaultsDetectIntentResponse();
  InitDefaultsQueryParameters();
  InitDefaultsQueryInput();
  InitDefaultsQueryResult();
  InitDefaultsStreamingDetectIntentRequest();
  InitDefaultsStreamingDetectIntentResponse();
  InitDefaultsStreamingRecognitionResult();
  InitDefaultsInputAudioConfig();
  InitDefaultsTextInput();
  InitDefaultsEventInput();
}
}  // namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {
class DetectIntentRequest;
class DetectIntentRequestDefaultTypeInternal;
extern DetectIntentRequestDefaultTypeInternal _DetectIntentRequest_default_instance_;
class DetectIntentResponse;
class DetectIntentResponseDefaultTypeInternal;
extern DetectIntentResponseDefaultTypeInternal _DetectIntentResponse_default_instance_;
class EventInput;
class EventInputDefaultTypeInternal;
extern EventInputDefaultTypeInternal _EventInput_default_instance_;
class InputAudioConfig;
class InputAudioConfigDefaultTypeInternal;
extern InputAudioConfigDefaultTypeInternal _InputAudioConfig_default_instance_;
class QueryInput;
class QueryInputDefaultTypeInternal;
extern QueryInputDefaultTypeInternal _QueryInput_default_instance_;
class QueryParameters;
class QueryParametersDefaultTypeInternal;
extern QueryParametersDefaultTypeInternal _QueryParameters_default_instance_;
class QueryResult;
class QueryResultDefaultTypeInternal;
extern QueryResultDefaultTypeInternal _QueryResult_default_instance_;
class StreamingDetectIntentRequest;
class StreamingDetectIntentRequestDefaultTypeInternal;
extern StreamingDetectIntentRequestDefaultTypeInternal _StreamingDetectIntentRequest_default_instance_;
class StreamingDetectIntentResponse;
class StreamingDetectIntentResponseDefaultTypeInternal;
extern StreamingDetectIntentResponseDefaultTypeInternal _StreamingDetectIntentResponse_default_instance_;
class StreamingRecognitionResult;
class StreamingRecognitionResultDefaultTypeInternal;
extern StreamingRecognitionResultDefaultTypeInternal _StreamingRecognitionResult_default_instance_;
class TextInput;
class TextInputDefaultTypeInternal;
extern TextInputDefaultTypeInternal _TextInput_default_instance_;
}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {

enum StreamingRecognitionResult_MessageType {
  StreamingRecognitionResult_MessageType_MESSAGE_TYPE_UNSPECIFIED = 0,
  StreamingRecognitionResult_MessageType_TRANSCRIPT = 1,
  StreamingRecognitionResult_MessageType_END_OF_SINGLE_UTTERANCE = 2,
  StreamingRecognitionResult_MessageType_StreamingRecognitionResult_MessageType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  StreamingRecognitionResult_MessageType_StreamingRecognitionResult_MessageType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool StreamingRecognitionResult_MessageType_IsValid(int value);
const StreamingRecognitionResult_MessageType StreamingRecognitionResult_MessageType_MessageType_MIN = StreamingRecognitionResult_MessageType_MESSAGE_TYPE_UNSPECIFIED;
const StreamingRecognitionResult_MessageType StreamingRecognitionResult_MessageType_MessageType_MAX = StreamingRecognitionResult_MessageType_END_OF_SINGLE_UTTERANCE;
const int StreamingRecognitionResult_MessageType_MessageType_ARRAYSIZE = StreamingRecognitionResult_MessageType_MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* StreamingRecognitionResult_MessageType_descriptor();
inline const ::std::string& StreamingRecognitionResult_MessageType_Name(StreamingRecognitionResult_MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    StreamingRecognitionResult_MessageType_descriptor(), value);
}
inline bool StreamingRecognitionResult_MessageType_Parse(
    const ::std::string& name, StreamingRecognitionResult_MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StreamingRecognitionResult_MessageType>(
    StreamingRecognitionResult_MessageType_descriptor(), name, value);
}
enum AudioEncoding {
  AUDIO_ENCODING_UNSPECIFIED = 0,
  AUDIO_ENCODING_LINEAR_16 = 1,
  AUDIO_ENCODING_FLAC = 2,
  AUDIO_ENCODING_MULAW = 3,
  AUDIO_ENCODING_AMR = 4,
  AUDIO_ENCODING_AMR_WB = 5,
  AUDIO_ENCODING_OGG_OPUS = 6,
  AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE = 7,
  AudioEncoding_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AudioEncoding_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AudioEncoding_IsValid(int value);
const AudioEncoding AudioEncoding_MIN = AUDIO_ENCODING_UNSPECIFIED;
const AudioEncoding AudioEncoding_MAX = AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE;
const int AudioEncoding_ARRAYSIZE = AudioEncoding_MAX + 1;

const ::google::protobuf::EnumDescriptor* AudioEncoding_descriptor();
inline const ::std::string& AudioEncoding_Name(AudioEncoding value) {
  return ::google::protobuf::internal::NameOfEnum(
    AudioEncoding_descriptor(), value);
}
inline bool AudioEncoding_Parse(
    const ::std::string& name, AudioEncoding* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AudioEncoding>(
    AudioEncoding_descriptor(), name, value);
}
// ===================================================================

class DetectIntentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.DetectIntentRequest) */ {
 public:
  DetectIntentRequest();
  virtual ~DetectIntentRequest();

  DetectIntentRequest(const DetectIntentRequest& from);

  inline DetectIntentRequest& operator=(const DetectIntentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectIntentRequest(DetectIntentRequest&& from) noexcept
    : DetectIntentRequest() {
    *this = ::std::move(from);
  }

  inline DetectIntentRequest& operator=(DetectIntentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectIntentRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectIntentRequest* internal_default_instance() {
    return reinterpret_cast<const DetectIntentRequest*>(
               &_DetectIntentRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(DetectIntentRequest* other);
  void Swap(DetectIntentRequest* other);
  friend void swap(DetectIntentRequest& a, DetectIntentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectIntentRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectIntentRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectIntentRequest& from);
  void MergeFrom(const DetectIntentRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectIntentRequest* other);
  protected:
  explicit DetectIntentRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string session = 1;
  void clear_session();
  static const int kSessionFieldNumber = 1;
  const ::std::string& session() const;
  void set_session(const ::std::string& value);
  #if LANG_CXX11
  void set_session(::std::string&& value);
  #endif
  void set_session(const char* value);
  void set_session(const char* value, size_t size);
  ::std::string* mutable_session();
  ::std::string* release_session();
  void set_allocated_session(::std::string* session);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_session();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_session(
      ::std::string* session);

  // bytes input_audio = 5;
  void clear_input_audio();
  static const int kInputAudioFieldNumber = 5;
  const ::std::string& input_audio() const;
  void set_input_audio(const ::std::string& value);
  #if LANG_CXX11
  void set_input_audio(::std::string&& value);
  #endif
  void set_input_audio(const char* value);
  void set_input_audio(const void* value, size_t size);
  ::std::string* mutable_input_audio();
  ::std::string* release_input_audio();
  void set_allocated_input_audio(::std::string* input_audio);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_input_audio();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_input_audio(
      ::std::string* input_audio);

  // .google.cloud.dialogflow.v2beta1.QueryParameters query_params = 2;
  bool has_query_params() const;
  void clear_query_params();
  static const int kQueryParamsFieldNumber = 2;
  private:
  void _slow_mutable_query_params();
  public:
  const ::google::cloud::dialogflow::v2beta1::QueryParameters& query_params() const;
  ::google::cloud::dialogflow::v2beta1::QueryParameters* release_query_params();
  ::google::cloud::dialogflow::v2beta1::QueryParameters* mutable_query_params();
  void set_allocated_query_params(::google::cloud::dialogflow::v2beta1::QueryParameters* query_params);
  void unsafe_arena_set_allocated_query_params(
      ::google::cloud::dialogflow::v2beta1::QueryParameters* query_params);
  ::google::cloud::dialogflow::v2beta1::QueryParameters* unsafe_arena_release_query_params();

  // .google.cloud.dialogflow.v2beta1.QueryInput query_input = 3;
  bool has_query_input() const;
  void clear_query_input();
  static const int kQueryInputFieldNumber = 3;
  private:
  void _slow_mutable_query_input();
  public:
  const ::google::cloud::dialogflow::v2beta1::QueryInput& query_input() const;
  ::google::cloud::dialogflow::v2beta1::QueryInput* release_query_input();
  ::google::cloud::dialogflow::v2beta1::QueryInput* mutable_query_input();
  void set_allocated_query_input(::google::cloud::dialogflow::v2beta1::QueryInput* query_input);
  void unsafe_arena_set_allocated_query_input(
      ::google::cloud::dialogflow::v2beta1::QueryInput* query_input);
  ::google::cloud::dialogflow::v2beta1::QueryInput* unsafe_arena_release_query_input();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.DetectIntentRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr session_;
  ::google::protobuf::internal::ArenaStringPtr input_audio_;
  ::google::cloud::dialogflow::v2beta1::QueryParameters* query_params_;
  ::google::cloud::dialogflow::v2beta1::QueryInput* query_input_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsDetectIntentRequestImpl();
};
// -------------------------------------------------------------------

class DetectIntentResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.DetectIntentResponse) */ {
 public:
  DetectIntentResponse();
  virtual ~DetectIntentResponse();

  DetectIntentResponse(const DetectIntentResponse& from);

  inline DetectIntentResponse& operator=(const DetectIntentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectIntentResponse(DetectIntentResponse&& from) noexcept
    : DetectIntentResponse() {
    *this = ::std::move(from);
  }

  inline DetectIntentResponse& operator=(DetectIntentResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectIntentResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectIntentResponse* internal_default_instance() {
    return reinterpret_cast<const DetectIntentResponse*>(
               &_DetectIntentResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(DetectIntentResponse* other);
  void Swap(DetectIntentResponse* other);
  friend void swap(DetectIntentResponse& a, DetectIntentResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectIntentResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectIntentResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectIntentResponse& from);
  void MergeFrom(const DetectIntentResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectIntentResponse* other);
  protected:
  explicit DetectIntentResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string response_id = 1;
  void clear_response_id();
  static const int kResponseIdFieldNumber = 1;
  const ::std::string& response_id() const;
  void set_response_id(const ::std::string& value);
  #if LANG_CXX11
  void set_response_id(::std::string&& value);
  #endif
  void set_response_id(const char* value);
  void set_response_id(const char* value, size_t size);
  ::std::string* mutable_response_id();
  ::std::string* release_response_id();
  void set_allocated_response_id(::std::string* response_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_response_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_response_id(
      ::std::string* response_id);

  // .google.cloud.dialogflow.v2beta1.QueryResult query_result = 2;
  bool has_query_result() const;
  void clear_query_result();
  static const int kQueryResultFieldNumber = 2;
  private:
  void _slow_mutable_query_result();
  public:
  const ::google::cloud::dialogflow::v2beta1::QueryResult& query_result() const;
  ::google::cloud::dialogflow::v2beta1::QueryResult* release_query_result();
  ::google::cloud::dialogflow::v2beta1::QueryResult* mutable_query_result();
  void set_allocated_query_result(::google::cloud::dialogflow::v2beta1::QueryResult* query_result);
  void unsafe_arena_set_allocated_query_result(
      ::google::cloud::dialogflow::v2beta1::QueryResult* query_result);
  ::google::cloud::dialogflow::v2beta1::QueryResult* unsafe_arena_release_query_result();

  // .google.rpc.Status webhook_status = 3;
  bool has_webhook_status() const;
  void clear_webhook_status();
  static const int kWebhookStatusFieldNumber = 3;
  private:
  void _slow_mutable_webhook_status();
  public:
  const ::google::rpc::Status& webhook_status() const;
  ::google::rpc::Status* release_webhook_status();
  ::google::rpc::Status* mutable_webhook_status();
  void set_allocated_webhook_status(::google::rpc::Status* webhook_status);
  void unsafe_arena_set_allocated_webhook_status(
      ::google::rpc::Status* webhook_status);
  ::google::rpc::Status* unsafe_arena_release_webhook_status();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.DetectIntentResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr response_id_;
  ::google::cloud::dialogflow::v2beta1::QueryResult* query_result_;
  ::google::rpc::Status* webhook_status_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsDetectIntentResponseImpl();
};
// -------------------------------------------------------------------

class QueryParameters : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.QueryParameters) */ {
 public:
  QueryParameters();
  virtual ~QueryParameters();

  QueryParameters(const QueryParameters& from);

  inline QueryParameters& operator=(const QueryParameters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryParameters(QueryParameters&& from) noexcept
    : QueryParameters() {
    *this = ::std::move(from);
  }

  inline QueryParameters& operator=(QueryParameters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryParameters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryParameters* internal_default_instance() {
    return reinterpret_cast<const QueryParameters*>(
               &_QueryParameters_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(QueryParameters* other);
  void Swap(QueryParameters* other);
  friend void swap(QueryParameters& a, QueryParameters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryParameters* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryParameters* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryParameters& from);
  void MergeFrom(const QueryParameters& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryParameters* other);
  protected:
  explicit QueryParameters(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.dialogflow.v2beta1.Context contexts = 3;
  int contexts_size() const;
  void clear_contexts();
  static const int kContextsFieldNumber = 3;
  const ::google::cloud::dialogflow::v2beta1::Context& contexts(int index) const;
  ::google::cloud::dialogflow::v2beta1::Context* mutable_contexts(int index);
  ::google::cloud::dialogflow::v2beta1::Context* add_contexts();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Context >*
      mutable_contexts();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Context >&
      contexts() const;

  // repeated .google.cloud.dialogflow.v2beta1.SessionEntityType session_entity_types = 5;
  int session_entity_types_size() const;
  void clear_session_entity_types();
  static const int kSessionEntityTypesFieldNumber = 5;
  const ::google::cloud::dialogflow::v2beta1::SessionEntityType& session_entity_types(int index) const;
  ::google::cloud::dialogflow::v2beta1::SessionEntityType* mutable_session_entity_types(int index);
  ::google::cloud::dialogflow::v2beta1::SessionEntityType* add_session_entity_types();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::SessionEntityType >*
      mutable_session_entity_types();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::SessionEntityType >&
      session_entity_types() const;

  // string time_zone = 1;
  void clear_time_zone();
  static const int kTimeZoneFieldNumber = 1;
  const ::std::string& time_zone() const;
  void set_time_zone(const ::std::string& value);
  #if LANG_CXX11
  void set_time_zone(::std::string&& value);
  #endif
  void set_time_zone(const char* value);
  void set_time_zone(const char* value, size_t size);
  ::std::string* mutable_time_zone();
  ::std::string* release_time_zone();
  void set_allocated_time_zone(::std::string* time_zone);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_time_zone();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_time_zone(
      ::std::string* time_zone);

  // .google.type.LatLng geo_location = 2;
  bool has_geo_location() const;
  void clear_geo_location();
  static const int kGeoLocationFieldNumber = 2;
  private:
  void _slow_mutable_geo_location();
  public:
  const ::google::type::LatLng& geo_location() const;
  ::google::type::LatLng* release_geo_location();
  ::google::type::LatLng* mutable_geo_location();
  void set_allocated_geo_location(::google::type::LatLng* geo_location);
  void unsafe_arena_set_allocated_geo_location(
      ::google::type::LatLng* geo_location);
  ::google::type::LatLng* unsafe_arena_release_geo_location();

  // .google.protobuf.Struct payload = 6;
  bool has_payload() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 6;
  private:
  void _slow_mutable_payload();
  public:
  const ::google::protobuf::Struct& payload() const;
  ::google::protobuf::Struct* release_payload();
  ::google::protobuf::Struct* mutable_payload();
  void set_allocated_payload(::google::protobuf::Struct* payload);
  void unsafe_arena_set_allocated_payload(
      ::google::protobuf::Struct* payload);
  ::google::protobuf::Struct* unsafe_arena_release_payload();

  // bool reset_contexts = 4;
  void clear_reset_contexts();
  static const int kResetContextsFieldNumber = 4;
  bool reset_contexts() const;
  void set_reset_contexts(bool value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.QueryParameters)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Context > contexts_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::SessionEntityType > session_entity_types_;
  ::google::protobuf::internal::ArenaStringPtr time_zone_;
  ::google::type::LatLng* geo_location_;
  ::google::protobuf::Struct* payload_;
  bool reset_contexts_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsQueryParametersImpl();
};
// -------------------------------------------------------------------

class QueryInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.QueryInput) */ {
 public:
  QueryInput();
  virtual ~QueryInput();

  QueryInput(const QueryInput& from);

  inline QueryInput& operator=(const QueryInput& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryInput(QueryInput&& from) noexcept
    : QueryInput() {
    *this = ::std::move(from);
  }

  inline QueryInput& operator=(QueryInput&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryInput& default_instance();

  enum InputCase {
    kAudioConfig = 1,
    kText = 2,
    kEvent = 3,
    INPUT_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryInput* internal_default_instance() {
    return reinterpret_cast<const QueryInput*>(
               &_QueryInput_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(QueryInput* other);
  void Swap(QueryInput* other);
  friend void swap(QueryInput& a, QueryInput& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryInput* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryInput* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryInput& from);
  void MergeFrom(const QueryInput& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryInput* other);
  protected:
  explicit QueryInput(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.cloud.dialogflow.v2beta1.InputAudioConfig audio_config = 1;
  bool has_audio_config() const;
  void clear_audio_config();
  static const int kAudioConfigFieldNumber = 1;
  private:
  void _slow_mutable_audio_config();
  public:
  const ::google::cloud::dialogflow::v2beta1::InputAudioConfig& audio_config() const;
  ::google::cloud::dialogflow::v2beta1::InputAudioConfig* release_audio_config();
  ::google::cloud::dialogflow::v2beta1::InputAudioConfig* mutable_audio_config();
  void set_allocated_audio_config(::google::cloud::dialogflow::v2beta1::InputAudioConfig* audio_config);
  void unsafe_arena_set_allocated_audio_config(
      ::google::cloud::dialogflow::v2beta1::InputAudioConfig* audio_config);
  ::google::cloud::dialogflow::v2beta1::InputAudioConfig* unsafe_arena_release_audio_config();

  // .google.cloud.dialogflow.v2beta1.TextInput text = 2;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 2;
  private:
  void _slow_mutable_text();
  public:
  const ::google::cloud::dialogflow::v2beta1::TextInput& text() const;
  ::google::cloud::dialogflow::v2beta1::TextInput* release_text();
  ::google::cloud::dialogflow::v2beta1::TextInput* mutable_text();
  void set_allocated_text(::google::cloud::dialogflow::v2beta1::TextInput* text);
  void unsafe_arena_set_allocated_text(
      ::google::cloud::dialogflow::v2beta1::TextInput* text);
  ::google::cloud::dialogflow::v2beta1::TextInput* unsafe_arena_release_text();

  // .google.cloud.dialogflow.v2beta1.EventInput event = 3;
  bool has_event() const;
  void clear_event();
  static const int kEventFieldNumber = 3;
  private:
  void _slow_mutable_event();
  public:
  const ::google::cloud::dialogflow::v2beta1::EventInput& event() const;
  ::google::cloud::dialogflow::v2beta1::EventInput* release_event();
  ::google::cloud::dialogflow::v2beta1::EventInput* mutable_event();
  void set_allocated_event(::google::cloud::dialogflow::v2beta1::EventInput* event);
  void unsafe_arena_set_allocated_event(
      ::google::cloud::dialogflow::v2beta1::EventInput* event);
  ::google::cloud::dialogflow::v2beta1::EventInput* unsafe_arena_release_event();

  InputCase input_case() const;
  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.QueryInput)
 private:
  void set_has_audio_config();
  void set_has_text();
  void set_has_event();

  inline bool has_input() const;
  void clear_input();
  inline void clear_has_input();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union InputUnion {
    InputUnion() {}
    ::google::cloud::dialogflow::v2beta1::InputAudioConfig* audio_config_;
    ::google::cloud::dialogflow::v2beta1::TextInput* text_;
    ::google::cloud::dialogflow::v2beta1::EventInput* event_;
  } input_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsQueryInputImpl();
};
// -------------------------------------------------------------------

class QueryResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.QueryResult) */ {
 public:
  QueryResult();
  virtual ~QueryResult();

  QueryResult(const QueryResult& from);

  inline QueryResult& operator=(const QueryResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryResult(QueryResult&& from) noexcept
    : QueryResult() {
    *this = ::std::move(from);
  }

  inline QueryResult& operator=(QueryResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryResult* internal_default_instance() {
    return reinterpret_cast<const QueryResult*>(
               &_QueryResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(QueryResult* other);
  void Swap(QueryResult* other);
  friend void swap(QueryResult& a, QueryResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryResult* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryResult& from);
  void MergeFrom(const QueryResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryResult* other);
  protected:
  explicit QueryResult(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message fulfillment_messages = 7;
  int fulfillment_messages_size() const;
  void clear_fulfillment_messages();
  static const int kFulfillmentMessagesFieldNumber = 7;
  const ::google::cloud::dialogflow::v2beta1::Intent_Message& fulfillment_messages(int index) const;
  ::google::cloud::dialogflow::v2beta1::Intent_Message* mutable_fulfillment_messages(int index);
  ::google::cloud::dialogflow::v2beta1::Intent_Message* add_fulfillment_messages();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message >*
      mutable_fulfillment_messages();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message >&
      fulfillment_messages() const;

  // repeated .google.cloud.dialogflow.v2beta1.Context output_contexts = 10;
  int output_contexts_size() const;
  void clear_output_contexts();
  static const int kOutputContextsFieldNumber = 10;
  const ::google::cloud::dialogflow::v2beta1::Context& output_contexts(int index) const;
  ::google::cloud::dialogflow::v2beta1::Context* mutable_output_contexts(int index);
  ::google::cloud::dialogflow::v2beta1::Context* add_output_contexts();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Context >*
      mutable_output_contexts();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Context >&
      output_contexts() const;

  // string query_text = 1;
  void clear_query_text();
  static const int kQueryTextFieldNumber = 1;
  const ::std::string& query_text() const;
  void set_query_text(const ::std::string& value);
  #if LANG_CXX11
  void set_query_text(::std::string&& value);
  #endif
  void set_query_text(const char* value);
  void set_query_text(const char* value, size_t size);
  ::std::string* mutable_query_text();
  ::std::string* release_query_text();
  void set_allocated_query_text(::std::string* query_text);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_query_text();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_query_text(
      ::std::string* query_text);

  // string action = 3;
  void clear_action();
  static const int kActionFieldNumber = 3;
  const ::std::string& action() const;
  void set_action(const ::std::string& value);
  #if LANG_CXX11
  void set_action(::std::string&& value);
  #endif
  void set_action(const char* value);
  void set_action(const char* value, size_t size);
  ::std::string* mutable_action();
  ::std::string* release_action();
  void set_allocated_action(::std::string* action);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_action();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_action(
      ::std::string* action);

  // string fulfillment_text = 6;
  void clear_fulfillment_text();
  static const int kFulfillmentTextFieldNumber = 6;
  const ::std::string& fulfillment_text() const;
  void set_fulfillment_text(const ::std::string& value);
  #if LANG_CXX11
  void set_fulfillment_text(::std::string&& value);
  #endif
  void set_fulfillment_text(const char* value);
  void set_fulfillment_text(const char* value, size_t size);
  ::std::string* mutable_fulfillment_text();
  ::std::string* release_fulfillment_text();
  void set_allocated_fulfillment_text(::std::string* fulfillment_text);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_fulfillment_text();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_fulfillment_text(
      ::std::string* fulfillment_text);

  // string webhook_source = 8;
  void clear_webhook_source();
  static const int kWebhookSourceFieldNumber = 8;
  const ::std::string& webhook_source() const;
  void set_webhook_source(const ::std::string& value);
  #if LANG_CXX11
  void set_webhook_source(::std::string&& value);
  #endif
  void set_webhook_source(const char* value);
  void set_webhook_source(const char* value, size_t size);
  ::std::string* mutable_webhook_source();
  ::std::string* release_webhook_source();
  void set_allocated_webhook_source(::std::string* webhook_source);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_webhook_source();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_webhook_source(
      ::std::string* webhook_source);

  // string language_code = 15;
  void clear_language_code();
  static const int kLanguageCodeFieldNumber = 15;
  const ::std::string& language_code() const;
  void set_language_code(const ::std::string& value);
  #if LANG_CXX11
  void set_language_code(::std::string&& value);
  #endif
  void set_language_code(const char* value);
  void set_language_code(const char* value, size_t size);
  ::std::string* mutable_language_code();
  ::std::string* release_language_code();
  void set_allocated_language_code(::std::string* language_code);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_language_code();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_language_code(
      ::std::string* language_code);

  // .google.protobuf.Struct parameters = 4;
  bool has_parameters() const;
  void clear_parameters();
  static const int kParametersFieldNumber = 4;
  private:
  void _slow_mutable_parameters();
  public:
  const ::google::protobuf::Struct& parameters() const;
  ::google::protobuf::Struct* release_parameters();
  ::google::protobuf::Struct* mutable_parameters();
  void set_allocated_parameters(::google::protobuf::Struct* parameters);
  void unsafe_arena_set_allocated_parameters(
      ::google::protobuf::Struct* parameters);
  ::google::protobuf::Struct* unsafe_arena_release_parameters();

  // .google.protobuf.Struct webhook_payload = 9;
  bool has_webhook_payload() const;
  void clear_webhook_payload();
  static const int kWebhookPayloadFieldNumber = 9;
  private:
  void _slow_mutable_webhook_payload();
  public:
  const ::google::protobuf::Struct& webhook_payload() const;
  ::google::protobuf::Struct* release_webhook_payload();
  ::google::protobuf::Struct* mutable_webhook_payload();
  void set_allocated_webhook_payload(::google::protobuf::Struct* webhook_payload);
  void unsafe_arena_set_allocated_webhook_payload(
      ::google::protobuf::Struct* webhook_payload);
  ::google::protobuf::Struct* unsafe_arena_release_webhook_payload();

  // .google.cloud.dialogflow.v2beta1.Intent intent = 11;
  bool has_intent() const;
  void clear_intent();
  static const int kIntentFieldNumber = 11;
  private:
  void _slow_mutable_intent();
  public:
  const ::google::cloud::dialogflow::v2beta1::Intent& intent() const;
  ::google::cloud::dialogflow::v2beta1::Intent* release_intent();
  ::google::cloud::dialogflow::v2beta1::Intent* mutable_intent();
  void set_allocated_intent(::google::cloud::dialogflow::v2beta1::Intent* intent);
  void unsafe_arena_set_allocated_intent(
      ::google::cloud::dialogflow::v2beta1::Intent* intent);
  ::google::cloud::dialogflow::v2beta1::Intent* unsafe_arena_release_intent();

  // .google.protobuf.Struct diagnostic_info = 14;
  bool has_diagnostic_info() const;
  void clear_diagnostic_info();
  static const int kDiagnosticInfoFieldNumber = 14;
  private:
  void _slow_mutable_diagnostic_info();
  public:
  const ::google::protobuf::Struct& diagnostic_info() const;
  ::google::protobuf::Struct* release_diagnostic_info();
  ::google::protobuf::Struct* mutable_diagnostic_info();
  void set_allocated_diagnostic_info(::google::protobuf::Struct* diagnostic_info);
  void unsafe_arena_set_allocated_diagnostic_info(
      ::google::protobuf::Struct* diagnostic_info);
  ::google::protobuf::Struct* unsafe_arena_release_diagnostic_info();

  // float speech_recognition_confidence = 2;
  void clear_speech_recognition_confidence();
  static const int kSpeechRecognitionConfidenceFieldNumber = 2;
  float speech_recognition_confidence() const;
  void set_speech_recognition_confidence(float value);

  // bool all_required_params_present = 5;
  void clear_all_required_params_present();
  static const int kAllRequiredParamsPresentFieldNumber = 5;
  bool all_required_params_present() const;
  void set_all_required_params_present(bool value);

  // float intent_detection_confidence = 12;
  void clear_intent_detection_confidence();
  static const int kIntentDetectionConfidenceFieldNumber = 12;
  float intent_detection_confidence() const;
  void set_intent_detection_confidence(float value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.QueryResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message > fulfillment_messages_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Context > output_contexts_;
  ::google::protobuf::internal::ArenaStringPtr query_text_;
  ::google::protobuf::internal::ArenaStringPtr action_;
  ::google::protobuf::internal::ArenaStringPtr fulfillment_text_;
  ::google::protobuf::internal::ArenaStringPtr webhook_source_;
  ::google::protobuf::internal::ArenaStringPtr language_code_;
  ::google::protobuf::Struct* parameters_;
  ::google::protobuf::Struct* webhook_payload_;
  ::google::cloud::dialogflow::v2beta1::Intent* intent_;
  ::google::protobuf::Struct* diagnostic_info_;
  float speech_recognition_confidence_;
  bool all_required_params_present_;
  float intent_detection_confidence_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsQueryResultImpl();
};
// -------------------------------------------------------------------

class StreamingDetectIntentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest) */ {
 public:
  StreamingDetectIntentRequest();
  virtual ~StreamingDetectIntentRequest();

  StreamingDetectIntentRequest(const StreamingDetectIntentRequest& from);

  inline StreamingDetectIntentRequest& operator=(const StreamingDetectIntentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StreamingDetectIntentRequest(StreamingDetectIntentRequest&& from) noexcept
    : StreamingDetectIntentRequest() {
    *this = ::std::move(from);
  }

  inline StreamingDetectIntentRequest& operator=(StreamingDetectIntentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const StreamingDetectIntentRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StreamingDetectIntentRequest* internal_default_instance() {
    return reinterpret_cast<const StreamingDetectIntentRequest*>(
               &_StreamingDetectIntentRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(StreamingDetectIntentRequest* other);
  void Swap(StreamingDetectIntentRequest* other);
  friend void swap(StreamingDetectIntentRequest& a, StreamingDetectIntentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StreamingDetectIntentRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  StreamingDetectIntentRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StreamingDetectIntentRequest& from);
  void MergeFrom(const StreamingDetectIntentRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StreamingDetectIntentRequest* other);
  protected:
  explicit StreamingDetectIntentRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string session = 1;
  void clear_session();
  static const int kSessionFieldNumber = 1;
  const ::std::string& session() const;
  void set_session(const ::std::string& value);
  #if LANG_CXX11
  void set_session(::std::string&& value);
  #endif
  void set_session(const char* value);
  void set_session(const char* value, size_t size);
  ::std::string* mutable_session();
  ::std::string* release_session();
  void set_allocated_session(::std::string* session);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_session();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_session(
      ::std::string* session);

  // bytes input_audio = 6;
  void clear_input_audio();
  static const int kInputAudioFieldNumber = 6;
  const ::std::string& input_audio() const;
  void set_input_audio(const ::std::string& value);
  #if LANG_CXX11
  void set_input_audio(::std::string&& value);
  #endif
  void set_input_audio(const char* value);
  void set_input_audio(const void* value, size_t size);
  ::std::string* mutable_input_audio();
  ::std::string* release_input_audio();
  void set_allocated_input_audio(::std::string* input_audio);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_input_audio();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_input_audio(
      ::std::string* input_audio);

  // .google.cloud.dialogflow.v2beta1.QueryParameters query_params = 2;
  bool has_query_params() const;
  void clear_query_params();
  static const int kQueryParamsFieldNumber = 2;
  private:
  void _slow_mutable_query_params();
  public:
  const ::google::cloud::dialogflow::v2beta1::QueryParameters& query_params() const;
  ::google::cloud::dialogflow::v2beta1::QueryParameters* release_query_params();
  ::google::cloud::dialogflow::v2beta1::QueryParameters* mutable_query_params();
  void set_allocated_query_params(::google::cloud::dialogflow::v2beta1::QueryParameters* query_params);
  void unsafe_arena_set_allocated_query_params(
      ::google::cloud::dialogflow::v2beta1::QueryParameters* query_params);
  ::google::cloud::dialogflow::v2beta1::QueryParameters* unsafe_arena_release_query_params();

  // .google.cloud.dialogflow.v2beta1.QueryInput query_input = 3;
  bool has_query_input() const;
  void clear_query_input();
  static const int kQueryInputFieldNumber = 3;
  private:
  void _slow_mutable_query_input();
  public:
  const ::google::cloud::dialogflow::v2beta1::QueryInput& query_input() const;
  ::google::cloud::dialogflow::v2beta1::QueryInput* release_query_input();
  ::google::cloud::dialogflow::v2beta1::QueryInput* mutable_query_input();
  void set_allocated_query_input(::google::cloud::dialogflow::v2beta1::QueryInput* query_input);
  void unsafe_arena_set_allocated_query_input(
      ::google::cloud::dialogflow::v2beta1::QueryInput* query_input);
  ::google::cloud::dialogflow::v2beta1::QueryInput* unsafe_arena_release_query_input();

  // bool single_utterance = 4;
  void clear_single_utterance();
  static const int kSingleUtteranceFieldNumber = 4;
  bool single_utterance() const;
  void set_single_utterance(bool value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr session_;
  ::google::protobuf::internal::ArenaStringPtr input_audio_;
  ::google::cloud::dialogflow::v2beta1::QueryParameters* query_params_;
  ::google::cloud::dialogflow::v2beta1::QueryInput* query_input_;
  bool single_utterance_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsStreamingDetectIntentRequestImpl();
};
// -------------------------------------------------------------------

class StreamingDetectIntentResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse) */ {
 public:
  StreamingDetectIntentResponse();
  virtual ~StreamingDetectIntentResponse();

  StreamingDetectIntentResponse(const StreamingDetectIntentResponse& from);

  inline StreamingDetectIntentResponse& operator=(const StreamingDetectIntentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StreamingDetectIntentResponse(StreamingDetectIntentResponse&& from) noexcept
    : StreamingDetectIntentResponse() {
    *this = ::std::move(from);
  }

  inline StreamingDetectIntentResponse& operator=(StreamingDetectIntentResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const StreamingDetectIntentResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StreamingDetectIntentResponse* internal_default_instance() {
    return reinterpret_cast<const StreamingDetectIntentResponse*>(
               &_StreamingDetectIntentResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(StreamingDetectIntentResponse* other);
  void Swap(StreamingDetectIntentResponse* other);
  friend void swap(StreamingDetectIntentResponse& a, StreamingDetectIntentResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StreamingDetectIntentResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  StreamingDetectIntentResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StreamingDetectIntentResponse& from);
  void MergeFrom(const StreamingDetectIntentResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StreamingDetectIntentResponse* other);
  protected:
  explicit StreamingDetectIntentResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string response_id = 1;
  void clear_response_id();
  static const int kResponseIdFieldNumber = 1;
  const ::std::string& response_id() const;
  void set_response_id(const ::std::string& value);
  #if LANG_CXX11
  void set_response_id(::std::string&& value);
  #endif
  void set_response_id(const char* value);
  void set_response_id(const char* value, size_t size);
  ::std::string* mutable_response_id();
  ::std::string* release_response_id();
  void set_allocated_response_id(::std::string* response_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_response_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_response_id(
      ::std::string* response_id);

  // .google.cloud.dialogflow.v2beta1.StreamingRecognitionResult recognition_result = 2;
  bool has_recognition_result() const;
  void clear_recognition_result();
  static const int kRecognitionResultFieldNumber = 2;
  private:
  void _slow_mutable_recognition_result();
  public:
  const ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult& recognition_result() const;
  ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult* release_recognition_result();
  ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult* mutable_recognition_result();
  void set_allocated_recognition_result(::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult* recognition_result);
  void unsafe_arena_set_allocated_recognition_result(
      ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult* recognition_result);
  ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult* unsafe_arena_release_recognition_result();

  // .google.cloud.dialogflow.v2beta1.QueryResult query_result = 3;
  bool has_query_result() const;
  void clear_query_result();
  static const int kQueryResultFieldNumber = 3;
  private:
  void _slow_mutable_query_result();
  public:
  const ::google::cloud::dialogflow::v2beta1::QueryResult& query_result() const;
  ::google::cloud::dialogflow::v2beta1::QueryResult* release_query_result();
  ::google::cloud::dialogflow::v2beta1::QueryResult* mutable_query_result();
  void set_allocated_query_result(::google::cloud::dialogflow::v2beta1::QueryResult* query_result);
  void unsafe_arena_set_allocated_query_result(
      ::google::cloud::dialogflow::v2beta1::QueryResult* query_result);
  ::google::cloud::dialogflow::v2beta1::QueryResult* unsafe_arena_release_query_result();

  // .google.rpc.Status webhook_status = 4;
  bool has_webhook_status() const;
  void clear_webhook_status();
  static const int kWebhookStatusFieldNumber = 4;
  private:
  void _slow_mutable_webhook_status();
  public:
  const ::google::rpc::Status& webhook_status() const;
  ::google::rpc::Status* release_webhook_status();
  ::google::rpc::Status* mutable_webhook_status();
  void set_allocated_webhook_status(::google::rpc::Status* webhook_status);
  void unsafe_arena_set_allocated_webhook_status(
      ::google::rpc::Status* webhook_status);
  ::google::rpc::Status* unsafe_arena_release_webhook_status();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr response_id_;
  ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult* recognition_result_;
  ::google::cloud::dialogflow::v2beta1::QueryResult* query_result_;
  ::google::rpc::Status* webhook_status_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsStreamingDetectIntentResponseImpl();
};
// -------------------------------------------------------------------

class StreamingRecognitionResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult) */ {
 public:
  StreamingRecognitionResult();
  virtual ~StreamingRecognitionResult();

  StreamingRecognitionResult(const StreamingRecognitionResult& from);

  inline StreamingRecognitionResult& operator=(const StreamingRecognitionResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StreamingRecognitionResult(StreamingRecognitionResult&& from) noexcept
    : StreamingRecognitionResult() {
    *this = ::std::move(from);
  }

  inline StreamingRecognitionResult& operator=(StreamingRecognitionResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const StreamingRecognitionResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StreamingRecognitionResult* internal_default_instance() {
    return reinterpret_cast<const StreamingRecognitionResult*>(
               &_StreamingRecognitionResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(StreamingRecognitionResult* other);
  void Swap(StreamingRecognitionResult* other);
  friend void swap(StreamingRecognitionResult& a, StreamingRecognitionResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StreamingRecognitionResult* New() const PROTOBUF_FINAL { return New(NULL); }

  StreamingRecognitionResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StreamingRecognitionResult& from);
  void MergeFrom(const StreamingRecognitionResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StreamingRecognitionResult* other);
  protected:
  explicit StreamingRecognitionResult(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef StreamingRecognitionResult_MessageType MessageType;
  static const MessageType MESSAGE_TYPE_UNSPECIFIED =
    StreamingRecognitionResult_MessageType_MESSAGE_TYPE_UNSPECIFIED;
  static const MessageType TRANSCRIPT =
    StreamingRecognitionResult_MessageType_TRANSCRIPT;
  static const MessageType END_OF_SINGLE_UTTERANCE =
    StreamingRecognitionResult_MessageType_END_OF_SINGLE_UTTERANCE;
  static inline bool MessageType_IsValid(int value) {
    return StreamingRecognitionResult_MessageType_IsValid(value);
  }
  static const MessageType MessageType_MIN =
    StreamingRecognitionResult_MessageType_MessageType_MIN;
  static const MessageType MessageType_MAX =
    StreamingRecognitionResult_MessageType_MessageType_MAX;
  static const int MessageType_ARRAYSIZE =
    StreamingRecognitionResult_MessageType_MessageType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MessageType_descriptor() {
    return StreamingRecognitionResult_MessageType_descriptor();
  }
  static inline const ::std::string& MessageType_Name(MessageType value) {
    return StreamingRecognitionResult_MessageType_Name(value);
  }
  static inline bool MessageType_Parse(const ::std::string& name,
      MessageType* value) {
    return StreamingRecognitionResult_MessageType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string transcript = 2;
  void clear_transcript();
  static const int kTranscriptFieldNumber = 2;
  const ::std::string& transcript() const;
  void set_transcript(const ::std::string& value);
  #if LANG_CXX11
  void set_transcript(::std::string&& value);
  #endif
  void set_transcript(const char* value);
  void set_transcript(const char* value, size_t size);
  ::std::string* mutable_transcript();
  ::std::string* release_transcript();
  void set_allocated_transcript(::std::string* transcript);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_transcript();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_transcript(
      ::std::string* transcript);

  // .google.cloud.dialogflow.v2beta1.StreamingRecognitionResult.MessageType message_type = 1;
  void clear_message_type();
  static const int kMessageTypeFieldNumber = 1;
  ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult_MessageType message_type() const;
  void set_message_type(::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult_MessageType value);

  // bool is_final = 3;
  void clear_is_final();
  static const int kIsFinalFieldNumber = 3;
  bool is_final() const;
  void set_is_final(bool value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr transcript_;
  int message_type_;
  bool is_final_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsStreamingRecognitionResultImpl();
};
// -------------------------------------------------------------------

class InputAudioConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.InputAudioConfig) */ {
 public:
  InputAudioConfig();
  virtual ~InputAudioConfig();

  InputAudioConfig(const InputAudioConfig& from);

  inline InputAudioConfig& operator=(const InputAudioConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InputAudioConfig(InputAudioConfig&& from) noexcept
    : InputAudioConfig() {
    *this = ::std::move(from);
  }

  inline InputAudioConfig& operator=(InputAudioConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const InputAudioConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputAudioConfig* internal_default_instance() {
    return reinterpret_cast<const InputAudioConfig*>(
               &_InputAudioConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(InputAudioConfig* other);
  void Swap(InputAudioConfig* other);
  friend void swap(InputAudioConfig& a, InputAudioConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InputAudioConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  InputAudioConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InputAudioConfig& from);
  void MergeFrom(const InputAudioConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InputAudioConfig* other);
  protected:
  explicit InputAudioConfig(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string phrase_hints = 4;
  int phrase_hints_size() const;
  void clear_phrase_hints();
  static const int kPhraseHintsFieldNumber = 4;
  const ::std::string& phrase_hints(int index) const;
  ::std::string* mutable_phrase_hints(int index);
  void set_phrase_hints(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_phrase_hints(int index, ::std::string&& value);
  #endif
  void set_phrase_hints(int index, const char* value);
  void set_phrase_hints(int index, const char* value, size_t size);
  ::std::string* add_phrase_hints();
  void add_phrase_hints(const ::std::string& value);
  #if LANG_CXX11
  void add_phrase_hints(::std::string&& value);
  #endif
  void add_phrase_hints(const char* value);
  void add_phrase_hints(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& phrase_hints() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_phrase_hints();

  // string language_code = 3;
  void clear_language_code();
  static const int kLanguageCodeFieldNumber = 3;
  const ::std::string& language_code() const;
  void set_language_code(const ::std::string& value);
  #if LANG_CXX11
  void set_language_code(::std::string&& value);
  #endif
  void set_language_code(const char* value);
  void set_language_code(const char* value, size_t size);
  ::std::string* mutable_language_code();
  ::std::string* release_language_code();
  void set_allocated_language_code(::std::string* language_code);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_language_code();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_language_code(
      ::std::string* language_code);

  // .google.cloud.dialogflow.v2beta1.AudioEncoding audio_encoding = 1;
  void clear_audio_encoding();
  static const int kAudioEncodingFieldNumber = 1;
  ::google::cloud::dialogflow::v2beta1::AudioEncoding audio_encoding() const;
  void set_audio_encoding(::google::cloud::dialogflow::v2beta1::AudioEncoding value);

  // int32 sample_rate_hertz = 2;
  void clear_sample_rate_hertz();
  static const int kSampleRateHertzFieldNumber = 2;
  ::google::protobuf::int32 sample_rate_hertz() const;
  void set_sample_rate_hertz(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.InputAudioConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> phrase_hints_;
  ::google::protobuf::internal::ArenaStringPtr language_code_;
  int audio_encoding_;
  ::google::protobuf::int32 sample_rate_hertz_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsInputAudioConfigImpl();
};
// -------------------------------------------------------------------

class TextInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.TextInput) */ {
 public:
  TextInput();
  virtual ~TextInput();

  TextInput(const TextInput& from);

  inline TextInput& operator=(const TextInput& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TextInput(TextInput&& from) noexcept
    : TextInput() {
    *this = ::std::move(from);
  }

  inline TextInput& operator=(TextInput&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const TextInput& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TextInput* internal_default_instance() {
    return reinterpret_cast<const TextInput*>(
               &_TextInput_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(TextInput* other);
  void Swap(TextInput* other);
  friend void swap(TextInput& a, TextInput& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TextInput* New() const PROTOBUF_FINAL { return New(NULL); }

  TextInput* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TextInput& from);
  void MergeFrom(const TextInput& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TextInput* other);
  protected:
  explicit TextInput(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string text = 1;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_text();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_text(
      ::std::string* text);

  // string language_code = 2;
  void clear_language_code();
  static const int kLanguageCodeFieldNumber = 2;
  const ::std::string& language_code() const;
  void set_language_code(const ::std::string& value);
  #if LANG_CXX11
  void set_language_code(::std::string&& value);
  #endif
  void set_language_code(const char* value);
  void set_language_code(const char* value, size_t size);
  ::std::string* mutable_language_code();
  ::std::string* release_language_code();
  void set_allocated_language_code(::std::string* language_code);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_language_code();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_language_code(
      ::std::string* language_code);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.TextInput)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr language_code_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsTextInputImpl();
};
// -------------------------------------------------------------------

class EventInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.EventInput) */ {
 public:
  EventInput();
  virtual ~EventInput();

  EventInput(const EventInput& from);

  inline EventInput& operator=(const EventInput& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EventInput(EventInput&& from) noexcept
    : EventInput() {
    *this = ::std::move(from);
  }

  inline EventInput& operator=(EventInput&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const EventInput& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EventInput* internal_default_instance() {
    return reinterpret_cast<const EventInput*>(
               &_EventInput_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void UnsafeArenaSwap(EventInput* other);
  void Swap(EventInput* other);
  friend void swap(EventInput& a, EventInput& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EventInput* New() const PROTOBUF_FINAL { return New(NULL); }

  EventInput* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EventInput& from);
  void MergeFrom(const EventInput& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EventInput* other);
  protected:
  explicit EventInput(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string language_code = 3;
  void clear_language_code();
  static const int kLanguageCodeFieldNumber = 3;
  const ::std::string& language_code() const;
  void set_language_code(const ::std::string& value);
  #if LANG_CXX11
  void set_language_code(::std::string&& value);
  #endif
  void set_language_code(const char* value);
  void set_language_code(const char* value, size_t size);
  ::std::string* mutable_language_code();
  ::std::string* release_language_code();
  void set_allocated_language_code(::std::string* language_code);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_language_code();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_language_code(
      ::std::string* language_code);

  // .google.protobuf.Struct parameters = 2;
  bool has_parameters() const;
  void clear_parameters();
  static const int kParametersFieldNumber = 2;
  private:
  void _slow_mutable_parameters();
  public:
  const ::google::protobuf::Struct& parameters() const;
  ::google::protobuf::Struct* release_parameters();
  ::google::protobuf::Struct* mutable_parameters();
  void set_allocated_parameters(::google::protobuf::Struct* parameters);
  void unsafe_arena_set_allocated_parameters(
      ::google::protobuf::Struct* parameters);
  ::google::protobuf::Struct* unsafe_arena_release_parameters();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.EventInput)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr language_code_;
  ::google::protobuf::Struct* parameters_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto::InitDefaultsEventInputImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DetectIntentRequest

// string session = 1;
inline void DetectIntentRequest::clear_session() {
  session_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DetectIntentRequest::session() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.DetectIntentRequest.session)
  return session_.Get();
}
inline void DetectIntentRequest::set_session(const ::std::string& value) {
  
  session_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.DetectIntentRequest.session)
}
#if LANG_CXX11
inline void DetectIntentRequest::set_session(::std::string&& value) {
  
  session_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.DetectIntentRequest.session)
}
#endif
inline void DetectIntentRequest::set_session(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  session_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.DetectIntentRequest.session)
}
inline void DetectIntentRequest::set_session(const char* value,
    size_t size) {
  
  session_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.DetectIntentRequest.session)
}
inline ::std::string* DetectIntentRequest::mutable_session() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.DetectIntentRequest.session)
  return session_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DetectIntentRequest::release_session() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.DetectIntentRequest.session)
  
  return session_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void DetectIntentRequest::set_allocated_session(::std::string* session) {
  if (session != NULL) {
    
  } else {
    
  }
  session_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.DetectIntentRequest.session)
}
inline ::std::string* DetectIntentRequest::unsafe_arena_release_session() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.DetectIntentRequest.session)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return session_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DetectIntentRequest::unsafe_arena_set_allocated_session(
    ::std::string* session) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (session != NULL) {
    
  } else {
    
  }
  session_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      session, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.DetectIntentRequest.session)
}

// .google.cloud.dialogflow.v2beta1.QueryParameters query_params = 2;
inline bool DetectIntentRequest::has_query_params() const {
  return this != internal_default_instance() && query_params_ != NULL;
}
inline void DetectIntentRequest::clear_query_params() {
  if (GetArenaNoVirtual() == NULL && query_params_ != NULL) {
    delete query_params_;
  }
  query_params_ = NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::QueryParameters& DetectIntentRequest::query_params() const {
  const ::google::cloud::dialogflow::v2beta1::QueryParameters* p = query_params_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.DetectIntentRequest.query_params)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::QueryParameters*>(
      &::google::cloud::dialogflow::v2beta1::_QueryParameters_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::QueryParameters* DetectIntentRequest::release_query_params() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.DetectIntentRequest.query_params)
  
  ::google::cloud::dialogflow::v2beta1::QueryParameters* temp = query_params_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  query_params_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::QueryParameters* DetectIntentRequest::unsafe_arena_release_query_params() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.DetectIntentRequest.query_params)
  
  ::google::cloud::dialogflow::v2beta1::QueryParameters* temp = query_params_;
  query_params_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::QueryParameters* DetectIntentRequest::mutable_query_params() {
  
  if (query_params_ == NULL) {
    _slow_mutable_query_params();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.DetectIntentRequest.query_params)
  return query_params_;
}
inline void DetectIntentRequest::set_allocated_query_params(::google::cloud::dialogflow::v2beta1::QueryParameters* query_params) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete query_params_;
  }
  if (query_params) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(query_params);
    if (message_arena != submessage_arena) {
      query_params = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_params, submessage_arena);
    }
    
  } else {
    
  }
  query_params_ = query_params;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.DetectIntentRequest.query_params)
}

// .google.cloud.dialogflow.v2beta1.QueryInput query_input = 3;
inline bool DetectIntentRequest::has_query_input() const {
  return this != internal_default_instance() && query_input_ != NULL;
}
inline void DetectIntentRequest::clear_query_input() {
  if (GetArenaNoVirtual() == NULL && query_input_ != NULL) {
    delete query_input_;
  }
  query_input_ = NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::QueryInput& DetectIntentRequest::query_input() const {
  const ::google::cloud::dialogflow::v2beta1::QueryInput* p = query_input_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.DetectIntentRequest.query_input)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::QueryInput*>(
      &::google::cloud::dialogflow::v2beta1::_QueryInput_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::QueryInput* DetectIntentRequest::release_query_input() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.DetectIntentRequest.query_input)
  
  ::google::cloud::dialogflow::v2beta1::QueryInput* temp = query_input_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  query_input_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::QueryInput* DetectIntentRequest::unsafe_arena_release_query_input() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.DetectIntentRequest.query_input)
  
  ::google::cloud::dialogflow::v2beta1::QueryInput* temp = query_input_;
  query_input_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::QueryInput* DetectIntentRequest::mutable_query_input() {
  
  if (query_input_ == NULL) {
    _slow_mutable_query_input();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.DetectIntentRequest.query_input)
  return query_input_;
}
inline void DetectIntentRequest::set_allocated_query_input(::google::cloud::dialogflow::v2beta1::QueryInput* query_input) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete query_input_;
  }
  if (query_input) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(query_input);
    if (message_arena != submessage_arena) {
      query_input = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_input, submessage_arena);
    }
    
  } else {
    
  }
  query_input_ = query_input;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.DetectIntentRequest.query_input)
}

// bytes input_audio = 5;
inline void DetectIntentRequest::clear_input_audio() {
  input_audio_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DetectIntentRequest::input_audio() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.DetectIntentRequest.input_audio)
  return input_audio_.Get();
}
inline void DetectIntentRequest::set_input_audio(const ::std::string& value) {
  
  input_audio_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.DetectIntentRequest.input_audio)
}
#if LANG_CXX11
inline void DetectIntentRequest::set_input_audio(::std::string&& value) {
  
  input_audio_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.DetectIntentRequest.input_audio)
}
#endif
inline void DetectIntentRequest::set_input_audio(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  input_audio_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.DetectIntentRequest.input_audio)
}
inline void DetectIntentRequest::set_input_audio(const void* value,
    size_t size) {
  
  input_audio_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.DetectIntentRequest.input_audio)
}
inline ::std::string* DetectIntentRequest::mutable_input_audio() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.DetectIntentRequest.input_audio)
  return input_audio_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DetectIntentRequest::release_input_audio() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.DetectIntentRequest.input_audio)
  
  return input_audio_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void DetectIntentRequest::set_allocated_input_audio(::std::string* input_audio) {
  if (input_audio != NULL) {
    
  } else {
    
  }
  input_audio_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_audio,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.DetectIntentRequest.input_audio)
}
inline ::std::string* DetectIntentRequest::unsafe_arena_release_input_audio() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.DetectIntentRequest.input_audio)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return input_audio_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DetectIntentRequest::unsafe_arena_set_allocated_input_audio(
    ::std::string* input_audio) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (input_audio != NULL) {
    
  } else {
    
  }
  input_audio_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      input_audio, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.DetectIntentRequest.input_audio)
}

// -------------------------------------------------------------------

// DetectIntentResponse

// string response_id = 1;
inline void DetectIntentResponse::clear_response_id() {
  response_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DetectIntentResponse::response_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.DetectIntentResponse.response_id)
  return response_id_.Get();
}
inline void DetectIntentResponse::set_response_id(const ::std::string& value) {
  
  response_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.DetectIntentResponse.response_id)
}
#if LANG_CXX11
inline void DetectIntentResponse::set_response_id(::std::string&& value) {
  
  response_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.DetectIntentResponse.response_id)
}
#endif
inline void DetectIntentResponse::set_response_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  response_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.DetectIntentResponse.response_id)
}
inline void DetectIntentResponse::set_response_id(const char* value,
    size_t size) {
  
  response_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.DetectIntentResponse.response_id)
}
inline ::std::string* DetectIntentResponse::mutable_response_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.DetectIntentResponse.response_id)
  return response_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DetectIntentResponse::release_response_id() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.DetectIntentResponse.response_id)
  
  return response_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void DetectIntentResponse::set_allocated_response_id(::std::string* response_id) {
  if (response_id != NULL) {
    
  } else {
    
  }
  response_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.DetectIntentResponse.response_id)
}
inline ::std::string* DetectIntentResponse::unsafe_arena_release_response_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.DetectIntentResponse.response_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return response_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DetectIntentResponse::unsafe_arena_set_allocated_response_id(
    ::std::string* response_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (response_id != NULL) {
    
  } else {
    
  }
  response_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      response_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.DetectIntentResponse.response_id)
}

// .google.cloud.dialogflow.v2beta1.QueryResult query_result = 2;
inline bool DetectIntentResponse::has_query_result() const {
  return this != internal_default_instance() && query_result_ != NULL;
}
inline void DetectIntentResponse::clear_query_result() {
  if (GetArenaNoVirtual() == NULL && query_result_ != NULL) {
    delete query_result_;
  }
  query_result_ = NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::QueryResult& DetectIntentResponse::query_result() const {
  const ::google::cloud::dialogflow::v2beta1::QueryResult* p = query_result_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.DetectIntentResponse.query_result)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::QueryResult*>(
      &::google::cloud::dialogflow::v2beta1::_QueryResult_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::QueryResult* DetectIntentResponse::release_query_result() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.DetectIntentResponse.query_result)
  
  ::google::cloud::dialogflow::v2beta1::QueryResult* temp = query_result_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  query_result_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::QueryResult* DetectIntentResponse::unsafe_arena_release_query_result() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.DetectIntentResponse.query_result)
  
  ::google::cloud::dialogflow::v2beta1::QueryResult* temp = query_result_;
  query_result_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::QueryResult* DetectIntentResponse::mutable_query_result() {
  
  if (query_result_ == NULL) {
    _slow_mutable_query_result();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.DetectIntentResponse.query_result)
  return query_result_;
}
inline void DetectIntentResponse::set_allocated_query_result(::google::cloud::dialogflow::v2beta1::QueryResult* query_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete query_result_;
  }
  if (query_result) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(query_result);
    if (message_arena != submessage_arena) {
      query_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_result, submessage_arena);
    }
    
  } else {
    
  }
  query_result_ = query_result;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.DetectIntentResponse.query_result)
}

// .google.rpc.Status webhook_status = 3;
inline bool DetectIntentResponse::has_webhook_status() const {
  return this != internal_default_instance() && webhook_status_ != NULL;
}
inline const ::google::rpc::Status& DetectIntentResponse::webhook_status() const {
  const ::google::rpc::Status* p = webhook_status_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.DetectIntentResponse.webhook_status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::rpc::Status*>(
      &::google::rpc::_Status_default_instance_);
}
inline ::google::rpc::Status* DetectIntentResponse::release_webhook_status() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.DetectIntentResponse.webhook_status)
  
  ::google::rpc::Status* temp = webhook_status_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  webhook_status_ = NULL;
  return temp;
}
inline ::google::rpc::Status* DetectIntentResponse::unsafe_arena_release_webhook_status() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.DetectIntentResponse.webhook_status)
  
  ::google::rpc::Status* temp = webhook_status_;
  webhook_status_ = NULL;
  return temp;
}
inline ::google::rpc::Status* DetectIntentResponse::mutable_webhook_status() {
  
  if (webhook_status_ == NULL) {
    _slow_mutable_webhook_status();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.DetectIntentResponse.webhook_status)
  return webhook_status_;
}
inline void DetectIntentResponse::set_allocated_webhook_status(::google::rpc::Status* webhook_status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(webhook_status_);
  }
  if (webhook_status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      webhook_status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, webhook_status, submessage_arena);
    }
    
  } else {
    
  }
  webhook_status_ = webhook_status;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.DetectIntentResponse.webhook_status)
}

// -------------------------------------------------------------------

// QueryParameters

// string time_zone = 1;
inline void QueryParameters::clear_time_zone() {
  time_zone_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& QueryParameters::time_zone() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.QueryParameters.time_zone)
  return time_zone_.Get();
}
inline void QueryParameters::set_time_zone(const ::std::string& value) {
  
  time_zone_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.QueryParameters.time_zone)
}
#if LANG_CXX11
inline void QueryParameters::set_time_zone(::std::string&& value) {
  
  time_zone_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.QueryParameters.time_zone)
}
#endif
inline void QueryParameters::set_time_zone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  time_zone_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.QueryParameters.time_zone)
}
inline void QueryParameters::set_time_zone(const char* value,
    size_t size) {
  
  time_zone_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.QueryParameters.time_zone)
}
inline ::std::string* QueryParameters::mutable_time_zone() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.QueryParameters.time_zone)
  return time_zone_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* QueryParameters::release_time_zone() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.QueryParameters.time_zone)
  
  return time_zone_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void QueryParameters::set_allocated_time_zone(::std::string* time_zone) {
  if (time_zone != NULL) {
    
  } else {
    
  }
  time_zone_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time_zone,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.QueryParameters.time_zone)
}
inline ::std::string* QueryParameters::unsafe_arena_release_time_zone() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.QueryParameters.time_zone)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return time_zone_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void QueryParameters::unsafe_arena_set_allocated_time_zone(
    ::std::string* time_zone) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (time_zone != NULL) {
    
  } else {
    
  }
  time_zone_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      time_zone, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.QueryParameters.time_zone)
}

// .google.type.LatLng geo_location = 2;
inline bool QueryParameters::has_geo_location() const {
  return this != internal_default_instance() && geo_location_ != NULL;
}
inline const ::google::type::LatLng& QueryParameters::geo_location() const {
  const ::google::type::LatLng* p = geo_location_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.QueryParameters.geo_location)
  return p != NULL ? *p : *reinterpret_cast<const ::google::type::LatLng*>(
      &::google::type::_LatLng_default_instance_);
}
inline ::google::type::LatLng* QueryParameters::release_geo_location() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.QueryParameters.geo_location)
  
  ::google::type::LatLng* temp = geo_location_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  geo_location_ = NULL;
  return temp;
}
inline ::google::type::LatLng* QueryParameters::unsafe_arena_release_geo_location() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.QueryParameters.geo_location)
  
  ::google::type::LatLng* temp = geo_location_;
  geo_location_ = NULL;
  return temp;
}
inline ::google::type::LatLng* QueryParameters::mutable_geo_location() {
  
  if (geo_location_ == NULL) {
    _slow_mutable_geo_location();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.QueryParameters.geo_location)
  return geo_location_;
}
inline void QueryParameters::set_allocated_geo_location(::google::type::LatLng* geo_location) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(geo_location_);
  }
  if (geo_location) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      geo_location = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, geo_location, submessage_arena);
    }
    
  } else {
    
  }
  geo_location_ = geo_location;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.QueryParameters.geo_location)
}

// repeated .google.cloud.dialogflow.v2beta1.Context contexts = 3;
inline int QueryParameters::contexts_size() const {
  return contexts_.size();
}
inline const ::google::cloud::dialogflow::v2beta1::Context& QueryParameters::contexts(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.QueryParameters.contexts)
  return contexts_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::Context* QueryParameters::mutable_contexts(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.QueryParameters.contexts)
  return contexts_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::Context* QueryParameters::add_contexts() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.QueryParameters.contexts)
  return contexts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Context >*
QueryParameters::mutable_contexts() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.QueryParameters.contexts)
  return &contexts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Context >&
QueryParameters::contexts() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.QueryParameters.contexts)
  return contexts_;
}

// bool reset_contexts = 4;
inline void QueryParameters::clear_reset_contexts() {
  reset_contexts_ = false;
}
inline bool QueryParameters::reset_contexts() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.QueryParameters.reset_contexts)
  return reset_contexts_;
}
inline void QueryParameters::set_reset_contexts(bool value) {
  
  reset_contexts_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.QueryParameters.reset_contexts)
}

// repeated .google.cloud.dialogflow.v2beta1.SessionEntityType session_entity_types = 5;
inline int QueryParameters::session_entity_types_size() const {
  return session_entity_types_.size();
}
inline const ::google::cloud::dialogflow::v2beta1::SessionEntityType& QueryParameters::session_entity_types(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.QueryParameters.session_entity_types)
  return session_entity_types_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::SessionEntityType* QueryParameters::mutable_session_entity_types(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.QueryParameters.session_entity_types)
  return session_entity_types_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::SessionEntityType* QueryParameters::add_session_entity_types() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.QueryParameters.session_entity_types)
  return session_entity_types_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::SessionEntityType >*
QueryParameters::mutable_session_entity_types() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.QueryParameters.session_entity_types)
  return &session_entity_types_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::SessionEntityType >&
QueryParameters::session_entity_types() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.QueryParameters.session_entity_types)
  return session_entity_types_;
}

// .google.protobuf.Struct payload = 6;
inline bool QueryParameters::has_payload() const {
  return this != internal_default_instance() && payload_ != NULL;
}
inline const ::google::protobuf::Struct& QueryParameters::payload() const {
  const ::google::protobuf::Struct* p = payload_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.QueryParameters.payload)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Struct*>(
      &::google::protobuf::_Struct_default_instance_);
}
inline ::google::protobuf::Struct* QueryParameters::release_payload() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.QueryParameters.payload)
  
  ::google::protobuf::Struct* temp = payload_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  payload_ = NULL;
  return temp;
}
inline ::google::protobuf::Struct* QueryParameters::unsafe_arena_release_payload() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.QueryParameters.payload)
  
  ::google::protobuf::Struct* temp = payload_;
  payload_ = NULL;
  return temp;
}
inline ::google::protobuf::Struct* QueryParameters::mutable_payload() {
  
  if (payload_ == NULL) {
    _slow_mutable_payload();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.QueryParameters.payload)
  return payload_;
}
inline void QueryParameters::set_allocated_payload(::google::protobuf::Struct* payload) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(payload_);
  }
  if (payload) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(payload)->GetArena();
    if (message_arena != submessage_arena) {
      payload = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, payload, submessage_arena);
    }
    
  } else {
    
  }
  payload_ = payload;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.QueryParameters.payload)
}

// -------------------------------------------------------------------

// QueryInput

// .google.cloud.dialogflow.v2beta1.InputAudioConfig audio_config = 1;
inline bool QueryInput::has_audio_config() const {
  return input_case() == kAudioConfig;
}
inline void QueryInput::set_has_audio_config() {
  _oneof_case_[0] = kAudioConfig;
}
inline void QueryInput::clear_audio_config() {
  if (has_audio_config()) {
    if (GetArenaNoVirtual() == NULL) {
      delete input_.audio_config_;
    }
    clear_has_input();
  }
}
inline ::google::cloud::dialogflow::v2beta1::InputAudioConfig* QueryInput::release_audio_config() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.QueryInput.audio_config)
  if (has_audio_config()) {
    clear_has_input();
      ::google::cloud::dialogflow::v2beta1::InputAudioConfig* temp = input_.audio_config_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    input_.audio_config_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::dialogflow::v2beta1::InputAudioConfig& QueryInput::audio_config() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.QueryInput.audio_config)
  return has_audio_config()
      ? *input_.audio_config_
      : *reinterpret_cast< ::google::cloud::dialogflow::v2beta1::InputAudioConfig*>(&::google::cloud::dialogflow::v2beta1::_InputAudioConfig_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::InputAudioConfig* QueryInput::unsafe_arena_release_audio_config() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.QueryInput.audio_config)
  if (has_audio_config()) {
    clear_has_input();
    ::google::cloud::dialogflow::v2beta1::InputAudioConfig* temp = input_.audio_config_;
    input_.audio_config_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void QueryInput::unsafe_arena_set_allocated_audio_config(::google::cloud::dialogflow::v2beta1::InputAudioConfig* audio_config) {
  clear_input();
  if (audio_config) {
    set_has_audio_config();
    input_.audio_config_ = audio_config;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.QueryInput.audio_config)
}
inline ::google::cloud::dialogflow::v2beta1::InputAudioConfig* QueryInput::mutable_audio_config() {
  if (!has_audio_config()) {
    clear_input();
    set_has_audio_config();
    input_.audio_config_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::InputAudioConfig >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.QueryInput.audio_config)
  return input_.audio_config_;
}

// .google.cloud.dialogflow.v2beta1.TextInput text = 2;
inline bool QueryInput::has_text() const {
  return input_case() == kText;
}
inline void QueryInput::set_has_text() {
  _oneof_case_[0] = kText;
}
inline void QueryInput::clear_text() {
  if (has_text()) {
    if (GetArenaNoVirtual() == NULL) {
      delete input_.text_;
    }
    clear_has_input();
  }
}
inline ::google::cloud::dialogflow::v2beta1::TextInput* QueryInput::release_text() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.QueryInput.text)
  if (has_text()) {
    clear_has_input();
      ::google::cloud::dialogflow::v2beta1::TextInput* temp = input_.text_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    input_.text_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::dialogflow::v2beta1::TextInput& QueryInput::text() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.QueryInput.text)
  return has_text()
      ? *input_.text_
      : *reinterpret_cast< ::google::cloud::dialogflow::v2beta1::TextInput*>(&::google::cloud::dialogflow::v2beta1::_TextInput_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::TextInput* QueryInput::unsafe_arena_release_text() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.QueryInput.text)
  if (has_text()) {
    clear_has_input();
    ::google::cloud::dialogflow::v2beta1::TextInput* temp = input_.text_;
    input_.text_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void QueryInput::unsafe_arena_set_allocated_text(::google::cloud::dialogflow::v2beta1::TextInput* text) {
  clear_input();
  if (text) {
    set_has_text();
    input_.text_ = text;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.QueryInput.text)
}
inline ::google::cloud::dialogflow::v2beta1::TextInput* QueryInput::mutable_text() {
  if (!has_text()) {
    clear_input();
    set_has_text();
    input_.text_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::TextInput >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.QueryInput.text)
  return input_.text_;
}

// .google.cloud.dialogflow.v2beta1.EventInput event = 3;
inline bool QueryInput::has_event() const {
  return input_case() == kEvent;
}
inline void QueryInput::set_has_event() {
  _oneof_case_[0] = kEvent;
}
inline void QueryInput::clear_event() {
  if (has_event()) {
    if (GetArenaNoVirtual() == NULL) {
      delete input_.event_;
    }
    clear_has_input();
  }
}
inline ::google::cloud::dialogflow::v2beta1::EventInput* QueryInput::release_event() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.QueryInput.event)
  if (has_event()) {
    clear_has_input();
      ::google::cloud::dialogflow::v2beta1::EventInput* temp = input_.event_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    input_.event_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::dialogflow::v2beta1::EventInput& QueryInput::event() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.QueryInput.event)
  return has_event()
      ? *input_.event_
      : *reinterpret_cast< ::google::cloud::dialogflow::v2beta1::EventInput*>(&::google::cloud::dialogflow::v2beta1::_EventInput_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::EventInput* QueryInput::unsafe_arena_release_event() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.QueryInput.event)
  if (has_event()) {
    clear_has_input();
    ::google::cloud::dialogflow::v2beta1::EventInput* temp = input_.event_;
    input_.event_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void QueryInput::unsafe_arena_set_allocated_event(::google::cloud::dialogflow::v2beta1::EventInput* event) {
  clear_input();
  if (event) {
    set_has_event();
    input_.event_ = event;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.QueryInput.event)
}
inline ::google::cloud::dialogflow::v2beta1::EventInput* QueryInput::mutable_event() {
  if (!has_event()) {
    clear_input();
    set_has_event();
    input_.event_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::EventInput >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.QueryInput.event)
  return input_.event_;
}

inline bool QueryInput::has_input() const {
  return input_case() != INPUT_NOT_SET;
}
inline void QueryInput::clear_has_input() {
  _oneof_case_[0] = INPUT_NOT_SET;
}
inline QueryInput::InputCase QueryInput::input_case() const {
  return QueryInput::InputCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// QueryResult

// string query_text = 1;
inline void QueryResult::clear_query_text() {
  query_text_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& QueryResult::query_text() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.QueryResult.query_text)
  return query_text_.Get();
}
inline void QueryResult::set_query_text(const ::std::string& value) {
  
  query_text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.QueryResult.query_text)
}
#if LANG_CXX11
inline void QueryResult::set_query_text(::std::string&& value) {
  
  query_text_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.QueryResult.query_text)
}
#endif
inline void QueryResult::set_query_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.QueryResult.query_text)
}
inline void QueryResult::set_query_text(const char* value,
    size_t size) {
  
  query_text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.QueryResult.query_text)
}
inline ::std::string* QueryResult::mutable_query_text() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.QueryResult.query_text)
  return query_text_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* QueryResult::release_query_text() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.QueryResult.query_text)
  
  return query_text_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void QueryResult::set_allocated_query_text(::std::string* query_text) {
  if (query_text != NULL) {
    
  } else {
    
  }
  query_text_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query_text,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.QueryResult.query_text)
}
inline ::std::string* QueryResult::unsafe_arena_release_query_text() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.QueryResult.query_text)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return query_text_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void QueryResult::unsafe_arena_set_allocated_query_text(
    ::std::string* query_text) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (query_text != NULL) {
    
  } else {
    
  }
  query_text_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      query_text, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.QueryResult.query_text)
}

// string language_code = 15;
inline void QueryResult::clear_language_code() {
  language_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& QueryResult::language_code() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.QueryResult.language_code)
  return language_code_.Get();
}
inline void QueryResult::set_language_code(const ::std::string& value) {
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.QueryResult.language_code)
}
#if LANG_CXX11
inline void QueryResult::set_language_code(::std::string&& value) {
  
  language_code_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.QueryResult.language_code)
}
#endif
inline void QueryResult::set_language_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.QueryResult.language_code)
}
inline void QueryResult::set_language_code(const char* value,
    size_t size) {
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.QueryResult.language_code)
}
inline ::std::string* QueryResult::mutable_language_code() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.QueryResult.language_code)
  return language_code_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* QueryResult::release_language_code() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.QueryResult.language_code)
  
  return language_code_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void QueryResult::set_allocated_language_code(::std::string* language_code) {
  if (language_code != NULL) {
    
  } else {
    
  }
  language_code_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language_code,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.QueryResult.language_code)
}
inline ::std::string* QueryResult::unsafe_arena_release_language_code() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.QueryResult.language_code)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return language_code_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void QueryResult::unsafe_arena_set_allocated_language_code(
    ::std::string* language_code) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (language_code != NULL) {
    
  } else {
    
  }
  language_code_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      language_code, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.QueryResult.language_code)
}

// float speech_recognition_confidence = 2;
inline void QueryResult::clear_speech_recognition_confidence() {
  speech_recognition_confidence_ = 0;
}
inline float QueryResult::speech_recognition_confidence() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.QueryResult.speech_recognition_confidence)
  return speech_recognition_confidence_;
}
inline void QueryResult::set_speech_recognition_confidence(float value) {
  
  speech_recognition_confidence_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.QueryResult.speech_recognition_confidence)
}

// string action = 3;
inline void QueryResult::clear_action() {
  action_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& QueryResult::action() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.QueryResult.action)
  return action_.Get();
}
inline void QueryResult::set_action(const ::std::string& value) {
  
  action_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.QueryResult.action)
}
#if LANG_CXX11
inline void QueryResult::set_action(::std::string&& value) {
  
  action_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.QueryResult.action)
}
#endif
inline void QueryResult::set_action(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  action_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.QueryResult.action)
}
inline void QueryResult::set_action(const char* value,
    size_t size) {
  
  action_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.QueryResult.action)
}
inline ::std::string* QueryResult::mutable_action() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.QueryResult.action)
  return action_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* QueryResult::release_action() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.QueryResult.action)
  
  return action_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void QueryResult::set_allocated_action(::std::string* action) {
  if (action != NULL) {
    
  } else {
    
  }
  action_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.QueryResult.action)
}
inline ::std::string* QueryResult::unsafe_arena_release_action() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.QueryResult.action)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return action_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void QueryResult::unsafe_arena_set_allocated_action(
    ::std::string* action) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (action != NULL) {
    
  } else {
    
  }
  action_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      action, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.QueryResult.action)
}

// .google.protobuf.Struct parameters = 4;
inline bool QueryResult::has_parameters() const {
  return this != internal_default_instance() && parameters_ != NULL;
}
inline const ::google::protobuf::Struct& QueryResult::parameters() const {
  const ::google::protobuf::Struct* p = parameters_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.QueryResult.parameters)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Struct*>(
      &::google::protobuf::_Struct_default_instance_);
}
inline ::google::protobuf::Struct* QueryResult::release_parameters() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.QueryResult.parameters)
  
  ::google::protobuf::Struct* temp = parameters_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  parameters_ = NULL;
  return temp;
}
inline ::google::protobuf::Struct* QueryResult::unsafe_arena_release_parameters() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.QueryResult.parameters)
  
  ::google::protobuf::Struct* temp = parameters_;
  parameters_ = NULL;
  return temp;
}
inline ::google::protobuf::Struct* QueryResult::mutable_parameters() {
  
  if (parameters_ == NULL) {
    _slow_mutable_parameters();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.QueryResult.parameters)
  return parameters_;
}
inline void QueryResult::set_allocated_parameters(::google::protobuf::Struct* parameters) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(parameters_);
  }
  if (parameters) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(parameters)->GetArena();
    if (message_arena != submessage_arena) {
      parameters = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, parameters, submessage_arena);
    }
    
  } else {
    
  }
  parameters_ = parameters;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.QueryResult.parameters)
}

// bool all_required_params_present = 5;
inline void QueryResult::clear_all_required_params_present() {
  all_required_params_present_ = false;
}
inline bool QueryResult::all_required_params_present() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.QueryResult.all_required_params_present)
  return all_required_params_present_;
}
inline void QueryResult::set_all_required_params_present(bool value) {
  
  all_required_params_present_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.QueryResult.all_required_params_present)
}

// string fulfillment_text = 6;
inline void QueryResult::clear_fulfillment_text() {
  fulfillment_text_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& QueryResult::fulfillment_text() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.QueryResult.fulfillment_text)
  return fulfillment_text_.Get();
}
inline void QueryResult::set_fulfillment_text(const ::std::string& value) {
  
  fulfillment_text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.QueryResult.fulfillment_text)
}
#if LANG_CXX11
inline void QueryResult::set_fulfillment_text(::std::string&& value) {
  
  fulfillment_text_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.QueryResult.fulfillment_text)
}
#endif
inline void QueryResult::set_fulfillment_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fulfillment_text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.QueryResult.fulfillment_text)
}
inline void QueryResult::set_fulfillment_text(const char* value,
    size_t size) {
  
  fulfillment_text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.QueryResult.fulfillment_text)
}
inline ::std::string* QueryResult::mutable_fulfillment_text() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.QueryResult.fulfillment_text)
  return fulfillment_text_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* QueryResult::release_fulfillment_text() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.QueryResult.fulfillment_text)
  
  return fulfillment_text_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void QueryResult::set_allocated_fulfillment_text(::std::string* fulfillment_text) {
  if (fulfillment_text != NULL) {
    
  } else {
    
  }
  fulfillment_text_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fulfillment_text,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.QueryResult.fulfillment_text)
}
inline ::std::string* QueryResult::unsafe_arena_release_fulfillment_text() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.QueryResult.fulfillment_text)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return fulfillment_text_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void QueryResult::unsafe_arena_set_allocated_fulfillment_text(
    ::std::string* fulfillment_text) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (fulfillment_text != NULL) {
    
  } else {
    
  }
  fulfillment_text_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      fulfillment_text, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.QueryResult.fulfillment_text)
}

// repeated .google.cloud.dialogflow.v2beta1.Intent.Message fulfillment_messages = 7;
inline int QueryResult::fulfillment_messages_size() const {
  return fulfillment_messages_.size();
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Message& QueryResult::fulfillment_messages(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.QueryResult.fulfillment_messages)
  return fulfillment_messages_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message* QueryResult::mutable_fulfillment_messages(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.QueryResult.fulfillment_messages)
  return fulfillment_messages_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message* QueryResult::add_fulfillment_messages() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.QueryResult.fulfillment_messages)
  return fulfillment_messages_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message >*
QueryResult::mutable_fulfillment_messages() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.QueryResult.fulfillment_messages)
  return &fulfillment_messages_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message >&
QueryResult::fulfillment_messages() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.QueryResult.fulfillment_messages)
  return fulfillment_messages_;
}

// string webhook_source = 8;
inline void QueryResult::clear_webhook_source() {
  webhook_source_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& QueryResult::webhook_source() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.QueryResult.webhook_source)
  return webhook_source_.Get();
}
inline void QueryResult::set_webhook_source(const ::std::string& value) {
  
  webhook_source_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.QueryResult.webhook_source)
}
#if LANG_CXX11
inline void QueryResult::set_webhook_source(::std::string&& value) {
  
  webhook_source_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.QueryResult.webhook_source)
}
#endif
inline void QueryResult::set_webhook_source(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  webhook_source_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.QueryResult.webhook_source)
}
inline void QueryResult::set_webhook_source(const char* value,
    size_t size) {
  
  webhook_source_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.QueryResult.webhook_source)
}
inline ::std::string* QueryResult::mutable_webhook_source() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.QueryResult.webhook_source)
  return webhook_source_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* QueryResult::release_webhook_source() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.QueryResult.webhook_source)
  
  return webhook_source_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void QueryResult::set_allocated_webhook_source(::std::string* webhook_source) {
  if (webhook_source != NULL) {
    
  } else {
    
  }
  webhook_source_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), webhook_source,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.QueryResult.webhook_source)
}
inline ::std::string* QueryResult::unsafe_arena_release_webhook_source() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.QueryResult.webhook_source)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return webhook_source_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void QueryResult::unsafe_arena_set_allocated_webhook_source(
    ::std::string* webhook_source) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (webhook_source != NULL) {
    
  } else {
    
  }
  webhook_source_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      webhook_source, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.QueryResult.webhook_source)
}

// .google.protobuf.Struct webhook_payload = 9;
inline bool QueryResult::has_webhook_payload() const {
  return this != internal_default_instance() && webhook_payload_ != NULL;
}
inline const ::google::protobuf::Struct& QueryResult::webhook_payload() const {
  const ::google::protobuf::Struct* p = webhook_payload_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.QueryResult.webhook_payload)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Struct*>(
      &::google::protobuf::_Struct_default_instance_);
}
inline ::google::protobuf::Struct* QueryResult::release_webhook_payload() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.QueryResult.webhook_payload)
  
  ::google::protobuf::Struct* temp = webhook_payload_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  webhook_payload_ = NULL;
  return temp;
}
inline ::google::protobuf::Struct* QueryResult::unsafe_arena_release_webhook_payload() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.QueryResult.webhook_payload)
  
  ::google::protobuf::Struct* temp = webhook_payload_;
  webhook_payload_ = NULL;
  return temp;
}
inline ::google::protobuf::Struct* QueryResult::mutable_webhook_payload() {
  
  if (webhook_payload_ == NULL) {
    _slow_mutable_webhook_payload();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.QueryResult.webhook_payload)
  return webhook_payload_;
}
inline void QueryResult::set_allocated_webhook_payload(::google::protobuf::Struct* webhook_payload) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(webhook_payload_);
  }
  if (webhook_payload) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(webhook_payload)->GetArena();
    if (message_arena != submessage_arena) {
      webhook_payload = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, webhook_payload, submessage_arena);
    }
    
  } else {
    
  }
  webhook_payload_ = webhook_payload;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.QueryResult.webhook_payload)
}

// repeated .google.cloud.dialogflow.v2beta1.Context output_contexts = 10;
inline int QueryResult::output_contexts_size() const {
  return output_contexts_.size();
}
inline const ::google::cloud::dialogflow::v2beta1::Context& QueryResult::output_contexts(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.QueryResult.output_contexts)
  return output_contexts_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::Context* QueryResult::mutable_output_contexts(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.QueryResult.output_contexts)
  return output_contexts_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::Context* QueryResult::add_output_contexts() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.QueryResult.output_contexts)
  return output_contexts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Context >*
QueryResult::mutable_output_contexts() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.QueryResult.output_contexts)
  return &output_contexts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Context >&
QueryResult::output_contexts() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.QueryResult.output_contexts)
  return output_contexts_;
}

// .google.cloud.dialogflow.v2beta1.Intent intent = 11;
inline bool QueryResult::has_intent() const {
  return this != internal_default_instance() && intent_ != NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::Intent& QueryResult::intent() const {
  const ::google::cloud::dialogflow::v2beta1::Intent* p = intent_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.QueryResult.intent)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::Intent*>(
      &::google::cloud::dialogflow::v2beta1::_Intent_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::Intent* QueryResult::release_intent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.QueryResult.intent)
  
  ::google::cloud::dialogflow::v2beta1::Intent* temp = intent_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  intent_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Intent* QueryResult::unsafe_arena_release_intent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.QueryResult.intent)
  
  ::google::cloud::dialogflow::v2beta1::Intent* temp = intent_;
  intent_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Intent* QueryResult::mutable_intent() {
  
  if (intent_ == NULL) {
    _slow_mutable_intent();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.QueryResult.intent)
  return intent_;
}
inline void QueryResult::set_allocated_intent(::google::cloud::dialogflow::v2beta1::Intent* intent) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(intent_);
  }
  if (intent) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(intent)->GetArena();
    if (message_arena != submessage_arena) {
      intent = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, intent, submessage_arena);
    }
    
  } else {
    
  }
  intent_ = intent;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.QueryResult.intent)
}

// float intent_detection_confidence = 12;
inline void QueryResult::clear_intent_detection_confidence() {
  intent_detection_confidence_ = 0;
}
inline float QueryResult::intent_detection_confidence() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.QueryResult.intent_detection_confidence)
  return intent_detection_confidence_;
}
inline void QueryResult::set_intent_detection_confidence(float value) {
  
  intent_detection_confidence_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.QueryResult.intent_detection_confidence)
}

// .google.protobuf.Struct diagnostic_info = 14;
inline bool QueryResult::has_diagnostic_info() const {
  return this != internal_default_instance() && diagnostic_info_ != NULL;
}
inline const ::google::protobuf::Struct& QueryResult::diagnostic_info() const {
  const ::google::protobuf::Struct* p = diagnostic_info_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.QueryResult.diagnostic_info)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Struct*>(
      &::google::protobuf::_Struct_default_instance_);
}
inline ::google::protobuf::Struct* QueryResult::release_diagnostic_info() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.QueryResult.diagnostic_info)
  
  ::google::protobuf::Struct* temp = diagnostic_info_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  diagnostic_info_ = NULL;
  return temp;
}
inline ::google::protobuf::Struct* QueryResult::unsafe_arena_release_diagnostic_info() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.QueryResult.diagnostic_info)
  
  ::google::protobuf::Struct* temp = diagnostic_info_;
  diagnostic_info_ = NULL;
  return temp;
}
inline ::google::protobuf::Struct* QueryResult::mutable_diagnostic_info() {
  
  if (diagnostic_info_ == NULL) {
    _slow_mutable_diagnostic_info();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.QueryResult.diagnostic_info)
  return diagnostic_info_;
}
inline void QueryResult::set_allocated_diagnostic_info(::google::protobuf::Struct* diagnostic_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(diagnostic_info_);
  }
  if (diagnostic_info) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(diagnostic_info)->GetArena();
    if (message_arena != submessage_arena) {
      diagnostic_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, diagnostic_info, submessage_arena);
    }
    
  } else {
    
  }
  diagnostic_info_ = diagnostic_info;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.QueryResult.diagnostic_info)
}

// -------------------------------------------------------------------

// StreamingDetectIntentRequest

// string session = 1;
inline void StreamingDetectIntentRequest::clear_session() {
  session_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& StreamingDetectIntentRequest::session() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.session)
  return session_.Get();
}
inline void StreamingDetectIntentRequest::set_session(const ::std::string& value) {
  
  session_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.session)
}
#if LANG_CXX11
inline void StreamingDetectIntentRequest::set_session(::std::string&& value) {
  
  session_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.session)
}
#endif
inline void StreamingDetectIntentRequest::set_session(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  session_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.session)
}
inline void StreamingDetectIntentRequest::set_session(const char* value,
    size_t size) {
  
  session_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.session)
}
inline ::std::string* StreamingDetectIntentRequest::mutable_session() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.session)
  return session_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* StreamingDetectIntentRequest::release_session() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.session)
  
  return session_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void StreamingDetectIntentRequest::set_allocated_session(::std::string* session) {
  if (session != NULL) {
    
  } else {
    
  }
  session_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.session)
}
inline ::std::string* StreamingDetectIntentRequest::unsafe_arena_release_session() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.session)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return session_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void StreamingDetectIntentRequest::unsafe_arena_set_allocated_session(
    ::std::string* session) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (session != NULL) {
    
  } else {
    
  }
  session_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      session, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.session)
}

// .google.cloud.dialogflow.v2beta1.QueryParameters query_params = 2;
inline bool StreamingDetectIntentRequest::has_query_params() const {
  return this != internal_default_instance() && query_params_ != NULL;
}
inline void StreamingDetectIntentRequest::clear_query_params() {
  if (GetArenaNoVirtual() == NULL && query_params_ != NULL) {
    delete query_params_;
  }
  query_params_ = NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::QueryParameters& StreamingDetectIntentRequest::query_params() const {
  const ::google::cloud::dialogflow::v2beta1::QueryParameters* p = query_params_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.query_params)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::QueryParameters*>(
      &::google::cloud::dialogflow::v2beta1::_QueryParameters_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::QueryParameters* StreamingDetectIntentRequest::release_query_params() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.query_params)
  
  ::google::cloud::dialogflow::v2beta1::QueryParameters* temp = query_params_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  query_params_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::QueryParameters* StreamingDetectIntentRequest::unsafe_arena_release_query_params() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.query_params)
  
  ::google::cloud::dialogflow::v2beta1::QueryParameters* temp = query_params_;
  query_params_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::QueryParameters* StreamingDetectIntentRequest::mutable_query_params() {
  
  if (query_params_ == NULL) {
    _slow_mutable_query_params();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.query_params)
  return query_params_;
}
inline void StreamingDetectIntentRequest::set_allocated_query_params(::google::cloud::dialogflow::v2beta1::QueryParameters* query_params) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete query_params_;
  }
  if (query_params) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(query_params);
    if (message_arena != submessage_arena) {
      query_params = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_params, submessage_arena);
    }
    
  } else {
    
  }
  query_params_ = query_params;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.query_params)
}

// .google.cloud.dialogflow.v2beta1.QueryInput query_input = 3;
inline bool StreamingDetectIntentRequest::has_query_input() const {
  return this != internal_default_instance() && query_input_ != NULL;
}
inline void StreamingDetectIntentRequest::clear_query_input() {
  if (GetArenaNoVirtual() == NULL && query_input_ != NULL) {
    delete query_input_;
  }
  query_input_ = NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::QueryInput& StreamingDetectIntentRequest::query_input() const {
  const ::google::cloud::dialogflow::v2beta1::QueryInput* p = query_input_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.query_input)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::QueryInput*>(
      &::google::cloud::dialogflow::v2beta1::_QueryInput_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::QueryInput* StreamingDetectIntentRequest::release_query_input() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.query_input)
  
  ::google::cloud::dialogflow::v2beta1::QueryInput* temp = query_input_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  query_input_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::QueryInput* StreamingDetectIntentRequest::unsafe_arena_release_query_input() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.query_input)
  
  ::google::cloud::dialogflow::v2beta1::QueryInput* temp = query_input_;
  query_input_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::QueryInput* StreamingDetectIntentRequest::mutable_query_input() {
  
  if (query_input_ == NULL) {
    _slow_mutable_query_input();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.query_input)
  return query_input_;
}
inline void StreamingDetectIntentRequest::set_allocated_query_input(::google::cloud::dialogflow::v2beta1::QueryInput* query_input) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete query_input_;
  }
  if (query_input) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(query_input);
    if (message_arena != submessage_arena) {
      query_input = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_input, submessage_arena);
    }
    
  } else {
    
  }
  query_input_ = query_input;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.query_input)
}

// bool single_utterance = 4;
inline void StreamingDetectIntentRequest::clear_single_utterance() {
  single_utterance_ = false;
}
inline bool StreamingDetectIntentRequest::single_utterance() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.single_utterance)
  return single_utterance_;
}
inline void StreamingDetectIntentRequest::set_single_utterance(bool value) {
  
  single_utterance_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.single_utterance)
}

// bytes input_audio = 6;
inline void StreamingDetectIntentRequest::clear_input_audio() {
  input_audio_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& StreamingDetectIntentRequest::input_audio() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.input_audio)
  return input_audio_.Get();
}
inline void StreamingDetectIntentRequest::set_input_audio(const ::std::string& value) {
  
  input_audio_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.input_audio)
}
#if LANG_CXX11
inline void StreamingDetectIntentRequest::set_input_audio(::std::string&& value) {
  
  input_audio_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.input_audio)
}
#endif
inline void StreamingDetectIntentRequest::set_input_audio(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  input_audio_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.input_audio)
}
inline void StreamingDetectIntentRequest::set_input_audio(const void* value,
    size_t size) {
  
  input_audio_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.input_audio)
}
inline ::std::string* StreamingDetectIntentRequest::mutable_input_audio() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.input_audio)
  return input_audio_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* StreamingDetectIntentRequest::release_input_audio() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.input_audio)
  
  return input_audio_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void StreamingDetectIntentRequest::set_allocated_input_audio(::std::string* input_audio) {
  if (input_audio != NULL) {
    
  } else {
    
  }
  input_audio_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_audio,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.input_audio)
}
inline ::std::string* StreamingDetectIntentRequest::unsafe_arena_release_input_audio() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.input_audio)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return input_audio_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void StreamingDetectIntentRequest::unsafe_arena_set_allocated_input_audio(
    ::std::string* input_audio) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (input_audio != NULL) {
    
  } else {
    
  }
  input_audio_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      input_audio, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.StreamingDetectIntentRequest.input_audio)
}

// -------------------------------------------------------------------

// StreamingDetectIntentResponse

// string response_id = 1;
inline void StreamingDetectIntentResponse::clear_response_id() {
  response_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& StreamingDetectIntentResponse::response_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.response_id)
  return response_id_.Get();
}
inline void StreamingDetectIntentResponse::set_response_id(const ::std::string& value) {
  
  response_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.response_id)
}
#if LANG_CXX11
inline void StreamingDetectIntentResponse::set_response_id(::std::string&& value) {
  
  response_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.response_id)
}
#endif
inline void StreamingDetectIntentResponse::set_response_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  response_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.response_id)
}
inline void StreamingDetectIntentResponse::set_response_id(const char* value,
    size_t size) {
  
  response_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.response_id)
}
inline ::std::string* StreamingDetectIntentResponse::mutable_response_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.response_id)
  return response_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* StreamingDetectIntentResponse::release_response_id() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.response_id)
  
  return response_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void StreamingDetectIntentResponse::set_allocated_response_id(::std::string* response_id) {
  if (response_id != NULL) {
    
  } else {
    
  }
  response_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.response_id)
}
inline ::std::string* StreamingDetectIntentResponse::unsafe_arena_release_response_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.response_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return response_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void StreamingDetectIntentResponse::unsafe_arena_set_allocated_response_id(
    ::std::string* response_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (response_id != NULL) {
    
  } else {
    
  }
  response_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      response_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.response_id)
}

// .google.cloud.dialogflow.v2beta1.StreamingRecognitionResult recognition_result = 2;
inline bool StreamingDetectIntentResponse::has_recognition_result() const {
  return this != internal_default_instance() && recognition_result_ != NULL;
}
inline void StreamingDetectIntentResponse::clear_recognition_result() {
  if (GetArenaNoVirtual() == NULL && recognition_result_ != NULL) {
    delete recognition_result_;
  }
  recognition_result_ = NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult& StreamingDetectIntentResponse::recognition_result() const {
  const ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult* p = recognition_result_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.recognition_result)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult*>(
      &::google::cloud::dialogflow::v2beta1::_StreamingRecognitionResult_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult* StreamingDetectIntentResponse::release_recognition_result() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.recognition_result)
  
  ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult* temp = recognition_result_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  recognition_result_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult* StreamingDetectIntentResponse::unsafe_arena_release_recognition_result() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.recognition_result)
  
  ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult* temp = recognition_result_;
  recognition_result_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult* StreamingDetectIntentResponse::mutable_recognition_result() {
  
  if (recognition_result_ == NULL) {
    _slow_mutable_recognition_result();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.recognition_result)
  return recognition_result_;
}
inline void StreamingDetectIntentResponse::set_allocated_recognition_result(::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult* recognition_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete recognition_result_;
  }
  if (recognition_result) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(recognition_result);
    if (message_arena != submessage_arena) {
      recognition_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, recognition_result, submessage_arena);
    }
    
  } else {
    
  }
  recognition_result_ = recognition_result;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.recognition_result)
}

// .google.cloud.dialogflow.v2beta1.QueryResult query_result = 3;
inline bool StreamingDetectIntentResponse::has_query_result() const {
  return this != internal_default_instance() && query_result_ != NULL;
}
inline void StreamingDetectIntentResponse::clear_query_result() {
  if (GetArenaNoVirtual() == NULL && query_result_ != NULL) {
    delete query_result_;
  }
  query_result_ = NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::QueryResult& StreamingDetectIntentResponse::query_result() const {
  const ::google::cloud::dialogflow::v2beta1::QueryResult* p = query_result_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.query_result)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::QueryResult*>(
      &::google::cloud::dialogflow::v2beta1::_QueryResult_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::QueryResult* StreamingDetectIntentResponse::release_query_result() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.query_result)
  
  ::google::cloud::dialogflow::v2beta1::QueryResult* temp = query_result_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  query_result_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::QueryResult* StreamingDetectIntentResponse::unsafe_arena_release_query_result() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.query_result)
  
  ::google::cloud::dialogflow::v2beta1::QueryResult* temp = query_result_;
  query_result_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::QueryResult* StreamingDetectIntentResponse::mutable_query_result() {
  
  if (query_result_ == NULL) {
    _slow_mutable_query_result();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.query_result)
  return query_result_;
}
inline void StreamingDetectIntentResponse::set_allocated_query_result(::google::cloud::dialogflow::v2beta1::QueryResult* query_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete query_result_;
  }
  if (query_result) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(query_result);
    if (message_arena != submessage_arena) {
      query_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_result, submessage_arena);
    }
    
  } else {
    
  }
  query_result_ = query_result;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.query_result)
}

// .google.rpc.Status webhook_status = 4;
inline bool StreamingDetectIntentResponse::has_webhook_status() const {
  return this != internal_default_instance() && webhook_status_ != NULL;
}
inline const ::google::rpc::Status& StreamingDetectIntentResponse::webhook_status() const {
  const ::google::rpc::Status* p = webhook_status_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.webhook_status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::rpc::Status*>(
      &::google::rpc::_Status_default_instance_);
}
inline ::google::rpc::Status* StreamingDetectIntentResponse::release_webhook_status() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.webhook_status)
  
  ::google::rpc::Status* temp = webhook_status_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  webhook_status_ = NULL;
  return temp;
}
inline ::google::rpc::Status* StreamingDetectIntentResponse::unsafe_arena_release_webhook_status() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.webhook_status)
  
  ::google::rpc::Status* temp = webhook_status_;
  webhook_status_ = NULL;
  return temp;
}
inline ::google::rpc::Status* StreamingDetectIntentResponse::mutable_webhook_status() {
  
  if (webhook_status_ == NULL) {
    _slow_mutable_webhook_status();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.webhook_status)
  return webhook_status_;
}
inline void StreamingDetectIntentResponse::set_allocated_webhook_status(::google::rpc::Status* webhook_status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(webhook_status_);
  }
  if (webhook_status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      webhook_status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, webhook_status, submessage_arena);
    }
    
  } else {
    
  }
  webhook_status_ = webhook_status;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.StreamingDetectIntentResponse.webhook_status)
}

// -------------------------------------------------------------------

// StreamingRecognitionResult

// .google.cloud.dialogflow.v2beta1.StreamingRecognitionResult.MessageType message_type = 1;
inline void StreamingRecognitionResult::clear_message_type() {
  message_type_ = 0;
}
inline ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult_MessageType StreamingRecognitionResult::message_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult.message_type)
  return static_cast< ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult_MessageType >(message_type_);
}
inline void StreamingRecognitionResult::set_message_type(::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult_MessageType value) {
  
  message_type_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult.message_type)
}

// string transcript = 2;
inline void StreamingRecognitionResult::clear_transcript() {
  transcript_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& StreamingRecognitionResult::transcript() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult.transcript)
  return transcript_.Get();
}
inline void StreamingRecognitionResult::set_transcript(const ::std::string& value) {
  
  transcript_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult.transcript)
}
#if LANG_CXX11
inline void StreamingRecognitionResult::set_transcript(::std::string&& value) {
  
  transcript_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult.transcript)
}
#endif
inline void StreamingRecognitionResult::set_transcript(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  transcript_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult.transcript)
}
inline void StreamingRecognitionResult::set_transcript(const char* value,
    size_t size) {
  
  transcript_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult.transcript)
}
inline ::std::string* StreamingRecognitionResult::mutable_transcript() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult.transcript)
  return transcript_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* StreamingRecognitionResult::release_transcript() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult.transcript)
  
  return transcript_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void StreamingRecognitionResult::set_allocated_transcript(::std::string* transcript) {
  if (transcript != NULL) {
    
  } else {
    
  }
  transcript_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), transcript,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult.transcript)
}
inline ::std::string* StreamingRecognitionResult::unsafe_arena_release_transcript() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult.transcript)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return transcript_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void StreamingRecognitionResult::unsafe_arena_set_allocated_transcript(
    ::std::string* transcript) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (transcript != NULL) {
    
  } else {
    
  }
  transcript_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      transcript, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult.transcript)
}

// bool is_final = 3;
inline void StreamingRecognitionResult::clear_is_final() {
  is_final_ = false;
}
inline bool StreamingRecognitionResult::is_final() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult.is_final)
  return is_final_;
}
inline void StreamingRecognitionResult::set_is_final(bool value) {
  
  is_final_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.StreamingRecognitionResult.is_final)
}

// -------------------------------------------------------------------

// InputAudioConfig

// .google.cloud.dialogflow.v2beta1.AudioEncoding audio_encoding = 1;
inline void InputAudioConfig::clear_audio_encoding() {
  audio_encoding_ = 0;
}
inline ::google::cloud::dialogflow::v2beta1::AudioEncoding InputAudioConfig::audio_encoding() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.InputAudioConfig.audio_encoding)
  return static_cast< ::google::cloud::dialogflow::v2beta1::AudioEncoding >(audio_encoding_);
}
inline void InputAudioConfig::set_audio_encoding(::google::cloud::dialogflow::v2beta1::AudioEncoding value) {
  
  audio_encoding_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.InputAudioConfig.audio_encoding)
}

// int32 sample_rate_hertz = 2;
inline void InputAudioConfig::clear_sample_rate_hertz() {
  sample_rate_hertz_ = 0;
}
inline ::google::protobuf::int32 InputAudioConfig::sample_rate_hertz() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.InputAudioConfig.sample_rate_hertz)
  return sample_rate_hertz_;
}
inline void InputAudioConfig::set_sample_rate_hertz(::google::protobuf::int32 value) {
  
  sample_rate_hertz_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.InputAudioConfig.sample_rate_hertz)
}

// string language_code = 3;
inline void InputAudioConfig::clear_language_code() {
  language_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& InputAudioConfig::language_code() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.InputAudioConfig.language_code)
  return language_code_.Get();
}
inline void InputAudioConfig::set_language_code(const ::std::string& value) {
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.InputAudioConfig.language_code)
}
#if LANG_CXX11
inline void InputAudioConfig::set_language_code(::std::string&& value) {
  
  language_code_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.InputAudioConfig.language_code)
}
#endif
inline void InputAudioConfig::set_language_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.InputAudioConfig.language_code)
}
inline void InputAudioConfig::set_language_code(const char* value,
    size_t size) {
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.InputAudioConfig.language_code)
}
inline ::std::string* InputAudioConfig::mutable_language_code() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.InputAudioConfig.language_code)
  return language_code_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* InputAudioConfig::release_language_code() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.InputAudioConfig.language_code)
  
  return language_code_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void InputAudioConfig::set_allocated_language_code(::std::string* language_code) {
  if (language_code != NULL) {
    
  } else {
    
  }
  language_code_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language_code,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.InputAudioConfig.language_code)
}
inline ::std::string* InputAudioConfig::unsafe_arena_release_language_code() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.InputAudioConfig.language_code)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return language_code_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void InputAudioConfig::unsafe_arena_set_allocated_language_code(
    ::std::string* language_code) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (language_code != NULL) {
    
  } else {
    
  }
  language_code_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      language_code, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.InputAudioConfig.language_code)
}

// repeated string phrase_hints = 4;
inline int InputAudioConfig::phrase_hints_size() const {
  return phrase_hints_.size();
}
inline void InputAudioConfig::clear_phrase_hints() {
  phrase_hints_.Clear();
}
inline const ::std::string& InputAudioConfig::phrase_hints(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.InputAudioConfig.phrase_hints)
  return phrase_hints_.Get(index);
}
inline ::std::string* InputAudioConfig::mutable_phrase_hints(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.InputAudioConfig.phrase_hints)
  return phrase_hints_.Mutable(index);
}
inline void InputAudioConfig::set_phrase_hints(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.InputAudioConfig.phrase_hints)
  phrase_hints_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void InputAudioConfig::set_phrase_hints(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.InputAudioConfig.phrase_hints)
  phrase_hints_.Mutable(index)->assign(std::move(value));
}
#endif
inline void InputAudioConfig::set_phrase_hints(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  phrase_hints_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.InputAudioConfig.phrase_hints)
}
inline void InputAudioConfig::set_phrase_hints(int index, const char* value, size_t size) {
  phrase_hints_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.InputAudioConfig.phrase_hints)
}
inline ::std::string* InputAudioConfig::add_phrase_hints() {
  // @@protoc_insertion_point(field_add_mutable:google.cloud.dialogflow.v2beta1.InputAudioConfig.phrase_hints)
  return phrase_hints_.Add();
}
inline void InputAudioConfig::add_phrase_hints(const ::std::string& value) {
  phrase_hints_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.InputAudioConfig.phrase_hints)
}
#if LANG_CXX11
inline void InputAudioConfig::add_phrase_hints(::std::string&& value) {
  phrase_hints_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.InputAudioConfig.phrase_hints)
}
#endif
inline void InputAudioConfig::add_phrase_hints(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  phrase_hints_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.dialogflow.v2beta1.InputAudioConfig.phrase_hints)
}
inline void InputAudioConfig::add_phrase_hints(const char* value, size_t size) {
  phrase_hints_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.dialogflow.v2beta1.InputAudioConfig.phrase_hints)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
InputAudioConfig::phrase_hints() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.InputAudioConfig.phrase_hints)
  return phrase_hints_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
InputAudioConfig::mutable_phrase_hints() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.InputAudioConfig.phrase_hints)
  return &phrase_hints_;
}

// -------------------------------------------------------------------

// TextInput

// string text = 1;
inline void TextInput::clear_text() {
  text_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& TextInput::text() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.TextInput.text)
  return text_.Get();
}
inline void TextInput::set_text(const ::std::string& value) {
  
  text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.TextInput.text)
}
#if LANG_CXX11
inline void TextInput::set_text(::std::string&& value) {
  
  text_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.TextInput.text)
}
#endif
inline void TextInput::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.TextInput.text)
}
inline void TextInput::set_text(const char* value,
    size_t size) {
  
  text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.TextInput.text)
}
inline ::std::string* TextInput::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.TextInput.text)
  return text_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* TextInput::release_text() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.TextInput.text)
  
  return text_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void TextInput::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.TextInput.text)
}
inline ::std::string* TextInput::unsafe_arena_release_text() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.TextInput.text)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return text_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void TextInput::unsafe_arena_set_allocated_text(
    ::std::string* text) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (text != NULL) {
    
  } else {
    
  }
  text_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      text, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.TextInput.text)
}

// string language_code = 2;
inline void TextInput::clear_language_code() {
  language_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& TextInput::language_code() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.TextInput.language_code)
  return language_code_.Get();
}
inline void TextInput::set_language_code(const ::std::string& value) {
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.TextInput.language_code)
}
#if LANG_CXX11
inline void TextInput::set_language_code(::std::string&& value) {
  
  language_code_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.TextInput.language_code)
}
#endif
inline void TextInput::set_language_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.TextInput.language_code)
}
inline void TextInput::set_language_code(const char* value,
    size_t size) {
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.TextInput.language_code)
}
inline ::std::string* TextInput::mutable_language_code() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.TextInput.language_code)
  return language_code_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* TextInput::release_language_code() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.TextInput.language_code)
  
  return language_code_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void TextInput::set_allocated_language_code(::std::string* language_code) {
  if (language_code != NULL) {
    
  } else {
    
  }
  language_code_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language_code,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.TextInput.language_code)
}
inline ::std::string* TextInput::unsafe_arena_release_language_code() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.TextInput.language_code)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return language_code_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void TextInput::unsafe_arena_set_allocated_language_code(
    ::std::string* language_code) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (language_code != NULL) {
    
  } else {
    
  }
  language_code_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      language_code, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.TextInput.language_code)
}

// -------------------------------------------------------------------

// EventInput

// string name = 1;
inline void EventInput::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& EventInput::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.EventInput.name)
  return name_.Get();
}
inline void EventInput::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.EventInput.name)
}
#if LANG_CXX11
inline void EventInput::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.EventInput.name)
}
#endif
inline void EventInput::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.EventInput.name)
}
inline void EventInput::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.EventInput.name)
}
inline ::std::string* EventInput::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.EventInput.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* EventInput::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.EventInput.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void EventInput::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.EventInput.name)
}
inline ::std::string* EventInput::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.EventInput.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void EventInput::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.EventInput.name)
}

// .google.protobuf.Struct parameters = 2;
inline bool EventInput::has_parameters() const {
  return this != internal_default_instance() && parameters_ != NULL;
}
inline const ::google::protobuf::Struct& EventInput::parameters() const {
  const ::google::protobuf::Struct* p = parameters_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.EventInput.parameters)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Struct*>(
      &::google::protobuf::_Struct_default_instance_);
}
inline ::google::protobuf::Struct* EventInput::release_parameters() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.EventInput.parameters)
  
  ::google::protobuf::Struct* temp = parameters_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  parameters_ = NULL;
  return temp;
}
inline ::google::protobuf::Struct* EventInput::unsafe_arena_release_parameters() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.EventInput.parameters)
  
  ::google::protobuf::Struct* temp = parameters_;
  parameters_ = NULL;
  return temp;
}
inline ::google::protobuf::Struct* EventInput::mutable_parameters() {
  
  if (parameters_ == NULL) {
    _slow_mutable_parameters();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.EventInput.parameters)
  return parameters_;
}
inline void EventInput::set_allocated_parameters(::google::protobuf::Struct* parameters) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(parameters_);
  }
  if (parameters) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(parameters)->GetArena();
    if (message_arena != submessage_arena) {
      parameters = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, parameters, submessage_arena);
    }
    
  } else {
    
  }
  parameters_ = parameters;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.EventInput.parameters)
}

// string language_code = 3;
inline void EventInput::clear_language_code() {
  language_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& EventInput::language_code() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.EventInput.language_code)
  return language_code_.Get();
}
inline void EventInput::set_language_code(const ::std::string& value) {
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.EventInput.language_code)
}
#if LANG_CXX11
inline void EventInput::set_language_code(::std::string&& value) {
  
  language_code_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.EventInput.language_code)
}
#endif
inline void EventInput::set_language_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.EventInput.language_code)
}
inline void EventInput::set_language_code(const char* value,
    size_t size) {
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.EventInput.language_code)
}
inline ::std::string* EventInput::mutable_language_code() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.EventInput.language_code)
  return language_code_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* EventInput::release_language_code() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.EventInput.language_code)
  
  return language_code_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void EventInput::set_allocated_language_code(::std::string* language_code) {
  if (language_code != NULL) {
    
  } else {
    
  }
  language_code_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language_code,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.EventInput.language_code)
}
inline ::std::string* EventInput::unsafe_arena_release_language_code() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.EventInput.language_code)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return language_code_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void EventInput::unsafe_arena_set_allocated_language_code(
    ::std::string* language_code) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (language_code != NULL) {
    
  } else {
    
  }
  language_code_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      language_code, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.EventInput.language_code)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult_MessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult_MessageType>() {
  return ::google::cloud::dialogflow::v2beta1::StreamingRecognitionResult_MessageType_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::dialogflow::v2beta1::AudioEncoding> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::dialogflow::v2beta1::AudioEncoding>() {
  return ::google::cloud::dialogflow::v2beta1::AudioEncoding_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fcloud_2fdialogflow_2fv2beta1_2fsession_2eproto__INCLUDED
