// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/v2beta1/agent.proto

#ifndef PROTOBUF_google_2fcloud_2fdialogflow_2fv2beta1_2fagent_2eproto__INCLUDED
#define PROTOBUF_google_2fcloud_2fdialogflow_2fv2beta1_2fagent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/field_mask.pb.h>
#include <google/protobuf/struct.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fagent_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[9];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsAgentImpl();
void InitDefaultsAgent();
void InitDefaultsGetAgentRequestImpl();
void InitDefaultsGetAgentRequest();
void InitDefaultsSearchAgentsRequestImpl();
void InitDefaultsSearchAgentsRequest();
void InitDefaultsSearchAgentsResponseImpl();
void InitDefaultsSearchAgentsResponse();
void InitDefaultsTrainAgentRequestImpl();
void InitDefaultsTrainAgentRequest();
void InitDefaultsExportAgentRequestImpl();
void InitDefaultsExportAgentRequest();
void InitDefaultsExportAgentResponseImpl();
void InitDefaultsExportAgentResponse();
void InitDefaultsImportAgentRequestImpl();
void InitDefaultsImportAgentRequest();
void InitDefaultsRestoreAgentRequestImpl();
void InitDefaultsRestoreAgentRequest();
inline void InitDefaults() {
  InitDefaultsAgent();
  InitDefaultsGetAgentRequest();
  InitDefaultsSearchAgentsRequest();
  InitDefaultsSearchAgentsResponse();
  InitDefaultsTrainAgentRequest();
  InitDefaultsExportAgentRequest();
  InitDefaultsExportAgentResponse();
  InitDefaultsImportAgentRequest();
  InitDefaultsRestoreAgentRequest();
}
}  // namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fagent_2eproto
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {
class Agent;
class AgentDefaultTypeInternal;
extern AgentDefaultTypeInternal _Agent_default_instance_;
class ExportAgentRequest;
class ExportAgentRequestDefaultTypeInternal;
extern ExportAgentRequestDefaultTypeInternal _ExportAgentRequest_default_instance_;
class ExportAgentResponse;
class ExportAgentResponseDefaultTypeInternal;
extern ExportAgentResponseDefaultTypeInternal _ExportAgentResponse_default_instance_;
class GetAgentRequest;
class GetAgentRequestDefaultTypeInternal;
extern GetAgentRequestDefaultTypeInternal _GetAgentRequest_default_instance_;
class ImportAgentRequest;
class ImportAgentRequestDefaultTypeInternal;
extern ImportAgentRequestDefaultTypeInternal _ImportAgentRequest_default_instance_;
class RestoreAgentRequest;
class RestoreAgentRequestDefaultTypeInternal;
extern RestoreAgentRequestDefaultTypeInternal _RestoreAgentRequest_default_instance_;
class SearchAgentsRequest;
class SearchAgentsRequestDefaultTypeInternal;
extern SearchAgentsRequestDefaultTypeInternal _SearchAgentsRequest_default_instance_;
class SearchAgentsResponse;
class SearchAgentsResponseDefaultTypeInternal;
extern SearchAgentsResponseDefaultTypeInternal _SearchAgentsResponse_default_instance_;
class TrainAgentRequest;
class TrainAgentRequestDefaultTypeInternal;
extern TrainAgentRequestDefaultTypeInternal _TrainAgentRequest_default_instance_;
}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {

enum Agent_MatchMode {
  Agent_MatchMode_MATCH_MODE_UNSPECIFIED = 0,
  Agent_MatchMode_MATCH_MODE_HYBRID = 1,
  Agent_MatchMode_MATCH_MODE_ML_ONLY = 2,
  Agent_MatchMode_Agent_MatchMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Agent_MatchMode_Agent_MatchMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Agent_MatchMode_IsValid(int value);
const Agent_MatchMode Agent_MatchMode_MatchMode_MIN = Agent_MatchMode_MATCH_MODE_UNSPECIFIED;
const Agent_MatchMode Agent_MatchMode_MatchMode_MAX = Agent_MatchMode_MATCH_MODE_ML_ONLY;
const int Agent_MatchMode_MatchMode_ARRAYSIZE = Agent_MatchMode_MatchMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* Agent_MatchMode_descriptor();
inline const ::std::string& Agent_MatchMode_Name(Agent_MatchMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    Agent_MatchMode_descriptor(), value);
}
inline bool Agent_MatchMode_Parse(
    const ::std::string& name, Agent_MatchMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Agent_MatchMode>(
    Agent_MatchMode_descriptor(), name, value);
}
// ===================================================================

class Agent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Agent) */ {
 public:
  Agent();
  virtual ~Agent();

  Agent(const Agent& from);

  inline Agent& operator=(const Agent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Agent(Agent&& from) noexcept
    : Agent() {
    *this = ::std::move(from);
  }

  inline Agent& operator=(Agent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Agent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Agent* internal_default_instance() {
    return reinterpret_cast<const Agent*>(
               &_Agent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(Agent* other);
  void Swap(Agent* other);
  friend void swap(Agent& a, Agent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Agent* New() const PROTOBUF_FINAL { return New(NULL); }

  Agent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Agent& from);
  void MergeFrom(const Agent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Agent* other);
  protected:
  explicit Agent(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Agent_MatchMode MatchMode;
  static const MatchMode MATCH_MODE_UNSPECIFIED =
    Agent_MatchMode_MATCH_MODE_UNSPECIFIED;
  static const MatchMode MATCH_MODE_HYBRID =
    Agent_MatchMode_MATCH_MODE_HYBRID;
  static const MatchMode MATCH_MODE_ML_ONLY =
    Agent_MatchMode_MATCH_MODE_ML_ONLY;
  static inline bool MatchMode_IsValid(int value) {
    return Agent_MatchMode_IsValid(value);
  }
  static const MatchMode MatchMode_MIN =
    Agent_MatchMode_MatchMode_MIN;
  static const MatchMode MatchMode_MAX =
    Agent_MatchMode_MatchMode_MAX;
  static const int MatchMode_ARRAYSIZE =
    Agent_MatchMode_MatchMode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MatchMode_descriptor() {
    return Agent_MatchMode_descriptor();
  }
  static inline const ::std::string& MatchMode_Name(MatchMode value) {
    return Agent_MatchMode_Name(value);
  }
  static inline bool MatchMode_Parse(const ::std::string& name,
      MatchMode* value) {
    return Agent_MatchMode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string supported_language_codes = 4;
  int supported_language_codes_size() const;
  void clear_supported_language_codes();
  static const int kSupportedLanguageCodesFieldNumber = 4;
  const ::std::string& supported_language_codes(int index) const;
  ::std::string* mutable_supported_language_codes(int index);
  void set_supported_language_codes(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_supported_language_codes(int index, ::std::string&& value);
  #endif
  void set_supported_language_codes(int index, const char* value);
  void set_supported_language_codes(int index, const char* value, size_t size);
  ::std::string* add_supported_language_codes();
  void add_supported_language_codes(const ::std::string& value);
  #if LANG_CXX11
  void add_supported_language_codes(::std::string&& value);
  #endif
  void add_supported_language_codes(const char* value);
  void add_supported_language_codes(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& supported_language_codes() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_supported_language_codes();

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string display_name = 2;
  void clear_display_name();
  static const int kDisplayNameFieldNumber = 2;
  const ::std::string& display_name() const;
  void set_display_name(const ::std::string& value);
  #if LANG_CXX11
  void set_display_name(::std::string&& value);
  #endif
  void set_display_name(const char* value);
  void set_display_name(const char* value, size_t size);
  ::std::string* mutable_display_name();
  ::std::string* release_display_name();
  void set_allocated_display_name(::std::string* display_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_display_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_display_name(
      ::std::string* display_name);

  // string default_language_code = 3;
  void clear_default_language_code();
  static const int kDefaultLanguageCodeFieldNumber = 3;
  const ::std::string& default_language_code() const;
  void set_default_language_code(const ::std::string& value);
  #if LANG_CXX11
  void set_default_language_code(::std::string&& value);
  #endif
  void set_default_language_code(const char* value);
  void set_default_language_code(const char* value, size_t size);
  ::std::string* mutable_default_language_code();
  ::std::string* release_default_language_code();
  void set_allocated_default_language_code(::std::string* default_language_code);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_default_language_code();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_default_language_code(
      ::std::string* default_language_code);

  // string time_zone = 5;
  void clear_time_zone();
  static const int kTimeZoneFieldNumber = 5;
  const ::std::string& time_zone() const;
  void set_time_zone(const ::std::string& value);
  #if LANG_CXX11
  void set_time_zone(::std::string&& value);
  #endif
  void set_time_zone(const char* value);
  void set_time_zone(const char* value, size_t size);
  ::std::string* mutable_time_zone();
  ::std::string* release_time_zone();
  void set_allocated_time_zone(::std::string* time_zone);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_time_zone();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_time_zone(
      ::std::string* time_zone);

  // string description = 6;
  void clear_description();
  static const int kDescriptionFieldNumber = 6;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_description();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_description(
      ::std::string* description);

  // string avatar_uri = 7;
  void clear_avatar_uri();
  static const int kAvatarUriFieldNumber = 7;
  const ::std::string& avatar_uri() const;
  void set_avatar_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_avatar_uri(::std::string&& value);
  #endif
  void set_avatar_uri(const char* value);
  void set_avatar_uri(const char* value, size_t size);
  ::std::string* mutable_avatar_uri();
  ::std::string* release_avatar_uri();
  void set_allocated_avatar_uri(::std::string* avatar_uri);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_avatar_uri();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_avatar_uri(
      ::std::string* avatar_uri);

  // bool enable_logging = 8;
  void clear_enable_logging();
  static const int kEnableLoggingFieldNumber = 8;
  bool enable_logging() const;
  void set_enable_logging(bool value);

  // .google.cloud.dialogflow.v2beta1.Agent.MatchMode match_mode = 9;
  void clear_match_mode();
  static const int kMatchModeFieldNumber = 9;
  ::google::cloud::dialogflow::v2beta1::Agent_MatchMode match_mode() const;
  void set_match_mode(::google::cloud::dialogflow::v2beta1::Agent_MatchMode value);

  // float classification_threshold = 10;
  void clear_classification_threshold();
  static const int kClassificationThresholdFieldNumber = 10;
  float classification_threshold() const;
  void set_classification_threshold(float value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Agent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> supported_language_codes_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr display_name_;
  ::google::protobuf::internal::ArenaStringPtr default_language_code_;
  ::google::protobuf::internal::ArenaStringPtr time_zone_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr avatar_uri_;
  bool enable_logging_;
  int match_mode_;
  float classification_threshold_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fagent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fagent_2eproto::InitDefaultsAgentImpl();
};
// -------------------------------------------------------------------

class GetAgentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.GetAgentRequest) */ {
 public:
  GetAgentRequest();
  virtual ~GetAgentRequest();

  GetAgentRequest(const GetAgentRequest& from);

  inline GetAgentRequest& operator=(const GetAgentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetAgentRequest(GetAgentRequest&& from) noexcept
    : GetAgentRequest() {
    *this = ::std::move(from);
  }

  inline GetAgentRequest& operator=(GetAgentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAgentRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetAgentRequest* internal_default_instance() {
    return reinterpret_cast<const GetAgentRequest*>(
               &_GetAgentRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(GetAgentRequest* other);
  void Swap(GetAgentRequest* other);
  friend void swap(GetAgentRequest& a, GetAgentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetAgentRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAgentRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAgentRequest& from);
  void MergeFrom(const GetAgentRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAgentRequest* other);
  protected:
  explicit GetAgentRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.GetAgentRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fagent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fagent_2eproto::InitDefaultsGetAgentRequestImpl();
};
// -------------------------------------------------------------------

class SearchAgentsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.SearchAgentsRequest) */ {
 public:
  SearchAgentsRequest();
  virtual ~SearchAgentsRequest();

  SearchAgentsRequest(const SearchAgentsRequest& from);

  inline SearchAgentsRequest& operator=(const SearchAgentsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchAgentsRequest(SearchAgentsRequest&& from) noexcept
    : SearchAgentsRequest() {
    *this = ::std::move(from);
  }

  inline SearchAgentsRequest& operator=(SearchAgentsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchAgentsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchAgentsRequest* internal_default_instance() {
    return reinterpret_cast<const SearchAgentsRequest*>(
               &_SearchAgentsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(SearchAgentsRequest* other);
  void Swap(SearchAgentsRequest* other);
  friend void swap(SearchAgentsRequest& a, SearchAgentsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchAgentsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchAgentsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchAgentsRequest& from);
  void MergeFrom(const SearchAgentsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchAgentsRequest* other);
  protected:
  explicit SearchAgentsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.SearchAgentsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fagent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fagent_2eproto::InitDefaultsSearchAgentsRequestImpl();
};
// -------------------------------------------------------------------

class SearchAgentsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.SearchAgentsResponse) */ {
 public:
  SearchAgentsResponse();
  virtual ~SearchAgentsResponse();

  SearchAgentsResponse(const SearchAgentsResponse& from);

  inline SearchAgentsResponse& operator=(const SearchAgentsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchAgentsResponse(SearchAgentsResponse&& from) noexcept
    : SearchAgentsResponse() {
    *this = ::std::move(from);
  }

  inline SearchAgentsResponse& operator=(SearchAgentsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchAgentsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchAgentsResponse* internal_default_instance() {
    return reinterpret_cast<const SearchAgentsResponse*>(
               &_SearchAgentsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(SearchAgentsResponse* other);
  void Swap(SearchAgentsResponse* other);
  friend void swap(SearchAgentsResponse& a, SearchAgentsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchAgentsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchAgentsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchAgentsResponse& from);
  void MergeFrom(const SearchAgentsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchAgentsResponse* other);
  protected:
  explicit SearchAgentsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.dialogflow.v2beta1.Agent agents = 1;
  int agents_size() const;
  void clear_agents();
  static const int kAgentsFieldNumber = 1;
  const ::google::cloud::dialogflow::v2beta1::Agent& agents(int index) const;
  ::google::cloud::dialogflow::v2beta1::Agent* mutable_agents(int index);
  ::google::cloud::dialogflow::v2beta1::Agent* add_agents();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Agent >*
      mutable_agents();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Agent >&
      agents() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_next_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.SearchAgentsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Agent > agents_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fagent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fagent_2eproto::InitDefaultsSearchAgentsResponseImpl();
};
// -------------------------------------------------------------------

class TrainAgentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.TrainAgentRequest) */ {
 public:
  TrainAgentRequest();
  virtual ~TrainAgentRequest();

  TrainAgentRequest(const TrainAgentRequest& from);

  inline TrainAgentRequest& operator=(const TrainAgentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrainAgentRequest(TrainAgentRequest&& from) noexcept
    : TrainAgentRequest() {
    *this = ::std::move(from);
  }

  inline TrainAgentRequest& operator=(TrainAgentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const TrainAgentRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainAgentRequest* internal_default_instance() {
    return reinterpret_cast<const TrainAgentRequest*>(
               &_TrainAgentRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(TrainAgentRequest* other);
  void Swap(TrainAgentRequest* other);
  friend void swap(TrainAgentRequest& a, TrainAgentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrainAgentRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  TrainAgentRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TrainAgentRequest& from);
  void MergeFrom(const TrainAgentRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TrainAgentRequest* other);
  protected:
  explicit TrainAgentRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.TrainAgentRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fagent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fagent_2eproto::InitDefaultsTrainAgentRequestImpl();
};
// -------------------------------------------------------------------

class ExportAgentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.ExportAgentRequest) */ {
 public:
  ExportAgentRequest();
  virtual ~ExportAgentRequest();

  ExportAgentRequest(const ExportAgentRequest& from);

  inline ExportAgentRequest& operator=(const ExportAgentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExportAgentRequest(ExportAgentRequest&& from) noexcept
    : ExportAgentRequest() {
    *this = ::std::move(from);
  }

  inline ExportAgentRequest& operator=(ExportAgentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExportAgentRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExportAgentRequest* internal_default_instance() {
    return reinterpret_cast<const ExportAgentRequest*>(
               &_ExportAgentRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(ExportAgentRequest* other);
  void Swap(ExportAgentRequest* other);
  friend void swap(ExportAgentRequest& a, ExportAgentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExportAgentRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ExportAgentRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExportAgentRequest& from);
  void MergeFrom(const ExportAgentRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExportAgentRequest* other);
  protected:
  explicit ExportAgentRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string agent_uri = 2;
  void clear_agent_uri();
  static const int kAgentUriFieldNumber = 2;
  const ::std::string& agent_uri() const;
  void set_agent_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_agent_uri(::std::string&& value);
  #endif
  void set_agent_uri(const char* value);
  void set_agent_uri(const char* value, size_t size);
  ::std::string* mutable_agent_uri();
  ::std::string* release_agent_uri();
  void set_allocated_agent_uri(::std::string* agent_uri);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_agent_uri();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_agent_uri(
      ::std::string* agent_uri);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.ExportAgentRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr agent_uri_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fagent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fagent_2eproto::InitDefaultsExportAgentRequestImpl();
};
// -------------------------------------------------------------------

class ExportAgentResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.ExportAgentResponse) */ {
 public:
  ExportAgentResponse();
  virtual ~ExportAgentResponse();

  ExportAgentResponse(const ExportAgentResponse& from);

  inline ExportAgentResponse& operator=(const ExportAgentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExportAgentResponse(ExportAgentResponse&& from) noexcept
    : ExportAgentResponse() {
    *this = ::std::move(from);
  }

  inline ExportAgentResponse& operator=(ExportAgentResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExportAgentResponse& default_instance();

  enum AgentCase {
    kAgentUri = 1,
    kAgentContent = 2,
    AGENT_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExportAgentResponse* internal_default_instance() {
    return reinterpret_cast<const ExportAgentResponse*>(
               &_ExportAgentResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(ExportAgentResponse* other);
  void Swap(ExportAgentResponse* other);
  friend void swap(ExportAgentResponse& a, ExportAgentResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExportAgentResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ExportAgentResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExportAgentResponse& from);
  void MergeFrom(const ExportAgentResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExportAgentResponse* other);
  protected:
  explicit ExportAgentResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string agent_uri = 1;
  private:
  bool has_agent_uri() const;
  public:
  void clear_agent_uri();
  static const int kAgentUriFieldNumber = 1;
  const ::std::string& agent_uri() const;
  void set_agent_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_agent_uri(::std::string&& value);
  #endif
  void set_agent_uri(const char* value);
  void set_agent_uri(const char* value, size_t size);
  ::std::string* mutable_agent_uri();
  ::std::string* release_agent_uri();
  void set_allocated_agent_uri(::std::string* agent_uri);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_agent_uri();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_agent_uri(
      ::std::string* agent_uri);

  // bytes agent_content = 2;
  private:
  bool has_agent_content() const;
  public:
  void clear_agent_content();
  static const int kAgentContentFieldNumber = 2;
  const ::std::string& agent_content() const;
  void set_agent_content(const ::std::string& value);
  #if LANG_CXX11
  void set_agent_content(::std::string&& value);
  #endif
  void set_agent_content(const char* value);
  void set_agent_content(const void* value, size_t size);
  ::std::string* mutable_agent_content();
  ::std::string* release_agent_content();
  void set_allocated_agent_content(::std::string* agent_content);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_agent_content();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_agent_content(
      ::std::string* agent_content);

  AgentCase agent_case() const;
  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.ExportAgentResponse)
 private:
  void set_has_agent_uri();
  void set_has_agent_content();

  inline bool has_agent() const;
  void clear_agent();
  inline void clear_has_agent();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union AgentUnion {
    AgentUnion() {}
    ::google::protobuf::internal::ArenaStringPtr agent_uri_;
    ::google::protobuf::internal::ArenaStringPtr agent_content_;
  } agent_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fagent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fagent_2eproto::InitDefaultsExportAgentResponseImpl();
};
// -------------------------------------------------------------------

class ImportAgentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.ImportAgentRequest) */ {
 public:
  ImportAgentRequest();
  virtual ~ImportAgentRequest();

  ImportAgentRequest(const ImportAgentRequest& from);

  inline ImportAgentRequest& operator=(const ImportAgentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImportAgentRequest(ImportAgentRequest&& from) noexcept
    : ImportAgentRequest() {
    *this = ::std::move(from);
  }

  inline ImportAgentRequest& operator=(ImportAgentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImportAgentRequest& default_instance();

  enum AgentCase {
    kAgentUri = 2,
    kAgentContent = 3,
    AGENT_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImportAgentRequest* internal_default_instance() {
    return reinterpret_cast<const ImportAgentRequest*>(
               &_ImportAgentRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(ImportAgentRequest* other);
  void Swap(ImportAgentRequest* other);
  friend void swap(ImportAgentRequest& a, ImportAgentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImportAgentRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ImportAgentRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ImportAgentRequest& from);
  void MergeFrom(const ImportAgentRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ImportAgentRequest* other);
  protected:
  explicit ImportAgentRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string agent_uri = 2;
  private:
  bool has_agent_uri() const;
  public:
  void clear_agent_uri();
  static const int kAgentUriFieldNumber = 2;
  const ::std::string& agent_uri() const;
  void set_agent_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_agent_uri(::std::string&& value);
  #endif
  void set_agent_uri(const char* value);
  void set_agent_uri(const char* value, size_t size);
  ::std::string* mutable_agent_uri();
  ::std::string* release_agent_uri();
  void set_allocated_agent_uri(::std::string* agent_uri);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_agent_uri();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_agent_uri(
      ::std::string* agent_uri);

  // bytes agent_content = 3;
  private:
  bool has_agent_content() const;
  public:
  void clear_agent_content();
  static const int kAgentContentFieldNumber = 3;
  const ::std::string& agent_content() const;
  void set_agent_content(const ::std::string& value);
  #if LANG_CXX11
  void set_agent_content(::std::string&& value);
  #endif
  void set_agent_content(const char* value);
  void set_agent_content(const void* value, size_t size);
  ::std::string* mutable_agent_content();
  ::std::string* release_agent_content();
  void set_allocated_agent_content(::std::string* agent_content);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_agent_content();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_agent_content(
      ::std::string* agent_content);

  AgentCase agent_case() const;
  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.ImportAgentRequest)
 private:
  void set_has_agent_uri();
  void set_has_agent_content();

  inline bool has_agent() const;
  void clear_agent();
  inline void clear_has_agent();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  union AgentUnion {
    AgentUnion() {}
    ::google::protobuf::internal::ArenaStringPtr agent_uri_;
    ::google::protobuf::internal::ArenaStringPtr agent_content_;
  } agent_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fagent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fagent_2eproto::InitDefaultsImportAgentRequestImpl();
};
// -------------------------------------------------------------------

class RestoreAgentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.RestoreAgentRequest) */ {
 public:
  RestoreAgentRequest();
  virtual ~RestoreAgentRequest();

  RestoreAgentRequest(const RestoreAgentRequest& from);

  inline RestoreAgentRequest& operator=(const RestoreAgentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RestoreAgentRequest(RestoreAgentRequest&& from) noexcept
    : RestoreAgentRequest() {
    *this = ::std::move(from);
  }

  inline RestoreAgentRequest& operator=(RestoreAgentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const RestoreAgentRequest& default_instance();

  enum AgentCase {
    kAgentUri = 2,
    kAgentContent = 3,
    AGENT_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RestoreAgentRequest* internal_default_instance() {
    return reinterpret_cast<const RestoreAgentRequest*>(
               &_RestoreAgentRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(RestoreAgentRequest* other);
  void Swap(RestoreAgentRequest* other);
  friend void swap(RestoreAgentRequest& a, RestoreAgentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RestoreAgentRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RestoreAgentRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RestoreAgentRequest& from);
  void MergeFrom(const RestoreAgentRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RestoreAgentRequest* other);
  protected:
  explicit RestoreAgentRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string agent_uri = 2;
  private:
  bool has_agent_uri() const;
  public:
  void clear_agent_uri();
  static const int kAgentUriFieldNumber = 2;
  const ::std::string& agent_uri() const;
  void set_agent_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_agent_uri(::std::string&& value);
  #endif
  void set_agent_uri(const char* value);
  void set_agent_uri(const char* value, size_t size);
  ::std::string* mutable_agent_uri();
  ::std::string* release_agent_uri();
  void set_allocated_agent_uri(::std::string* agent_uri);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_agent_uri();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_agent_uri(
      ::std::string* agent_uri);

  // bytes agent_content = 3;
  private:
  bool has_agent_content() const;
  public:
  void clear_agent_content();
  static const int kAgentContentFieldNumber = 3;
  const ::std::string& agent_content() const;
  void set_agent_content(const ::std::string& value);
  #if LANG_CXX11
  void set_agent_content(::std::string&& value);
  #endif
  void set_agent_content(const char* value);
  void set_agent_content(const void* value, size_t size);
  ::std::string* mutable_agent_content();
  ::std::string* release_agent_content();
  void set_allocated_agent_content(::std::string* agent_content);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_agent_content();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_agent_content(
      ::std::string* agent_content);

  AgentCase agent_case() const;
  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.RestoreAgentRequest)
 private:
  void set_has_agent_uri();
  void set_has_agent_content();

  inline bool has_agent() const;
  void clear_agent();
  inline void clear_has_agent();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  union AgentUnion {
    AgentUnion() {}
    ::google::protobuf::internal::ArenaStringPtr agent_uri_;
    ::google::protobuf::internal::ArenaStringPtr agent_content_;
  } agent_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fagent_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fagent_2eproto::InitDefaultsRestoreAgentRequestImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Agent

// string parent = 1;
inline void Agent::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Agent::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Agent.parent)
  return parent_.Get();
}
inline void Agent::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Agent.parent)
}
#if LANG_CXX11
inline void Agent::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Agent.parent)
}
#endif
inline void Agent::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Agent.parent)
}
inline void Agent::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Agent.parent)
}
inline ::std::string* Agent::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Agent.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Agent::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Agent.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Agent::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Agent.parent)
}
inline ::std::string* Agent::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Agent.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Agent::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Agent.parent)
}

// string display_name = 2;
inline void Agent::clear_display_name() {
  display_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Agent::display_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Agent.display_name)
  return display_name_.Get();
}
inline void Agent::set_display_name(const ::std::string& value) {
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Agent.display_name)
}
#if LANG_CXX11
inline void Agent::set_display_name(::std::string&& value) {
  
  display_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Agent.display_name)
}
#endif
inline void Agent::set_display_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Agent.display_name)
}
inline void Agent::set_display_name(const char* value,
    size_t size) {
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Agent.display_name)
}
inline ::std::string* Agent::mutable_display_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Agent.display_name)
  return display_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Agent::release_display_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Agent.display_name)
  
  return display_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Agent::set_allocated_display_name(::std::string* display_name) {
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Agent.display_name)
}
inline ::std::string* Agent::unsafe_arena_release_display_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Agent.display_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return display_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Agent::unsafe_arena_set_allocated_display_name(
    ::std::string* display_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      display_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Agent.display_name)
}

// string default_language_code = 3;
inline void Agent::clear_default_language_code() {
  default_language_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Agent::default_language_code() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Agent.default_language_code)
  return default_language_code_.Get();
}
inline void Agent::set_default_language_code(const ::std::string& value) {
  
  default_language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Agent.default_language_code)
}
#if LANG_CXX11
inline void Agent::set_default_language_code(::std::string&& value) {
  
  default_language_code_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Agent.default_language_code)
}
#endif
inline void Agent::set_default_language_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  default_language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Agent.default_language_code)
}
inline void Agent::set_default_language_code(const char* value,
    size_t size) {
  
  default_language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Agent.default_language_code)
}
inline ::std::string* Agent::mutable_default_language_code() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Agent.default_language_code)
  return default_language_code_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Agent::release_default_language_code() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Agent.default_language_code)
  
  return default_language_code_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Agent::set_allocated_default_language_code(::std::string* default_language_code) {
  if (default_language_code != NULL) {
    
  } else {
    
  }
  default_language_code_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), default_language_code,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Agent.default_language_code)
}
inline ::std::string* Agent::unsafe_arena_release_default_language_code() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Agent.default_language_code)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return default_language_code_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Agent::unsafe_arena_set_allocated_default_language_code(
    ::std::string* default_language_code) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (default_language_code != NULL) {
    
  } else {
    
  }
  default_language_code_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      default_language_code, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Agent.default_language_code)
}

// repeated string supported_language_codes = 4;
inline int Agent::supported_language_codes_size() const {
  return supported_language_codes_.size();
}
inline void Agent::clear_supported_language_codes() {
  supported_language_codes_.Clear();
}
inline const ::std::string& Agent::supported_language_codes(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Agent.supported_language_codes)
  return supported_language_codes_.Get(index);
}
inline ::std::string* Agent::mutable_supported_language_codes(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Agent.supported_language_codes)
  return supported_language_codes_.Mutable(index);
}
inline void Agent::set_supported_language_codes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Agent.supported_language_codes)
  supported_language_codes_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Agent::set_supported_language_codes(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Agent.supported_language_codes)
  supported_language_codes_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Agent::set_supported_language_codes(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  supported_language_codes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Agent.supported_language_codes)
}
inline void Agent::set_supported_language_codes(int index, const char* value, size_t size) {
  supported_language_codes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Agent.supported_language_codes)
}
inline ::std::string* Agent::add_supported_language_codes() {
  // @@protoc_insertion_point(field_add_mutable:google.cloud.dialogflow.v2beta1.Agent.supported_language_codes)
  return supported_language_codes_.Add();
}
inline void Agent::add_supported_language_codes(const ::std::string& value) {
  supported_language_codes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Agent.supported_language_codes)
}
#if LANG_CXX11
inline void Agent::add_supported_language_codes(::std::string&& value) {
  supported_language_codes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Agent.supported_language_codes)
}
#endif
inline void Agent::add_supported_language_codes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  supported_language_codes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.dialogflow.v2beta1.Agent.supported_language_codes)
}
inline void Agent::add_supported_language_codes(const char* value, size_t size) {
  supported_language_codes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.dialogflow.v2beta1.Agent.supported_language_codes)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Agent::supported_language_codes() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.Agent.supported_language_codes)
  return supported_language_codes_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Agent::mutable_supported_language_codes() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.Agent.supported_language_codes)
  return &supported_language_codes_;
}

// string time_zone = 5;
inline void Agent::clear_time_zone() {
  time_zone_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Agent::time_zone() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Agent.time_zone)
  return time_zone_.Get();
}
inline void Agent::set_time_zone(const ::std::string& value) {
  
  time_zone_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Agent.time_zone)
}
#if LANG_CXX11
inline void Agent::set_time_zone(::std::string&& value) {
  
  time_zone_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Agent.time_zone)
}
#endif
inline void Agent::set_time_zone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  time_zone_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Agent.time_zone)
}
inline void Agent::set_time_zone(const char* value,
    size_t size) {
  
  time_zone_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Agent.time_zone)
}
inline ::std::string* Agent::mutable_time_zone() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Agent.time_zone)
  return time_zone_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Agent::release_time_zone() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Agent.time_zone)
  
  return time_zone_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Agent::set_allocated_time_zone(::std::string* time_zone) {
  if (time_zone != NULL) {
    
  } else {
    
  }
  time_zone_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time_zone,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Agent.time_zone)
}
inline ::std::string* Agent::unsafe_arena_release_time_zone() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Agent.time_zone)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return time_zone_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Agent::unsafe_arena_set_allocated_time_zone(
    ::std::string* time_zone) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (time_zone != NULL) {
    
  } else {
    
  }
  time_zone_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      time_zone, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Agent.time_zone)
}

// string description = 6;
inline void Agent::clear_description() {
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Agent::description() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Agent.description)
  return description_.Get();
}
inline void Agent::set_description(const ::std::string& value) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Agent.description)
}
#if LANG_CXX11
inline void Agent::set_description(::std::string&& value) {
  
  description_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Agent.description)
}
#endif
inline void Agent::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Agent.description)
}
inline void Agent::set_description(const char* value,
    size_t size) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Agent.description)
}
inline ::std::string* Agent::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Agent.description)
  return description_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Agent::release_description() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Agent.description)
  
  return description_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Agent::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Agent.description)
}
inline ::std::string* Agent::unsafe_arena_release_description() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Agent.description)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return description_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Agent::unsafe_arena_set_allocated_description(
    ::std::string* description) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (description != NULL) {
    
  } else {
    
  }
  description_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      description, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Agent.description)
}

// string avatar_uri = 7;
inline void Agent::clear_avatar_uri() {
  avatar_uri_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Agent::avatar_uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Agent.avatar_uri)
  return avatar_uri_.Get();
}
inline void Agent::set_avatar_uri(const ::std::string& value) {
  
  avatar_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Agent.avatar_uri)
}
#if LANG_CXX11
inline void Agent::set_avatar_uri(::std::string&& value) {
  
  avatar_uri_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Agent.avatar_uri)
}
#endif
inline void Agent::set_avatar_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  avatar_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Agent.avatar_uri)
}
inline void Agent::set_avatar_uri(const char* value,
    size_t size) {
  
  avatar_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Agent.avatar_uri)
}
inline ::std::string* Agent::mutable_avatar_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Agent.avatar_uri)
  return avatar_uri_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Agent::release_avatar_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Agent.avatar_uri)
  
  return avatar_uri_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Agent::set_allocated_avatar_uri(::std::string* avatar_uri) {
  if (avatar_uri != NULL) {
    
  } else {
    
  }
  avatar_uri_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), avatar_uri,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Agent.avatar_uri)
}
inline ::std::string* Agent::unsafe_arena_release_avatar_uri() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Agent.avatar_uri)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return avatar_uri_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Agent::unsafe_arena_set_allocated_avatar_uri(
    ::std::string* avatar_uri) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (avatar_uri != NULL) {
    
  } else {
    
  }
  avatar_uri_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      avatar_uri, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Agent.avatar_uri)
}

// bool enable_logging = 8;
inline void Agent::clear_enable_logging() {
  enable_logging_ = false;
}
inline bool Agent::enable_logging() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Agent.enable_logging)
  return enable_logging_;
}
inline void Agent::set_enable_logging(bool value) {
  
  enable_logging_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Agent.enable_logging)
}

// .google.cloud.dialogflow.v2beta1.Agent.MatchMode match_mode = 9;
inline void Agent::clear_match_mode() {
  match_mode_ = 0;
}
inline ::google::cloud::dialogflow::v2beta1::Agent_MatchMode Agent::match_mode() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Agent.match_mode)
  return static_cast< ::google::cloud::dialogflow::v2beta1::Agent_MatchMode >(match_mode_);
}
inline void Agent::set_match_mode(::google::cloud::dialogflow::v2beta1::Agent_MatchMode value) {
  
  match_mode_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Agent.match_mode)
}

// float classification_threshold = 10;
inline void Agent::clear_classification_threshold() {
  classification_threshold_ = 0;
}
inline float Agent::classification_threshold() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Agent.classification_threshold)
  return classification_threshold_;
}
inline void Agent::set_classification_threshold(float value) {
  
  classification_threshold_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Agent.classification_threshold)
}

// -------------------------------------------------------------------

// GetAgentRequest

// string parent = 1;
inline void GetAgentRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetAgentRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.GetAgentRequest.parent)
  return parent_.Get();
}
inline void GetAgentRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.GetAgentRequest.parent)
}
#if LANG_CXX11
inline void GetAgentRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.GetAgentRequest.parent)
}
#endif
inline void GetAgentRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.GetAgentRequest.parent)
}
inline void GetAgentRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.GetAgentRequest.parent)
}
inline ::std::string* GetAgentRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.GetAgentRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetAgentRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.GetAgentRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GetAgentRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.GetAgentRequest.parent)
}
inline ::std::string* GetAgentRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.GetAgentRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetAgentRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.GetAgentRequest.parent)
}

// -------------------------------------------------------------------

// SearchAgentsRequest

// string parent = 1;
inline void SearchAgentsRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SearchAgentsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.SearchAgentsRequest.parent)
  return parent_.Get();
}
inline void SearchAgentsRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.SearchAgentsRequest.parent)
}
#if LANG_CXX11
inline void SearchAgentsRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.SearchAgentsRequest.parent)
}
#endif
inline void SearchAgentsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.SearchAgentsRequest.parent)
}
inline void SearchAgentsRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.SearchAgentsRequest.parent)
}
inline ::std::string* SearchAgentsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.SearchAgentsRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchAgentsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.SearchAgentsRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SearchAgentsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.SearchAgentsRequest.parent)
}
inline ::std::string* SearchAgentsRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.SearchAgentsRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SearchAgentsRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.SearchAgentsRequest.parent)
}

// int32 page_size = 2;
inline void SearchAgentsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 SearchAgentsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.SearchAgentsRequest.page_size)
  return page_size_;
}
inline void SearchAgentsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.SearchAgentsRequest.page_size)
}

// string page_token = 3;
inline void SearchAgentsRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SearchAgentsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.SearchAgentsRequest.page_token)
  return page_token_.Get();
}
inline void SearchAgentsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.SearchAgentsRequest.page_token)
}
#if LANG_CXX11
inline void SearchAgentsRequest::set_page_token(::std::string&& value) {
  
  page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.SearchAgentsRequest.page_token)
}
#endif
inline void SearchAgentsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.SearchAgentsRequest.page_token)
}
inline void SearchAgentsRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.SearchAgentsRequest.page_token)
}
inline ::std::string* SearchAgentsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.SearchAgentsRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchAgentsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.SearchAgentsRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SearchAgentsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.SearchAgentsRequest.page_token)
}
inline ::std::string* SearchAgentsRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.SearchAgentsRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SearchAgentsRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.SearchAgentsRequest.page_token)
}

// -------------------------------------------------------------------

// SearchAgentsResponse

// repeated .google.cloud.dialogflow.v2beta1.Agent agents = 1;
inline int SearchAgentsResponse::agents_size() const {
  return agents_.size();
}
inline void SearchAgentsResponse::clear_agents() {
  agents_.Clear();
}
inline const ::google::cloud::dialogflow::v2beta1::Agent& SearchAgentsResponse::agents(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.SearchAgentsResponse.agents)
  return agents_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::Agent* SearchAgentsResponse::mutable_agents(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.SearchAgentsResponse.agents)
  return agents_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::Agent* SearchAgentsResponse::add_agents() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.SearchAgentsResponse.agents)
  return agents_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Agent >*
SearchAgentsResponse::mutable_agents() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.SearchAgentsResponse.agents)
  return &agents_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Agent >&
SearchAgentsResponse::agents() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.SearchAgentsResponse.agents)
  return agents_;
}

// string next_page_token = 2;
inline void SearchAgentsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SearchAgentsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.SearchAgentsResponse.next_page_token)
  return next_page_token_.Get();
}
inline void SearchAgentsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.SearchAgentsResponse.next_page_token)
}
#if LANG_CXX11
inline void SearchAgentsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.SearchAgentsResponse.next_page_token)
}
#endif
inline void SearchAgentsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.SearchAgentsResponse.next_page_token)
}
inline void SearchAgentsResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.SearchAgentsResponse.next_page_token)
}
inline ::std::string* SearchAgentsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.SearchAgentsResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchAgentsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.SearchAgentsResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SearchAgentsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.SearchAgentsResponse.next_page_token)
}
inline ::std::string* SearchAgentsResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.SearchAgentsResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SearchAgentsResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.SearchAgentsResponse.next_page_token)
}

// -------------------------------------------------------------------

// TrainAgentRequest

// string parent = 1;
inline void TrainAgentRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& TrainAgentRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.TrainAgentRequest.parent)
  return parent_.Get();
}
inline void TrainAgentRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.TrainAgentRequest.parent)
}
#if LANG_CXX11
inline void TrainAgentRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.TrainAgentRequest.parent)
}
#endif
inline void TrainAgentRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.TrainAgentRequest.parent)
}
inline void TrainAgentRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.TrainAgentRequest.parent)
}
inline ::std::string* TrainAgentRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.TrainAgentRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* TrainAgentRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.TrainAgentRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void TrainAgentRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.TrainAgentRequest.parent)
}
inline ::std::string* TrainAgentRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.TrainAgentRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void TrainAgentRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.TrainAgentRequest.parent)
}

// -------------------------------------------------------------------

// ExportAgentRequest

// string parent = 1;
inline void ExportAgentRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ExportAgentRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ExportAgentRequest.parent)
  return parent_.Get();
}
inline void ExportAgentRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ExportAgentRequest.parent)
}
#if LANG_CXX11
inline void ExportAgentRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.ExportAgentRequest.parent)
}
#endif
inline void ExportAgentRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.ExportAgentRequest.parent)
}
inline void ExportAgentRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.ExportAgentRequest.parent)
}
inline ::std::string* ExportAgentRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ExportAgentRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ExportAgentRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.ExportAgentRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ExportAgentRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.ExportAgentRequest.parent)
}
inline ::std::string* ExportAgentRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.ExportAgentRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ExportAgentRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.ExportAgentRequest.parent)
}

// string agent_uri = 2;
inline void ExportAgentRequest::clear_agent_uri() {
  agent_uri_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ExportAgentRequest::agent_uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ExportAgentRequest.agent_uri)
  return agent_uri_.Get();
}
inline void ExportAgentRequest::set_agent_uri(const ::std::string& value) {
  
  agent_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ExportAgentRequest.agent_uri)
}
#if LANG_CXX11
inline void ExportAgentRequest::set_agent_uri(::std::string&& value) {
  
  agent_uri_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.ExportAgentRequest.agent_uri)
}
#endif
inline void ExportAgentRequest::set_agent_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  agent_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.ExportAgentRequest.agent_uri)
}
inline void ExportAgentRequest::set_agent_uri(const char* value,
    size_t size) {
  
  agent_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.ExportAgentRequest.agent_uri)
}
inline ::std::string* ExportAgentRequest::mutable_agent_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ExportAgentRequest.agent_uri)
  return agent_uri_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ExportAgentRequest::release_agent_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.ExportAgentRequest.agent_uri)
  
  return agent_uri_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ExportAgentRequest::set_allocated_agent_uri(::std::string* agent_uri) {
  if (agent_uri != NULL) {
    
  } else {
    
  }
  agent_uri_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_uri,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.ExportAgentRequest.agent_uri)
}
inline ::std::string* ExportAgentRequest::unsafe_arena_release_agent_uri() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.ExportAgentRequest.agent_uri)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return agent_uri_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ExportAgentRequest::unsafe_arena_set_allocated_agent_uri(
    ::std::string* agent_uri) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (agent_uri != NULL) {
    
  } else {
    
  }
  agent_uri_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      agent_uri, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.ExportAgentRequest.agent_uri)
}

// -------------------------------------------------------------------

// ExportAgentResponse

// string agent_uri = 1;
inline bool ExportAgentResponse::has_agent_uri() const {
  return agent_case() == kAgentUri;
}
inline void ExportAgentResponse::set_has_agent_uri() {
  _oneof_case_[0] = kAgentUri;
}
inline void ExportAgentResponse::clear_agent_uri() {
  if (has_agent_uri()) {
    agent_.agent_uri_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_agent();
  }
}
inline const ::std::string& ExportAgentResponse::agent_uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ExportAgentResponse.agent_uri)
  if (has_agent_uri()) {
    return agent_.agent_uri_.Get();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void ExportAgentResponse::set_agent_uri(const ::std::string& value) {
  if (!has_agent_uri()) {
    clear_agent();
    set_has_agent_uri();
    agent_.agent_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  agent_.agent_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ExportAgentResponse.agent_uri)
}
#if LANG_CXX11
inline void ExportAgentResponse::set_agent_uri(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ExportAgentResponse.agent_uri)
  if (!has_agent_uri()) {
    clear_agent();
    set_has_agent_uri();
    agent_.agent_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  agent_.agent_uri_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.ExportAgentResponse.agent_uri)
}
#endif
inline void ExportAgentResponse::set_agent_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_agent_uri()) {
    clear_agent();
    set_has_agent_uri();
    agent_.agent_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  agent_.agent_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.ExportAgentResponse.agent_uri)
}
inline void ExportAgentResponse::set_agent_uri(const char* value,
                             size_t size) {
  if (!has_agent_uri()) {
    clear_agent();
    set_has_agent_uri();
    agent_.agent_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  agent_.agent_uri_.Set(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.ExportAgentResponse.agent_uri)
}
inline ::std::string* ExportAgentResponse::mutable_agent_uri() {
  if (!has_agent_uri()) {
    clear_agent();
    set_has_agent_uri();
    agent_.agent_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return agent_.agent_uri_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ExportAgentResponse.agent_uri)
}
inline ::std::string* ExportAgentResponse::release_agent_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.ExportAgentResponse.agent_uri)
  if (has_agent_uri()) {
    clear_has_agent();
    return agent_.agent_uri_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void ExportAgentResponse::set_allocated_agent_uri(::std::string* agent_uri) {
  if (!has_agent_uri()) {
    agent_.agent_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_agent();
  if (agent_uri != NULL) {
    set_has_agent_uri();
    agent_.agent_uri_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_uri,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.ExportAgentResponse.agent_uri)
}
inline ::std::string* ExportAgentResponse::unsafe_arena_release_agent_uri() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.ExportAgentResponse.agent_uri)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_agent_uri()) {
    clear_has_agent();
    return agent_.agent_uri_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void ExportAgentResponse::unsafe_arena_set_allocated_agent_uri(::std::string* agent_uri) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_agent_uri()) {
    agent_.agent_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_agent();
  if (agent_uri) {
    set_has_agent_uri();
    agent_.agent_uri_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_uri, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.ExportAgentResponse.agent_uri)
}

// bytes agent_content = 2;
inline bool ExportAgentResponse::has_agent_content() const {
  return agent_case() == kAgentContent;
}
inline void ExportAgentResponse::set_has_agent_content() {
  _oneof_case_[0] = kAgentContent;
}
inline void ExportAgentResponse::clear_agent_content() {
  if (has_agent_content()) {
    agent_.agent_content_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_agent();
  }
}
inline const ::std::string& ExportAgentResponse::agent_content() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ExportAgentResponse.agent_content)
  if (has_agent_content()) {
    return agent_.agent_content_.Get();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void ExportAgentResponse::set_agent_content(const ::std::string& value) {
  if (!has_agent_content()) {
    clear_agent();
    set_has_agent_content();
    agent_.agent_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  agent_.agent_content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ExportAgentResponse.agent_content)
}
#if LANG_CXX11
inline void ExportAgentResponse::set_agent_content(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ExportAgentResponse.agent_content)
  if (!has_agent_content()) {
    clear_agent();
    set_has_agent_content();
    agent_.agent_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  agent_.agent_content_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.ExportAgentResponse.agent_content)
}
#endif
inline void ExportAgentResponse::set_agent_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_agent_content()) {
    clear_agent();
    set_has_agent_content();
    agent_.agent_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  agent_.agent_content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.ExportAgentResponse.agent_content)
}
inline void ExportAgentResponse::set_agent_content(const void* value,
                             size_t size) {
  if (!has_agent_content()) {
    clear_agent();
    set_has_agent_content();
    agent_.agent_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  agent_.agent_content_.Set(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.ExportAgentResponse.agent_content)
}
inline ::std::string* ExportAgentResponse::mutable_agent_content() {
  if (!has_agent_content()) {
    clear_agent();
    set_has_agent_content();
    agent_.agent_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return agent_.agent_content_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ExportAgentResponse.agent_content)
}
inline ::std::string* ExportAgentResponse::release_agent_content() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.ExportAgentResponse.agent_content)
  if (has_agent_content()) {
    clear_has_agent();
    return agent_.agent_content_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void ExportAgentResponse::set_allocated_agent_content(::std::string* agent_content) {
  if (!has_agent_content()) {
    agent_.agent_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_agent();
  if (agent_content != NULL) {
    set_has_agent_content();
    agent_.agent_content_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_content,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.ExportAgentResponse.agent_content)
}
inline ::std::string* ExportAgentResponse::unsafe_arena_release_agent_content() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.ExportAgentResponse.agent_content)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_agent_content()) {
    clear_has_agent();
    return agent_.agent_content_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void ExportAgentResponse::unsafe_arena_set_allocated_agent_content(::std::string* agent_content) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_agent_content()) {
    agent_.agent_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_agent();
  if (agent_content) {
    set_has_agent_content();
    agent_.agent_content_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_content, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.ExportAgentResponse.agent_content)
}

inline bool ExportAgentResponse::has_agent() const {
  return agent_case() != AGENT_NOT_SET;
}
inline void ExportAgentResponse::clear_has_agent() {
  _oneof_case_[0] = AGENT_NOT_SET;
}
inline ExportAgentResponse::AgentCase ExportAgentResponse::agent_case() const {
  return ExportAgentResponse::AgentCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ImportAgentRequest

// string parent = 1;
inline void ImportAgentRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ImportAgentRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ImportAgentRequest.parent)
  return parent_.Get();
}
inline void ImportAgentRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ImportAgentRequest.parent)
}
#if LANG_CXX11
inline void ImportAgentRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.ImportAgentRequest.parent)
}
#endif
inline void ImportAgentRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.ImportAgentRequest.parent)
}
inline void ImportAgentRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.ImportAgentRequest.parent)
}
inline ::std::string* ImportAgentRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ImportAgentRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ImportAgentRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.ImportAgentRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ImportAgentRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.ImportAgentRequest.parent)
}
inline ::std::string* ImportAgentRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.ImportAgentRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ImportAgentRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.ImportAgentRequest.parent)
}

// string agent_uri = 2;
inline bool ImportAgentRequest::has_agent_uri() const {
  return agent_case() == kAgentUri;
}
inline void ImportAgentRequest::set_has_agent_uri() {
  _oneof_case_[0] = kAgentUri;
}
inline void ImportAgentRequest::clear_agent_uri() {
  if (has_agent_uri()) {
    agent_.agent_uri_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_agent();
  }
}
inline const ::std::string& ImportAgentRequest::agent_uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ImportAgentRequest.agent_uri)
  if (has_agent_uri()) {
    return agent_.agent_uri_.Get();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void ImportAgentRequest::set_agent_uri(const ::std::string& value) {
  if (!has_agent_uri()) {
    clear_agent();
    set_has_agent_uri();
    agent_.agent_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  agent_.agent_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ImportAgentRequest.agent_uri)
}
#if LANG_CXX11
inline void ImportAgentRequest::set_agent_uri(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ImportAgentRequest.agent_uri)
  if (!has_agent_uri()) {
    clear_agent();
    set_has_agent_uri();
    agent_.agent_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  agent_.agent_uri_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.ImportAgentRequest.agent_uri)
}
#endif
inline void ImportAgentRequest::set_agent_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_agent_uri()) {
    clear_agent();
    set_has_agent_uri();
    agent_.agent_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  agent_.agent_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.ImportAgentRequest.agent_uri)
}
inline void ImportAgentRequest::set_agent_uri(const char* value,
                             size_t size) {
  if (!has_agent_uri()) {
    clear_agent();
    set_has_agent_uri();
    agent_.agent_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  agent_.agent_uri_.Set(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.ImportAgentRequest.agent_uri)
}
inline ::std::string* ImportAgentRequest::mutable_agent_uri() {
  if (!has_agent_uri()) {
    clear_agent();
    set_has_agent_uri();
    agent_.agent_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return agent_.agent_uri_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ImportAgentRequest.agent_uri)
}
inline ::std::string* ImportAgentRequest::release_agent_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.ImportAgentRequest.agent_uri)
  if (has_agent_uri()) {
    clear_has_agent();
    return agent_.agent_uri_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void ImportAgentRequest::set_allocated_agent_uri(::std::string* agent_uri) {
  if (!has_agent_uri()) {
    agent_.agent_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_agent();
  if (agent_uri != NULL) {
    set_has_agent_uri();
    agent_.agent_uri_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_uri,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.ImportAgentRequest.agent_uri)
}
inline ::std::string* ImportAgentRequest::unsafe_arena_release_agent_uri() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.ImportAgentRequest.agent_uri)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_agent_uri()) {
    clear_has_agent();
    return agent_.agent_uri_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void ImportAgentRequest::unsafe_arena_set_allocated_agent_uri(::std::string* agent_uri) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_agent_uri()) {
    agent_.agent_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_agent();
  if (agent_uri) {
    set_has_agent_uri();
    agent_.agent_uri_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_uri, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.ImportAgentRequest.agent_uri)
}

// bytes agent_content = 3;
inline bool ImportAgentRequest::has_agent_content() const {
  return agent_case() == kAgentContent;
}
inline void ImportAgentRequest::set_has_agent_content() {
  _oneof_case_[0] = kAgentContent;
}
inline void ImportAgentRequest::clear_agent_content() {
  if (has_agent_content()) {
    agent_.agent_content_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_agent();
  }
}
inline const ::std::string& ImportAgentRequest::agent_content() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ImportAgentRequest.agent_content)
  if (has_agent_content()) {
    return agent_.agent_content_.Get();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void ImportAgentRequest::set_agent_content(const ::std::string& value) {
  if (!has_agent_content()) {
    clear_agent();
    set_has_agent_content();
    agent_.agent_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  agent_.agent_content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ImportAgentRequest.agent_content)
}
#if LANG_CXX11
inline void ImportAgentRequest::set_agent_content(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ImportAgentRequest.agent_content)
  if (!has_agent_content()) {
    clear_agent();
    set_has_agent_content();
    agent_.agent_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  agent_.agent_content_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.ImportAgentRequest.agent_content)
}
#endif
inline void ImportAgentRequest::set_agent_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_agent_content()) {
    clear_agent();
    set_has_agent_content();
    agent_.agent_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  agent_.agent_content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.ImportAgentRequest.agent_content)
}
inline void ImportAgentRequest::set_agent_content(const void* value,
                             size_t size) {
  if (!has_agent_content()) {
    clear_agent();
    set_has_agent_content();
    agent_.agent_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  agent_.agent_content_.Set(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.ImportAgentRequest.agent_content)
}
inline ::std::string* ImportAgentRequest::mutable_agent_content() {
  if (!has_agent_content()) {
    clear_agent();
    set_has_agent_content();
    agent_.agent_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return agent_.agent_content_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ImportAgentRequest.agent_content)
}
inline ::std::string* ImportAgentRequest::release_agent_content() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.ImportAgentRequest.agent_content)
  if (has_agent_content()) {
    clear_has_agent();
    return agent_.agent_content_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void ImportAgentRequest::set_allocated_agent_content(::std::string* agent_content) {
  if (!has_agent_content()) {
    agent_.agent_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_agent();
  if (agent_content != NULL) {
    set_has_agent_content();
    agent_.agent_content_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_content,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.ImportAgentRequest.agent_content)
}
inline ::std::string* ImportAgentRequest::unsafe_arena_release_agent_content() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.ImportAgentRequest.agent_content)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_agent_content()) {
    clear_has_agent();
    return agent_.agent_content_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void ImportAgentRequest::unsafe_arena_set_allocated_agent_content(::std::string* agent_content) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_agent_content()) {
    agent_.agent_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_agent();
  if (agent_content) {
    set_has_agent_content();
    agent_.agent_content_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_content, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.ImportAgentRequest.agent_content)
}

inline bool ImportAgentRequest::has_agent() const {
  return agent_case() != AGENT_NOT_SET;
}
inline void ImportAgentRequest::clear_has_agent() {
  _oneof_case_[0] = AGENT_NOT_SET;
}
inline ImportAgentRequest::AgentCase ImportAgentRequest::agent_case() const {
  return ImportAgentRequest::AgentCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// RestoreAgentRequest

// string parent = 1;
inline void RestoreAgentRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& RestoreAgentRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.parent)
  return parent_.Get();
}
inline void RestoreAgentRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.parent)
}
#if LANG_CXX11
inline void RestoreAgentRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.parent)
}
#endif
inline void RestoreAgentRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.parent)
}
inline void RestoreAgentRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.parent)
}
inline ::std::string* RestoreAgentRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* RestoreAgentRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void RestoreAgentRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.parent)
}
inline ::std::string* RestoreAgentRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void RestoreAgentRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.parent)
}

// string agent_uri = 2;
inline bool RestoreAgentRequest::has_agent_uri() const {
  return agent_case() == kAgentUri;
}
inline void RestoreAgentRequest::set_has_agent_uri() {
  _oneof_case_[0] = kAgentUri;
}
inline void RestoreAgentRequest::clear_agent_uri() {
  if (has_agent_uri()) {
    agent_.agent_uri_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_agent();
  }
}
inline const ::std::string& RestoreAgentRequest::agent_uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.agent_uri)
  if (has_agent_uri()) {
    return agent_.agent_uri_.Get();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void RestoreAgentRequest::set_agent_uri(const ::std::string& value) {
  if (!has_agent_uri()) {
    clear_agent();
    set_has_agent_uri();
    agent_.agent_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  agent_.agent_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.agent_uri)
}
#if LANG_CXX11
inline void RestoreAgentRequest::set_agent_uri(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.agent_uri)
  if (!has_agent_uri()) {
    clear_agent();
    set_has_agent_uri();
    agent_.agent_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  agent_.agent_uri_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.agent_uri)
}
#endif
inline void RestoreAgentRequest::set_agent_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_agent_uri()) {
    clear_agent();
    set_has_agent_uri();
    agent_.agent_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  agent_.agent_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.agent_uri)
}
inline void RestoreAgentRequest::set_agent_uri(const char* value,
                             size_t size) {
  if (!has_agent_uri()) {
    clear_agent();
    set_has_agent_uri();
    agent_.agent_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  agent_.agent_uri_.Set(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.agent_uri)
}
inline ::std::string* RestoreAgentRequest::mutable_agent_uri() {
  if (!has_agent_uri()) {
    clear_agent();
    set_has_agent_uri();
    agent_.agent_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return agent_.agent_uri_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.agent_uri)
}
inline ::std::string* RestoreAgentRequest::release_agent_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.agent_uri)
  if (has_agent_uri()) {
    clear_has_agent();
    return agent_.agent_uri_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void RestoreAgentRequest::set_allocated_agent_uri(::std::string* agent_uri) {
  if (!has_agent_uri()) {
    agent_.agent_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_agent();
  if (agent_uri != NULL) {
    set_has_agent_uri();
    agent_.agent_uri_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_uri,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.agent_uri)
}
inline ::std::string* RestoreAgentRequest::unsafe_arena_release_agent_uri() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.agent_uri)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_agent_uri()) {
    clear_has_agent();
    return agent_.agent_uri_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void RestoreAgentRequest::unsafe_arena_set_allocated_agent_uri(::std::string* agent_uri) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_agent_uri()) {
    agent_.agent_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_agent();
  if (agent_uri) {
    set_has_agent_uri();
    agent_.agent_uri_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_uri, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.agent_uri)
}

// bytes agent_content = 3;
inline bool RestoreAgentRequest::has_agent_content() const {
  return agent_case() == kAgentContent;
}
inline void RestoreAgentRequest::set_has_agent_content() {
  _oneof_case_[0] = kAgentContent;
}
inline void RestoreAgentRequest::clear_agent_content() {
  if (has_agent_content()) {
    agent_.agent_content_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_agent();
  }
}
inline const ::std::string& RestoreAgentRequest::agent_content() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.agent_content)
  if (has_agent_content()) {
    return agent_.agent_content_.Get();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void RestoreAgentRequest::set_agent_content(const ::std::string& value) {
  if (!has_agent_content()) {
    clear_agent();
    set_has_agent_content();
    agent_.agent_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  agent_.agent_content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.agent_content)
}
#if LANG_CXX11
inline void RestoreAgentRequest::set_agent_content(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.agent_content)
  if (!has_agent_content()) {
    clear_agent();
    set_has_agent_content();
    agent_.agent_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  agent_.agent_content_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.agent_content)
}
#endif
inline void RestoreAgentRequest::set_agent_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_agent_content()) {
    clear_agent();
    set_has_agent_content();
    agent_.agent_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  agent_.agent_content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.agent_content)
}
inline void RestoreAgentRequest::set_agent_content(const void* value,
                             size_t size) {
  if (!has_agent_content()) {
    clear_agent();
    set_has_agent_content();
    agent_.agent_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  agent_.agent_content_.Set(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.agent_content)
}
inline ::std::string* RestoreAgentRequest::mutable_agent_content() {
  if (!has_agent_content()) {
    clear_agent();
    set_has_agent_content();
    agent_.agent_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return agent_.agent_content_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.agent_content)
}
inline ::std::string* RestoreAgentRequest::release_agent_content() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.agent_content)
  if (has_agent_content()) {
    clear_has_agent();
    return agent_.agent_content_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void RestoreAgentRequest::set_allocated_agent_content(::std::string* agent_content) {
  if (!has_agent_content()) {
    agent_.agent_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_agent();
  if (agent_content != NULL) {
    set_has_agent_content();
    agent_.agent_content_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_content,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.agent_content)
}
inline ::std::string* RestoreAgentRequest::unsafe_arena_release_agent_content() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.agent_content)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_agent_content()) {
    clear_has_agent();
    return agent_.agent_content_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void RestoreAgentRequest::unsafe_arena_set_allocated_agent_content(::std::string* agent_content) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_agent_content()) {
    agent_.agent_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_agent();
  if (agent_content) {
    set_has_agent_content();
    agent_.agent_content_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_content, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.RestoreAgentRequest.agent_content)
}

inline bool RestoreAgentRequest::has_agent() const {
  return agent_case() != AGENT_NOT_SET;
}
inline void RestoreAgentRequest::clear_has_agent() {
  _oneof_case_[0] = AGENT_NOT_SET;
}
inline RestoreAgentRequest::AgentCase RestoreAgentRequest::agent_case() const {
  return RestoreAgentRequest::AgentCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::cloud::dialogflow::v2beta1::Agent_MatchMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::dialogflow::v2beta1::Agent_MatchMode>() {
  return ::google::cloud::dialogflow::v2beta1::Agent_MatchMode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fcloud_2fdialogflow_2fv2beta1_2fagent_2eproto__INCLUDED
