// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/v2beta1/version.proto

#ifndef PROTOBUF_google_2fcloud_2fdialogflow_2fv2beta1_2fversion_2eproto__INCLUDED
#define PROTOBUF_google_2fcloud_2fdialogflow_2fv2beta1_2fversion_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/field_mask.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fversion_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsVersionImpl();
void InitDefaultsVersion();
void InitDefaultsListVersionsRequestImpl();
void InitDefaultsListVersionsRequest();
void InitDefaultsListVersionsResponseImpl();
void InitDefaultsListVersionsResponse();
void InitDefaultsGetVersionRequestImpl();
void InitDefaultsGetVersionRequest();
void InitDefaultsCreateVersionRequestImpl();
void InitDefaultsCreateVersionRequest();
void InitDefaultsUpdateVersionRequestImpl();
void InitDefaultsUpdateVersionRequest();
void InitDefaultsDeleteVersionRequestImpl();
void InitDefaultsDeleteVersionRequest();
inline void InitDefaults() {
  InitDefaultsVersion();
  InitDefaultsListVersionsRequest();
  InitDefaultsListVersionsResponse();
  InitDefaultsGetVersionRequest();
  InitDefaultsCreateVersionRequest();
  InitDefaultsUpdateVersionRequest();
  InitDefaultsDeleteVersionRequest();
}
}  // namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fversion_2eproto
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {
class CreateVersionRequest;
class CreateVersionRequestDefaultTypeInternal;
extern CreateVersionRequestDefaultTypeInternal _CreateVersionRequest_default_instance_;
class DeleteVersionRequest;
class DeleteVersionRequestDefaultTypeInternal;
extern DeleteVersionRequestDefaultTypeInternal _DeleteVersionRequest_default_instance_;
class GetVersionRequest;
class GetVersionRequestDefaultTypeInternal;
extern GetVersionRequestDefaultTypeInternal _GetVersionRequest_default_instance_;
class ListVersionsRequest;
class ListVersionsRequestDefaultTypeInternal;
extern ListVersionsRequestDefaultTypeInternal _ListVersionsRequest_default_instance_;
class ListVersionsResponse;
class ListVersionsResponseDefaultTypeInternal;
extern ListVersionsResponseDefaultTypeInternal _ListVersionsResponse_default_instance_;
class UpdateVersionRequest;
class UpdateVersionRequestDefaultTypeInternal;
extern UpdateVersionRequestDefaultTypeInternal _UpdateVersionRequest_default_instance_;
class Version;
class VersionDefaultTypeInternal;
extern VersionDefaultTypeInternal _Version_default_instance_;
}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {

// ===================================================================

class Version : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Version) */ {
 public:
  Version();
  virtual ~Version();

  Version(const Version& from);

  inline Version& operator=(const Version& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Version(Version&& from) noexcept
    : Version() {
    *this = ::std::move(from);
  }

  inline Version& operator=(Version&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Version& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Version* internal_default_instance() {
    return reinterpret_cast<const Version*>(
               &_Version_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(Version* other);
  void Swap(Version* other);
  friend void swap(Version& a, Version& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Version* New() const PROTOBUF_FINAL { return New(NULL); }

  Version* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Version& from);
  void MergeFrom(const Version& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Version* other);
  protected:
  explicit Version(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string description = 2;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_description();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_description(
      ::std::string* description);

  // .google.protobuf.Timestamp create_time = 4;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 4;
  private:
  void _slow_mutable_create_time();
  public:
  const ::google::protobuf::Timestamp& create_time() const;
  ::google::protobuf::Timestamp* release_create_time();
  ::google::protobuf::Timestamp* mutable_create_time();
  void set_allocated_create_time(::google::protobuf::Timestamp* create_time);
  void unsafe_arena_set_allocated_create_time(
      ::google::protobuf::Timestamp* create_time);
  ::google::protobuf::Timestamp* unsafe_arena_release_create_time();

  // int32 version_number = 3;
  void clear_version_number();
  static const int kVersionNumberFieldNumber = 3;
  ::google::protobuf::int32 version_number() const;
  void set_version_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Version)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::Timestamp* create_time_;
  ::google::protobuf::int32 version_number_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fversion_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fversion_2eproto::InitDefaultsVersionImpl();
};
// -------------------------------------------------------------------

class ListVersionsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.ListVersionsRequest) */ {
 public:
  ListVersionsRequest();
  virtual ~ListVersionsRequest();

  ListVersionsRequest(const ListVersionsRequest& from);

  inline ListVersionsRequest& operator=(const ListVersionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListVersionsRequest(ListVersionsRequest&& from) noexcept
    : ListVersionsRequest() {
    *this = ::std::move(from);
  }

  inline ListVersionsRequest& operator=(ListVersionsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListVersionsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListVersionsRequest* internal_default_instance() {
    return reinterpret_cast<const ListVersionsRequest*>(
               &_ListVersionsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(ListVersionsRequest* other);
  void Swap(ListVersionsRequest* other);
  friend void swap(ListVersionsRequest& a, ListVersionsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListVersionsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListVersionsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListVersionsRequest& from);
  void MergeFrom(const ListVersionsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListVersionsRequest* other);
  protected:
  explicit ListVersionsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.ListVersionsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fversion_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fversion_2eproto::InitDefaultsListVersionsRequestImpl();
};
// -------------------------------------------------------------------

class ListVersionsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.ListVersionsResponse) */ {
 public:
  ListVersionsResponse();
  virtual ~ListVersionsResponse();

  ListVersionsResponse(const ListVersionsResponse& from);

  inline ListVersionsResponse& operator=(const ListVersionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListVersionsResponse(ListVersionsResponse&& from) noexcept
    : ListVersionsResponse() {
    *this = ::std::move(from);
  }

  inline ListVersionsResponse& operator=(ListVersionsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListVersionsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListVersionsResponse* internal_default_instance() {
    return reinterpret_cast<const ListVersionsResponse*>(
               &_ListVersionsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(ListVersionsResponse* other);
  void Swap(ListVersionsResponse* other);
  friend void swap(ListVersionsResponse& a, ListVersionsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListVersionsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListVersionsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListVersionsResponse& from);
  void MergeFrom(const ListVersionsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListVersionsResponse* other);
  protected:
  explicit ListVersionsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.dialogflow.v2beta1.Version versions = 1;
  int versions_size() const;
  void clear_versions();
  static const int kVersionsFieldNumber = 1;
  const ::google::cloud::dialogflow::v2beta1::Version& versions(int index) const;
  ::google::cloud::dialogflow::v2beta1::Version* mutable_versions(int index);
  ::google::cloud::dialogflow::v2beta1::Version* add_versions();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Version >*
      mutable_versions();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Version >&
      versions() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_next_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.ListVersionsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Version > versions_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fversion_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fversion_2eproto::InitDefaultsListVersionsResponseImpl();
};
// -------------------------------------------------------------------

class GetVersionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.GetVersionRequest) */ {
 public:
  GetVersionRequest();
  virtual ~GetVersionRequest();

  GetVersionRequest(const GetVersionRequest& from);

  inline GetVersionRequest& operator=(const GetVersionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetVersionRequest(GetVersionRequest&& from) noexcept
    : GetVersionRequest() {
    *this = ::std::move(from);
  }

  inline GetVersionRequest& operator=(GetVersionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVersionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetVersionRequest* internal_default_instance() {
    return reinterpret_cast<const GetVersionRequest*>(
               &_GetVersionRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(GetVersionRequest* other);
  void Swap(GetVersionRequest* other);
  friend void swap(GetVersionRequest& a, GetVersionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetVersionRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetVersionRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetVersionRequest& from);
  void MergeFrom(const GetVersionRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetVersionRequest* other);
  protected:
  explicit GetVersionRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.GetVersionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fversion_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fversion_2eproto::InitDefaultsGetVersionRequestImpl();
};
// -------------------------------------------------------------------

class CreateVersionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.CreateVersionRequest) */ {
 public:
  CreateVersionRequest();
  virtual ~CreateVersionRequest();

  CreateVersionRequest(const CreateVersionRequest& from);

  inline CreateVersionRequest& operator=(const CreateVersionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateVersionRequest(CreateVersionRequest&& from) noexcept
    : CreateVersionRequest() {
    *this = ::std::move(from);
  }

  inline CreateVersionRequest& operator=(CreateVersionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateVersionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateVersionRequest* internal_default_instance() {
    return reinterpret_cast<const CreateVersionRequest*>(
               &_CreateVersionRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(CreateVersionRequest* other);
  void Swap(CreateVersionRequest* other);
  friend void swap(CreateVersionRequest& a, CreateVersionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateVersionRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateVersionRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateVersionRequest& from);
  void MergeFrom(const CreateVersionRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateVersionRequest* other);
  protected:
  explicit CreateVersionRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // .google.cloud.dialogflow.v2beta1.Version version = 2;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  private:
  void _slow_mutable_version();
  public:
  const ::google::cloud::dialogflow::v2beta1::Version& version() const;
  ::google::cloud::dialogflow::v2beta1::Version* release_version();
  ::google::cloud::dialogflow::v2beta1::Version* mutable_version();
  void set_allocated_version(::google::cloud::dialogflow::v2beta1::Version* version);
  void unsafe_arena_set_allocated_version(
      ::google::cloud::dialogflow::v2beta1::Version* version);
  ::google::cloud::dialogflow::v2beta1::Version* unsafe_arena_release_version();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.CreateVersionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::cloud::dialogflow::v2beta1::Version* version_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fversion_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fversion_2eproto::InitDefaultsCreateVersionRequestImpl();
};
// -------------------------------------------------------------------

class UpdateVersionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.UpdateVersionRequest) */ {
 public:
  UpdateVersionRequest();
  virtual ~UpdateVersionRequest();

  UpdateVersionRequest(const UpdateVersionRequest& from);

  inline UpdateVersionRequest& operator=(const UpdateVersionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateVersionRequest(UpdateVersionRequest&& from) noexcept
    : UpdateVersionRequest() {
    *this = ::std::move(from);
  }

  inline UpdateVersionRequest& operator=(UpdateVersionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateVersionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateVersionRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateVersionRequest*>(
               &_UpdateVersionRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(UpdateVersionRequest* other);
  void Swap(UpdateVersionRequest* other);
  friend void swap(UpdateVersionRequest& a, UpdateVersionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateVersionRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateVersionRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateVersionRequest& from);
  void MergeFrom(const UpdateVersionRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateVersionRequest* other);
  protected:
  explicit UpdateVersionRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.cloud.dialogflow.v2beta1.Version version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  private:
  void _slow_mutable_version();
  public:
  const ::google::cloud::dialogflow::v2beta1::Version& version() const;
  ::google::cloud::dialogflow::v2beta1::Version* release_version();
  ::google::cloud::dialogflow::v2beta1::Version* mutable_version();
  void set_allocated_version(::google::cloud::dialogflow::v2beta1::Version* version);
  void unsafe_arena_set_allocated_version(
      ::google::cloud::dialogflow::v2beta1::Version* version);
  ::google::cloud::dialogflow::v2beta1::Version* unsafe_arena_release_version();

  // .google.protobuf.FieldMask update_mask = 2;
  bool has_update_mask() const;
  void clear_update_mask();
  static const int kUpdateMaskFieldNumber = 2;
  private:
  void _slow_mutable_update_mask();
  public:
  const ::google::protobuf::FieldMask& update_mask() const;
  ::google::protobuf::FieldMask* release_update_mask();
  ::google::protobuf::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* update_mask);
  void unsafe_arena_set_allocated_update_mask(
      ::google::protobuf::FieldMask* update_mask);
  ::google::protobuf::FieldMask* unsafe_arena_release_update_mask();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.UpdateVersionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::cloud::dialogflow::v2beta1::Version* version_;
  ::google::protobuf::FieldMask* update_mask_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fversion_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fversion_2eproto::InitDefaultsUpdateVersionRequestImpl();
};
// -------------------------------------------------------------------

class DeleteVersionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.DeleteVersionRequest) */ {
 public:
  DeleteVersionRequest();
  virtual ~DeleteVersionRequest();

  DeleteVersionRequest(const DeleteVersionRequest& from);

  inline DeleteVersionRequest& operator=(const DeleteVersionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteVersionRequest(DeleteVersionRequest&& from) noexcept
    : DeleteVersionRequest() {
    *this = ::std::move(from);
  }

  inline DeleteVersionRequest& operator=(DeleteVersionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteVersionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteVersionRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteVersionRequest*>(
               &_DeleteVersionRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(DeleteVersionRequest* other);
  void Swap(DeleteVersionRequest* other);
  friend void swap(DeleteVersionRequest& a, DeleteVersionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteVersionRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteVersionRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteVersionRequest& from);
  void MergeFrom(const DeleteVersionRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteVersionRequest* other);
  protected:
  explicit DeleteVersionRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.DeleteVersionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fversion_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fversion_2eproto::InitDefaultsDeleteVersionRequestImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Version

// string name = 1;
inline void Version::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Version::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Version.name)
  return name_.Get();
}
inline void Version::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Version.name)
}
#if LANG_CXX11
inline void Version::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Version.name)
}
#endif
inline void Version::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Version.name)
}
inline void Version::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Version.name)
}
inline ::std::string* Version::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Version.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Version::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Version.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Version::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Version.name)
}
inline ::std::string* Version::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Version.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Version::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Version.name)
}

// string description = 2;
inline void Version::clear_description() {
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Version::description() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Version.description)
  return description_.Get();
}
inline void Version::set_description(const ::std::string& value) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Version.description)
}
#if LANG_CXX11
inline void Version::set_description(::std::string&& value) {
  
  description_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Version.description)
}
#endif
inline void Version::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Version.description)
}
inline void Version::set_description(const char* value,
    size_t size) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Version.description)
}
inline ::std::string* Version::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Version.description)
  return description_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Version::release_description() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Version.description)
  
  return description_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Version::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Version.description)
}
inline ::std::string* Version::unsafe_arena_release_description() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Version.description)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return description_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Version::unsafe_arena_set_allocated_description(
    ::std::string* description) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (description != NULL) {
    
  } else {
    
  }
  description_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      description, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Version.description)
}

// int32 version_number = 3;
inline void Version::clear_version_number() {
  version_number_ = 0;
}
inline ::google::protobuf::int32 Version::version_number() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Version.version_number)
  return version_number_;
}
inline void Version::set_version_number(::google::protobuf::int32 value) {
  
  version_number_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Version.version_number)
}

// .google.protobuf.Timestamp create_time = 4;
inline bool Version::has_create_time() const {
  return this != internal_default_instance() && create_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& Version::create_time() const {
  const ::google::protobuf::Timestamp* p = create_time_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Version.create_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Version::release_create_time() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Version.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  create_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Version::unsafe_arena_release_create_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Version.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  create_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Version::mutable_create_time() {
  
  if (create_time_ == NULL) {
    _slow_mutable_create_time();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Version.create_time)
  return create_time_;
}
inline void Version::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(create_time_);
  }
  if (create_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(create_time)->GetArena();
    if (message_arena != submessage_arena) {
      create_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_time, submessage_arena);
    }
    
  } else {
    
  }
  create_time_ = create_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Version.create_time)
}

// -------------------------------------------------------------------

// ListVersionsRequest

// string parent = 1;
inline void ListVersionsRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListVersionsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListVersionsRequest.parent)
  return parent_.Get();
}
inline void ListVersionsRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ListVersionsRequest.parent)
}
#if LANG_CXX11
inline void ListVersionsRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.ListVersionsRequest.parent)
}
#endif
inline void ListVersionsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.ListVersionsRequest.parent)
}
inline void ListVersionsRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.ListVersionsRequest.parent)
}
inline ::std::string* ListVersionsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ListVersionsRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListVersionsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.ListVersionsRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListVersionsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.ListVersionsRequest.parent)
}
inline ::std::string* ListVersionsRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.ListVersionsRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListVersionsRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.ListVersionsRequest.parent)
}

// int32 page_size = 2;
inline void ListVersionsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListVersionsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListVersionsRequest.page_size)
  return page_size_;
}
inline void ListVersionsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ListVersionsRequest.page_size)
}

// string page_token = 3;
inline void ListVersionsRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListVersionsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListVersionsRequest.page_token)
  return page_token_.Get();
}
inline void ListVersionsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ListVersionsRequest.page_token)
}
#if LANG_CXX11
inline void ListVersionsRequest::set_page_token(::std::string&& value) {
  
  page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.ListVersionsRequest.page_token)
}
#endif
inline void ListVersionsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.ListVersionsRequest.page_token)
}
inline void ListVersionsRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.ListVersionsRequest.page_token)
}
inline ::std::string* ListVersionsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ListVersionsRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListVersionsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.ListVersionsRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListVersionsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.ListVersionsRequest.page_token)
}
inline ::std::string* ListVersionsRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.ListVersionsRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListVersionsRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.ListVersionsRequest.page_token)
}

// -------------------------------------------------------------------

// ListVersionsResponse

// repeated .google.cloud.dialogflow.v2beta1.Version versions = 1;
inline int ListVersionsResponse::versions_size() const {
  return versions_.size();
}
inline void ListVersionsResponse::clear_versions() {
  versions_.Clear();
}
inline const ::google::cloud::dialogflow::v2beta1::Version& ListVersionsResponse::versions(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListVersionsResponse.versions)
  return versions_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::Version* ListVersionsResponse::mutable_versions(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ListVersionsResponse.versions)
  return versions_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::Version* ListVersionsResponse::add_versions() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.ListVersionsResponse.versions)
  return versions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Version >*
ListVersionsResponse::mutable_versions() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.ListVersionsResponse.versions)
  return &versions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Version >&
ListVersionsResponse::versions() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.ListVersionsResponse.versions)
  return versions_;
}

// string next_page_token = 2;
inline void ListVersionsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListVersionsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListVersionsResponse.next_page_token)
  return next_page_token_.Get();
}
inline void ListVersionsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ListVersionsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListVersionsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.ListVersionsResponse.next_page_token)
}
#endif
inline void ListVersionsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.ListVersionsResponse.next_page_token)
}
inline void ListVersionsResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.ListVersionsResponse.next_page_token)
}
inline ::std::string* ListVersionsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ListVersionsResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListVersionsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.ListVersionsResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListVersionsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.ListVersionsResponse.next_page_token)
}
inline ::std::string* ListVersionsResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.ListVersionsResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListVersionsResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.ListVersionsResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetVersionRequest

// string name = 1;
inline void GetVersionRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetVersionRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.GetVersionRequest.name)
  return name_.Get();
}
inline void GetVersionRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.GetVersionRequest.name)
}
#if LANG_CXX11
inline void GetVersionRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.GetVersionRequest.name)
}
#endif
inline void GetVersionRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.GetVersionRequest.name)
}
inline void GetVersionRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.GetVersionRequest.name)
}
inline ::std::string* GetVersionRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.GetVersionRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetVersionRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.GetVersionRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GetVersionRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.GetVersionRequest.name)
}
inline ::std::string* GetVersionRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.GetVersionRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetVersionRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.GetVersionRequest.name)
}

// -------------------------------------------------------------------

// CreateVersionRequest

// string parent = 1;
inline void CreateVersionRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CreateVersionRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.CreateVersionRequest.parent)
  return parent_.Get();
}
inline void CreateVersionRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.CreateVersionRequest.parent)
}
#if LANG_CXX11
inline void CreateVersionRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.CreateVersionRequest.parent)
}
#endif
inline void CreateVersionRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.CreateVersionRequest.parent)
}
inline void CreateVersionRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.CreateVersionRequest.parent)
}
inline ::std::string* CreateVersionRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.CreateVersionRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CreateVersionRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.CreateVersionRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void CreateVersionRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.CreateVersionRequest.parent)
}
inline ::std::string* CreateVersionRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.CreateVersionRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CreateVersionRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.CreateVersionRequest.parent)
}

// .google.cloud.dialogflow.v2beta1.Version version = 2;
inline bool CreateVersionRequest::has_version() const {
  return this != internal_default_instance() && version_ != NULL;
}
inline void CreateVersionRequest::clear_version() {
  if (GetArenaNoVirtual() == NULL && version_ != NULL) {
    delete version_;
  }
  version_ = NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::Version& CreateVersionRequest::version() const {
  const ::google::cloud::dialogflow::v2beta1::Version* p = version_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.CreateVersionRequest.version)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::Version*>(
      &::google::cloud::dialogflow::v2beta1::_Version_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::Version* CreateVersionRequest::release_version() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.CreateVersionRequest.version)
  
  ::google::cloud::dialogflow::v2beta1::Version* temp = version_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  version_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Version* CreateVersionRequest::unsafe_arena_release_version() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.CreateVersionRequest.version)
  
  ::google::cloud::dialogflow::v2beta1::Version* temp = version_;
  version_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Version* CreateVersionRequest::mutable_version() {
  
  if (version_ == NULL) {
    _slow_mutable_version();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.CreateVersionRequest.version)
  return version_;
}
inline void CreateVersionRequest::set_allocated_version(::google::cloud::dialogflow::v2beta1::Version* version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete version_;
  }
  if (version) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(version);
    if (message_arena != submessage_arena) {
      version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, version, submessage_arena);
    }
    
  } else {
    
  }
  version_ = version;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.CreateVersionRequest.version)
}

// -------------------------------------------------------------------

// UpdateVersionRequest

// .google.cloud.dialogflow.v2beta1.Version version = 1;
inline bool UpdateVersionRequest::has_version() const {
  return this != internal_default_instance() && version_ != NULL;
}
inline void UpdateVersionRequest::clear_version() {
  if (GetArenaNoVirtual() == NULL && version_ != NULL) {
    delete version_;
  }
  version_ = NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::Version& UpdateVersionRequest::version() const {
  const ::google::cloud::dialogflow::v2beta1::Version* p = version_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.UpdateVersionRequest.version)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::Version*>(
      &::google::cloud::dialogflow::v2beta1::_Version_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::Version* UpdateVersionRequest::release_version() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.UpdateVersionRequest.version)
  
  ::google::cloud::dialogflow::v2beta1::Version* temp = version_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  version_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Version* UpdateVersionRequest::unsafe_arena_release_version() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.UpdateVersionRequest.version)
  
  ::google::cloud::dialogflow::v2beta1::Version* temp = version_;
  version_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Version* UpdateVersionRequest::mutable_version() {
  
  if (version_ == NULL) {
    _slow_mutable_version();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.UpdateVersionRequest.version)
  return version_;
}
inline void UpdateVersionRequest::set_allocated_version(::google::cloud::dialogflow::v2beta1::Version* version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete version_;
  }
  if (version) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(version);
    if (message_arena != submessage_arena) {
      version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, version, submessage_arena);
    }
    
  } else {
    
  }
  version_ = version;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.UpdateVersionRequest.version)
}

// .google.protobuf.FieldMask update_mask = 2;
inline bool UpdateVersionRequest::has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != NULL;
}
inline const ::google::protobuf::FieldMask& UpdateVersionRequest::update_mask() const {
  const ::google::protobuf::FieldMask* p = update_mask_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.UpdateVersionRequest.update_mask)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FieldMask*>(
      &::google::protobuf::_FieldMask_default_instance_);
}
inline ::google::protobuf::FieldMask* UpdateVersionRequest::release_update_mask() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.UpdateVersionRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateVersionRequest::unsafe_arena_release_update_mask() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.UpdateVersionRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateVersionRequest::mutable_update_mask() {
  
  if (update_mask_ == NULL) {
    _slow_mutable_update_mask();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.UpdateVersionRequest.update_mask)
  return update_mask_;
}
inline void UpdateVersionRequest::set_allocated_update_mask(::google::protobuf::FieldMask* update_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_mask_);
  }
  if (update_mask) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update_mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    
  } else {
    
  }
  update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.UpdateVersionRequest.update_mask)
}

// -------------------------------------------------------------------

// DeleteVersionRequest

// string name = 1;
inline void DeleteVersionRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DeleteVersionRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.DeleteVersionRequest.name)
  return name_.Get();
}
inline void DeleteVersionRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.DeleteVersionRequest.name)
}
#if LANG_CXX11
inline void DeleteVersionRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.DeleteVersionRequest.name)
}
#endif
inline void DeleteVersionRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.DeleteVersionRequest.name)
}
inline void DeleteVersionRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.DeleteVersionRequest.name)
}
inline ::std::string* DeleteVersionRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.DeleteVersionRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DeleteVersionRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.DeleteVersionRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void DeleteVersionRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.DeleteVersionRequest.name)
}
inline ::std::string* DeleteVersionRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.DeleteVersionRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DeleteVersionRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.DeleteVersionRequest.name)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fcloud_2fdialogflow_2fv2beta1_2fversion_2eproto__INCLUDED
