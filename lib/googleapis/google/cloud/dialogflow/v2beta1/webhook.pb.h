// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/v2beta1/webhook.proto

#ifndef PROTOBUF_google_2fcloud_2fdialogflow_2fv2beta1_2fwebhook_2eproto__INCLUDED
#define PROTOBUF_google_2fcloud_2fdialogflow_2fv2beta1_2fwebhook_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/cloud/dialogflow/v2beta1/context.pb.h"
#include "google/cloud/dialogflow/v2beta1/intent.pb.h"
#include "google/cloud/dialogflow/v2beta1/session.pb.h"
#include <google/protobuf/struct.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fwebhook_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsWebhookRequestImpl();
void InitDefaultsWebhookRequest();
void InitDefaultsWebhookResponseImpl();
void InitDefaultsWebhookResponse();
void InitDefaultsOriginalDetectIntentRequestImpl();
void InitDefaultsOriginalDetectIntentRequest();
inline void InitDefaults() {
  InitDefaultsWebhookRequest();
  InitDefaultsWebhookResponse();
  InitDefaultsOriginalDetectIntentRequest();
}
}  // namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fwebhook_2eproto
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {
class OriginalDetectIntentRequest;
class OriginalDetectIntentRequestDefaultTypeInternal;
extern OriginalDetectIntentRequestDefaultTypeInternal _OriginalDetectIntentRequest_default_instance_;
class WebhookRequest;
class WebhookRequestDefaultTypeInternal;
extern WebhookRequestDefaultTypeInternal _WebhookRequest_default_instance_;
class WebhookResponse;
class WebhookResponseDefaultTypeInternal;
extern WebhookResponseDefaultTypeInternal _WebhookResponse_default_instance_;
}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {

// ===================================================================

class WebhookRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.WebhookRequest) */ {
 public:
  WebhookRequest();
  virtual ~WebhookRequest();

  WebhookRequest(const WebhookRequest& from);

  inline WebhookRequest& operator=(const WebhookRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WebhookRequest(WebhookRequest&& from) noexcept
    : WebhookRequest() {
    *this = ::std::move(from);
  }

  inline WebhookRequest& operator=(WebhookRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const WebhookRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WebhookRequest* internal_default_instance() {
    return reinterpret_cast<const WebhookRequest*>(
               &_WebhookRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(WebhookRequest* other);
  void Swap(WebhookRequest* other);
  friend void swap(WebhookRequest& a, WebhookRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WebhookRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  WebhookRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WebhookRequest& from);
  void MergeFrom(const WebhookRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WebhookRequest* other);
  protected:
  explicit WebhookRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string response_id = 1;
  void clear_response_id();
  static const int kResponseIdFieldNumber = 1;
  const ::std::string& response_id() const;
  void set_response_id(const ::std::string& value);
  #if LANG_CXX11
  void set_response_id(::std::string&& value);
  #endif
  void set_response_id(const char* value);
  void set_response_id(const char* value, size_t size);
  ::std::string* mutable_response_id();
  ::std::string* release_response_id();
  void set_allocated_response_id(::std::string* response_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_response_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_response_id(
      ::std::string* response_id);

  // string session = 4;
  void clear_session();
  static const int kSessionFieldNumber = 4;
  const ::std::string& session() const;
  void set_session(const ::std::string& value);
  #if LANG_CXX11
  void set_session(::std::string&& value);
  #endif
  void set_session(const char* value);
  void set_session(const char* value, size_t size);
  ::std::string* mutable_session();
  ::std::string* release_session();
  void set_allocated_session(::std::string* session);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_session();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_session(
      ::std::string* session);

  // .google.cloud.dialogflow.v2beta1.QueryResult query_result = 2;
  bool has_query_result() const;
  void clear_query_result();
  static const int kQueryResultFieldNumber = 2;
  private:
  void _slow_mutable_query_result();
  public:
  const ::google::cloud::dialogflow::v2beta1::QueryResult& query_result() const;
  ::google::cloud::dialogflow::v2beta1::QueryResult* release_query_result();
  ::google::cloud::dialogflow::v2beta1::QueryResult* mutable_query_result();
  void set_allocated_query_result(::google::cloud::dialogflow::v2beta1::QueryResult* query_result);
  void unsafe_arena_set_allocated_query_result(
      ::google::cloud::dialogflow::v2beta1::QueryResult* query_result);
  ::google::cloud::dialogflow::v2beta1::QueryResult* unsafe_arena_release_query_result();

  // .google.cloud.dialogflow.v2beta1.OriginalDetectIntentRequest original_detect_intent_request = 3;
  bool has_original_detect_intent_request() const;
  void clear_original_detect_intent_request();
  static const int kOriginalDetectIntentRequestFieldNumber = 3;
  private:
  void _slow_mutable_original_detect_intent_request();
  public:
  const ::google::cloud::dialogflow::v2beta1::OriginalDetectIntentRequest& original_detect_intent_request() const;
  ::google::cloud::dialogflow::v2beta1::OriginalDetectIntentRequest* release_original_detect_intent_request();
  ::google::cloud::dialogflow::v2beta1::OriginalDetectIntentRequest* mutable_original_detect_intent_request();
  void set_allocated_original_detect_intent_request(::google::cloud::dialogflow::v2beta1::OriginalDetectIntentRequest* original_detect_intent_request);
  void unsafe_arena_set_allocated_original_detect_intent_request(
      ::google::cloud::dialogflow::v2beta1::OriginalDetectIntentRequest* original_detect_intent_request);
  ::google::cloud::dialogflow::v2beta1::OriginalDetectIntentRequest* unsafe_arena_release_original_detect_intent_request();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.WebhookRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr response_id_;
  ::google::protobuf::internal::ArenaStringPtr session_;
  ::google::cloud::dialogflow::v2beta1::QueryResult* query_result_;
  ::google::cloud::dialogflow::v2beta1::OriginalDetectIntentRequest* original_detect_intent_request_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fwebhook_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fwebhook_2eproto::InitDefaultsWebhookRequestImpl();
};
// -------------------------------------------------------------------

class WebhookResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.WebhookResponse) */ {
 public:
  WebhookResponse();
  virtual ~WebhookResponse();

  WebhookResponse(const WebhookResponse& from);

  inline WebhookResponse& operator=(const WebhookResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WebhookResponse(WebhookResponse&& from) noexcept
    : WebhookResponse() {
    *this = ::std::move(from);
  }

  inline WebhookResponse& operator=(WebhookResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const WebhookResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WebhookResponse* internal_default_instance() {
    return reinterpret_cast<const WebhookResponse*>(
               &_WebhookResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(WebhookResponse* other);
  void Swap(WebhookResponse* other);
  friend void swap(WebhookResponse& a, WebhookResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WebhookResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  WebhookResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WebhookResponse& from);
  void MergeFrom(const WebhookResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WebhookResponse* other);
  protected:
  explicit WebhookResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.dialogflow.v2beta1.Intent.Message fulfillment_messages = 2;
  int fulfillment_messages_size() const;
  void clear_fulfillment_messages();
  static const int kFulfillmentMessagesFieldNumber = 2;
  const ::google::cloud::dialogflow::v2beta1::Intent_Message& fulfillment_messages(int index) const;
  ::google::cloud::dialogflow::v2beta1::Intent_Message* mutable_fulfillment_messages(int index);
  ::google::cloud::dialogflow::v2beta1::Intent_Message* add_fulfillment_messages();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message >*
      mutable_fulfillment_messages();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message >&
      fulfillment_messages() const;

  // repeated .google.cloud.dialogflow.v2beta1.Context output_contexts = 5;
  int output_contexts_size() const;
  void clear_output_contexts();
  static const int kOutputContextsFieldNumber = 5;
  const ::google::cloud::dialogflow::v2beta1::Context& output_contexts(int index) const;
  ::google::cloud::dialogflow::v2beta1::Context* mutable_output_contexts(int index);
  ::google::cloud::dialogflow::v2beta1::Context* add_output_contexts();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Context >*
      mutable_output_contexts();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Context >&
      output_contexts() const;

  // string fulfillment_text = 1;
  void clear_fulfillment_text();
  static const int kFulfillmentTextFieldNumber = 1;
  const ::std::string& fulfillment_text() const;
  void set_fulfillment_text(const ::std::string& value);
  #if LANG_CXX11
  void set_fulfillment_text(::std::string&& value);
  #endif
  void set_fulfillment_text(const char* value);
  void set_fulfillment_text(const char* value, size_t size);
  ::std::string* mutable_fulfillment_text();
  ::std::string* release_fulfillment_text();
  void set_allocated_fulfillment_text(::std::string* fulfillment_text);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_fulfillment_text();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_fulfillment_text(
      ::std::string* fulfillment_text);

  // string source = 3;
  void clear_source();
  static const int kSourceFieldNumber = 3;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  #if LANG_CXX11
  void set_source(::std::string&& value);
  #endif
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_source();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_source(
      ::std::string* source);

  // .google.protobuf.Struct payload = 4;
  bool has_payload() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 4;
  private:
  void _slow_mutable_payload();
  public:
  const ::google::protobuf::Struct& payload() const;
  ::google::protobuf::Struct* release_payload();
  ::google::protobuf::Struct* mutable_payload();
  void set_allocated_payload(::google::protobuf::Struct* payload);
  void unsafe_arena_set_allocated_payload(
      ::google::protobuf::Struct* payload);
  ::google::protobuf::Struct* unsafe_arena_release_payload();

  // .google.cloud.dialogflow.v2beta1.EventInput followup_event_input = 6;
  bool has_followup_event_input() const;
  void clear_followup_event_input();
  static const int kFollowupEventInputFieldNumber = 6;
  private:
  void _slow_mutable_followup_event_input();
  public:
  const ::google::cloud::dialogflow::v2beta1::EventInput& followup_event_input() const;
  ::google::cloud::dialogflow::v2beta1::EventInput* release_followup_event_input();
  ::google::cloud::dialogflow::v2beta1::EventInput* mutable_followup_event_input();
  void set_allocated_followup_event_input(::google::cloud::dialogflow::v2beta1::EventInput* followup_event_input);
  void unsafe_arena_set_allocated_followup_event_input(
      ::google::cloud::dialogflow::v2beta1::EventInput* followup_event_input);
  ::google::cloud::dialogflow::v2beta1::EventInput* unsafe_arena_release_followup_event_input();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.WebhookResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message > fulfillment_messages_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Context > output_contexts_;
  ::google::protobuf::internal::ArenaStringPtr fulfillment_text_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::Struct* payload_;
  ::google::cloud::dialogflow::v2beta1::EventInput* followup_event_input_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fwebhook_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fwebhook_2eproto::InitDefaultsWebhookResponseImpl();
};
// -------------------------------------------------------------------

class OriginalDetectIntentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.OriginalDetectIntentRequest) */ {
 public:
  OriginalDetectIntentRequest();
  virtual ~OriginalDetectIntentRequest();

  OriginalDetectIntentRequest(const OriginalDetectIntentRequest& from);

  inline OriginalDetectIntentRequest& operator=(const OriginalDetectIntentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OriginalDetectIntentRequest(OriginalDetectIntentRequest&& from) noexcept
    : OriginalDetectIntentRequest() {
    *this = ::std::move(from);
  }

  inline OriginalDetectIntentRequest& operator=(OriginalDetectIntentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const OriginalDetectIntentRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OriginalDetectIntentRequest* internal_default_instance() {
    return reinterpret_cast<const OriginalDetectIntentRequest*>(
               &_OriginalDetectIntentRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(OriginalDetectIntentRequest* other);
  void Swap(OriginalDetectIntentRequest* other);
  friend void swap(OriginalDetectIntentRequest& a, OriginalDetectIntentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OriginalDetectIntentRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  OriginalDetectIntentRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OriginalDetectIntentRequest& from);
  void MergeFrom(const OriginalDetectIntentRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OriginalDetectIntentRequest* other);
  protected:
  explicit OriginalDetectIntentRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string source = 1;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  #if LANG_CXX11
  void set_source(::std::string&& value);
  #endif
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_source();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_source(
      ::std::string* source);

  // .google.protobuf.Struct payload = 3;
  bool has_payload() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 3;
  private:
  void _slow_mutable_payload();
  public:
  const ::google::protobuf::Struct& payload() const;
  ::google::protobuf::Struct* release_payload();
  ::google::protobuf::Struct* mutable_payload();
  void set_allocated_payload(::google::protobuf::Struct* payload);
  void unsafe_arena_set_allocated_payload(
      ::google::protobuf::Struct* payload);
  ::google::protobuf::Struct* unsafe_arena_release_payload();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.OriginalDetectIntentRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::Struct* payload_;
  mutable int _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fwebhook_2eproto::TableStruct;
  friend void ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fwebhook_2eproto::InitDefaultsOriginalDetectIntentRequestImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// WebhookRequest

// string session = 4;
inline void WebhookRequest::clear_session() {
  session_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& WebhookRequest::session() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.WebhookRequest.session)
  return session_.Get();
}
inline void WebhookRequest::set_session(const ::std::string& value) {
  
  session_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.WebhookRequest.session)
}
#if LANG_CXX11
inline void WebhookRequest::set_session(::std::string&& value) {
  
  session_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.WebhookRequest.session)
}
#endif
inline void WebhookRequest::set_session(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  session_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.WebhookRequest.session)
}
inline void WebhookRequest::set_session(const char* value,
    size_t size) {
  
  session_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.WebhookRequest.session)
}
inline ::std::string* WebhookRequest::mutable_session() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.WebhookRequest.session)
  return session_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* WebhookRequest::release_session() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.WebhookRequest.session)
  
  return session_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void WebhookRequest::set_allocated_session(::std::string* session) {
  if (session != NULL) {
    
  } else {
    
  }
  session_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.WebhookRequest.session)
}
inline ::std::string* WebhookRequest::unsafe_arena_release_session() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.WebhookRequest.session)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return session_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void WebhookRequest::unsafe_arena_set_allocated_session(
    ::std::string* session) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (session != NULL) {
    
  } else {
    
  }
  session_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      session, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.WebhookRequest.session)
}

// string response_id = 1;
inline void WebhookRequest::clear_response_id() {
  response_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& WebhookRequest::response_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.WebhookRequest.response_id)
  return response_id_.Get();
}
inline void WebhookRequest::set_response_id(const ::std::string& value) {
  
  response_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.WebhookRequest.response_id)
}
#if LANG_CXX11
inline void WebhookRequest::set_response_id(::std::string&& value) {
  
  response_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.WebhookRequest.response_id)
}
#endif
inline void WebhookRequest::set_response_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  response_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.WebhookRequest.response_id)
}
inline void WebhookRequest::set_response_id(const char* value,
    size_t size) {
  
  response_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.WebhookRequest.response_id)
}
inline ::std::string* WebhookRequest::mutable_response_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.WebhookRequest.response_id)
  return response_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* WebhookRequest::release_response_id() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.WebhookRequest.response_id)
  
  return response_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void WebhookRequest::set_allocated_response_id(::std::string* response_id) {
  if (response_id != NULL) {
    
  } else {
    
  }
  response_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.WebhookRequest.response_id)
}
inline ::std::string* WebhookRequest::unsafe_arena_release_response_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.WebhookRequest.response_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return response_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void WebhookRequest::unsafe_arena_set_allocated_response_id(
    ::std::string* response_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (response_id != NULL) {
    
  } else {
    
  }
  response_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      response_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.WebhookRequest.response_id)
}

// .google.cloud.dialogflow.v2beta1.QueryResult query_result = 2;
inline bool WebhookRequest::has_query_result() const {
  return this != internal_default_instance() && query_result_ != NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::QueryResult& WebhookRequest::query_result() const {
  const ::google::cloud::dialogflow::v2beta1::QueryResult* p = query_result_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.WebhookRequest.query_result)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::QueryResult*>(
      &::google::cloud::dialogflow::v2beta1::_QueryResult_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::QueryResult* WebhookRequest::release_query_result() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.WebhookRequest.query_result)
  
  ::google::cloud::dialogflow::v2beta1::QueryResult* temp = query_result_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  query_result_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::QueryResult* WebhookRequest::unsafe_arena_release_query_result() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.WebhookRequest.query_result)
  
  ::google::cloud::dialogflow::v2beta1::QueryResult* temp = query_result_;
  query_result_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::QueryResult* WebhookRequest::mutable_query_result() {
  
  if (query_result_ == NULL) {
    _slow_mutable_query_result();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.WebhookRequest.query_result)
  return query_result_;
}
inline void WebhookRequest::set_allocated_query_result(::google::cloud::dialogflow::v2beta1::QueryResult* query_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(query_result_);
  }
  if (query_result) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(query_result)->GetArena();
    if (message_arena != submessage_arena) {
      query_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_result, submessage_arena);
    }
    
  } else {
    
  }
  query_result_ = query_result;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.WebhookRequest.query_result)
}

// .google.cloud.dialogflow.v2beta1.OriginalDetectIntentRequest original_detect_intent_request = 3;
inline bool WebhookRequest::has_original_detect_intent_request() const {
  return this != internal_default_instance() && original_detect_intent_request_ != NULL;
}
inline void WebhookRequest::clear_original_detect_intent_request() {
  if (GetArenaNoVirtual() == NULL && original_detect_intent_request_ != NULL) {
    delete original_detect_intent_request_;
  }
  original_detect_intent_request_ = NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::OriginalDetectIntentRequest& WebhookRequest::original_detect_intent_request() const {
  const ::google::cloud::dialogflow::v2beta1::OriginalDetectIntentRequest* p = original_detect_intent_request_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.WebhookRequest.original_detect_intent_request)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::OriginalDetectIntentRequest*>(
      &::google::cloud::dialogflow::v2beta1::_OriginalDetectIntentRequest_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::OriginalDetectIntentRequest* WebhookRequest::release_original_detect_intent_request() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.WebhookRequest.original_detect_intent_request)
  
  ::google::cloud::dialogflow::v2beta1::OriginalDetectIntentRequest* temp = original_detect_intent_request_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  original_detect_intent_request_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::OriginalDetectIntentRequest* WebhookRequest::unsafe_arena_release_original_detect_intent_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.WebhookRequest.original_detect_intent_request)
  
  ::google::cloud::dialogflow::v2beta1::OriginalDetectIntentRequest* temp = original_detect_intent_request_;
  original_detect_intent_request_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::OriginalDetectIntentRequest* WebhookRequest::mutable_original_detect_intent_request() {
  
  if (original_detect_intent_request_ == NULL) {
    _slow_mutable_original_detect_intent_request();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.WebhookRequest.original_detect_intent_request)
  return original_detect_intent_request_;
}
inline void WebhookRequest::set_allocated_original_detect_intent_request(::google::cloud::dialogflow::v2beta1::OriginalDetectIntentRequest* original_detect_intent_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete original_detect_intent_request_;
  }
  if (original_detect_intent_request) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(original_detect_intent_request);
    if (message_arena != submessage_arena) {
      original_detect_intent_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, original_detect_intent_request, submessage_arena);
    }
    
  } else {
    
  }
  original_detect_intent_request_ = original_detect_intent_request;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.WebhookRequest.original_detect_intent_request)
}

// -------------------------------------------------------------------

// WebhookResponse

// string fulfillment_text = 1;
inline void WebhookResponse::clear_fulfillment_text() {
  fulfillment_text_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& WebhookResponse::fulfillment_text() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.WebhookResponse.fulfillment_text)
  return fulfillment_text_.Get();
}
inline void WebhookResponse::set_fulfillment_text(const ::std::string& value) {
  
  fulfillment_text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.WebhookResponse.fulfillment_text)
}
#if LANG_CXX11
inline void WebhookResponse::set_fulfillment_text(::std::string&& value) {
  
  fulfillment_text_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.WebhookResponse.fulfillment_text)
}
#endif
inline void WebhookResponse::set_fulfillment_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fulfillment_text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.WebhookResponse.fulfillment_text)
}
inline void WebhookResponse::set_fulfillment_text(const char* value,
    size_t size) {
  
  fulfillment_text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.WebhookResponse.fulfillment_text)
}
inline ::std::string* WebhookResponse::mutable_fulfillment_text() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.WebhookResponse.fulfillment_text)
  return fulfillment_text_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* WebhookResponse::release_fulfillment_text() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.WebhookResponse.fulfillment_text)
  
  return fulfillment_text_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void WebhookResponse::set_allocated_fulfillment_text(::std::string* fulfillment_text) {
  if (fulfillment_text != NULL) {
    
  } else {
    
  }
  fulfillment_text_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fulfillment_text,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.WebhookResponse.fulfillment_text)
}
inline ::std::string* WebhookResponse::unsafe_arena_release_fulfillment_text() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.WebhookResponse.fulfillment_text)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return fulfillment_text_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void WebhookResponse::unsafe_arena_set_allocated_fulfillment_text(
    ::std::string* fulfillment_text) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (fulfillment_text != NULL) {
    
  } else {
    
  }
  fulfillment_text_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      fulfillment_text, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.WebhookResponse.fulfillment_text)
}

// repeated .google.cloud.dialogflow.v2beta1.Intent.Message fulfillment_messages = 2;
inline int WebhookResponse::fulfillment_messages_size() const {
  return fulfillment_messages_.size();
}
inline const ::google::cloud::dialogflow::v2beta1::Intent_Message& WebhookResponse::fulfillment_messages(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.WebhookResponse.fulfillment_messages)
  return fulfillment_messages_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message* WebhookResponse::mutable_fulfillment_messages(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.WebhookResponse.fulfillment_messages)
  return fulfillment_messages_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::Intent_Message* WebhookResponse::add_fulfillment_messages() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.WebhookResponse.fulfillment_messages)
  return fulfillment_messages_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message >*
WebhookResponse::mutable_fulfillment_messages() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.WebhookResponse.fulfillment_messages)
  return &fulfillment_messages_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Intent_Message >&
WebhookResponse::fulfillment_messages() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.WebhookResponse.fulfillment_messages)
  return fulfillment_messages_;
}

// string source = 3;
inline void WebhookResponse::clear_source() {
  source_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& WebhookResponse::source() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.WebhookResponse.source)
  return source_.Get();
}
inline void WebhookResponse::set_source(const ::std::string& value) {
  
  source_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.WebhookResponse.source)
}
#if LANG_CXX11
inline void WebhookResponse::set_source(::std::string&& value) {
  
  source_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.WebhookResponse.source)
}
#endif
inline void WebhookResponse::set_source(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  source_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.WebhookResponse.source)
}
inline void WebhookResponse::set_source(const char* value,
    size_t size) {
  
  source_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.WebhookResponse.source)
}
inline ::std::string* WebhookResponse::mutable_source() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.WebhookResponse.source)
  return source_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* WebhookResponse::release_source() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.WebhookResponse.source)
  
  return source_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void WebhookResponse::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    
  } else {
    
  }
  source_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.WebhookResponse.source)
}
inline ::std::string* WebhookResponse::unsafe_arena_release_source() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.WebhookResponse.source)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return source_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void WebhookResponse::unsafe_arena_set_allocated_source(
    ::std::string* source) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (source != NULL) {
    
  } else {
    
  }
  source_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      source, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.WebhookResponse.source)
}

// .google.protobuf.Struct payload = 4;
inline bool WebhookResponse::has_payload() const {
  return this != internal_default_instance() && payload_ != NULL;
}
inline const ::google::protobuf::Struct& WebhookResponse::payload() const {
  const ::google::protobuf::Struct* p = payload_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.WebhookResponse.payload)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Struct*>(
      &::google::protobuf::_Struct_default_instance_);
}
inline ::google::protobuf::Struct* WebhookResponse::release_payload() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.WebhookResponse.payload)
  
  ::google::protobuf::Struct* temp = payload_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  payload_ = NULL;
  return temp;
}
inline ::google::protobuf::Struct* WebhookResponse::unsafe_arena_release_payload() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.WebhookResponse.payload)
  
  ::google::protobuf::Struct* temp = payload_;
  payload_ = NULL;
  return temp;
}
inline ::google::protobuf::Struct* WebhookResponse::mutable_payload() {
  
  if (payload_ == NULL) {
    _slow_mutable_payload();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.WebhookResponse.payload)
  return payload_;
}
inline void WebhookResponse::set_allocated_payload(::google::protobuf::Struct* payload) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(payload_);
  }
  if (payload) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(payload)->GetArena();
    if (message_arena != submessage_arena) {
      payload = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, payload, submessage_arena);
    }
    
  } else {
    
  }
  payload_ = payload;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.WebhookResponse.payload)
}

// repeated .google.cloud.dialogflow.v2beta1.Context output_contexts = 5;
inline int WebhookResponse::output_contexts_size() const {
  return output_contexts_.size();
}
inline const ::google::cloud::dialogflow::v2beta1::Context& WebhookResponse::output_contexts(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.WebhookResponse.output_contexts)
  return output_contexts_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::Context* WebhookResponse::mutable_output_contexts(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.WebhookResponse.output_contexts)
  return output_contexts_.Mutable(index);
}
inline ::google::cloud::dialogflow::v2beta1::Context* WebhookResponse::add_output_contexts() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.WebhookResponse.output_contexts)
  return output_contexts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Context >*
WebhookResponse::mutable_output_contexts() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.WebhookResponse.output_contexts)
  return &output_contexts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Context >&
WebhookResponse::output_contexts() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.WebhookResponse.output_contexts)
  return output_contexts_;
}

// .google.cloud.dialogflow.v2beta1.EventInput followup_event_input = 6;
inline bool WebhookResponse::has_followup_event_input() const {
  return this != internal_default_instance() && followup_event_input_ != NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::EventInput& WebhookResponse::followup_event_input() const {
  const ::google::cloud::dialogflow::v2beta1::EventInput* p = followup_event_input_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.WebhookResponse.followup_event_input)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::EventInput*>(
      &::google::cloud::dialogflow::v2beta1::_EventInput_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::EventInput* WebhookResponse::release_followup_event_input() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.WebhookResponse.followup_event_input)
  
  ::google::cloud::dialogflow::v2beta1::EventInput* temp = followup_event_input_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  followup_event_input_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::EventInput* WebhookResponse::unsafe_arena_release_followup_event_input() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.WebhookResponse.followup_event_input)
  
  ::google::cloud::dialogflow::v2beta1::EventInput* temp = followup_event_input_;
  followup_event_input_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::EventInput* WebhookResponse::mutable_followup_event_input() {
  
  if (followup_event_input_ == NULL) {
    _slow_mutable_followup_event_input();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.WebhookResponse.followup_event_input)
  return followup_event_input_;
}
inline void WebhookResponse::set_allocated_followup_event_input(::google::cloud::dialogflow::v2beta1::EventInput* followup_event_input) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(followup_event_input_);
  }
  if (followup_event_input) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(followup_event_input)->GetArena();
    if (message_arena != submessage_arena) {
      followup_event_input = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, followup_event_input, submessage_arena);
    }
    
  } else {
    
  }
  followup_event_input_ = followup_event_input;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.WebhookResponse.followup_event_input)
}

// -------------------------------------------------------------------

// OriginalDetectIntentRequest

// string source = 1;
inline void OriginalDetectIntentRequest::clear_source() {
  source_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& OriginalDetectIntentRequest::source() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.OriginalDetectIntentRequest.source)
  return source_.Get();
}
inline void OriginalDetectIntentRequest::set_source(const ::std::string& value) {
  
  source_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.OriginalDetectIntentRequest.source)
}
#if LANG_CXX11
inline void OriginalDetectIntentRequest::set_source(::std::string&& value) {
  
  source_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.OriginalDetectIntentRequest.source)
}
#endif
inline void OriginalDetectIntentRequest::set_source(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  source_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.OriginalDetectIntentRequest.source)
}
inline void OriginalDetectIntentRequest::set_source(const char* value,
    size_t size) {
  
  source_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.OriginalDetectIntentRequest.source)
}
inline ::std::string* OriginalDetectIntentRequest::mutable_source() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.OriginalDetectIntentRequest.source)
  return source_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* OriginalDetectIntentRequest::release_source() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.OriginalDetectIntentRequest.source)
  
  return source_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void OriginalDetectIntentRequest::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    
  } else {
    
  }
  source_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.OriginalDetectIntentRequest.source)
}
inline ::std::string* OriginalDetectIntentRequest::unsafe_arena_release_source() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.OriginalDetectIntentRequest.source)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return source_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void OriginalDetectIntentRequest::unsafe_arena_set_allocated_source(
    ::std::string* source) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (source != NULL) {
    
  } else {
    
  }
  source_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      source, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.OriginalDetectIntentRequest.source)
}

// .google.protobuf.Struct payload = 3;
inline bool OriginalDetectIntentRequest::has_payload() const {
  return this != internal_default_instance() && payload_ != NULL;
}
inline const ::google::protobuf::Struct& OriginalDetectIntentRequest::payload() const {
  const ::google::protobuf::Struct* p = payload_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.OriginalDetectIntentRequest.payload)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Struct*>(
      &::google::protobuf::_Struct_default_instance_);
}
inline ::google::protobuf::Struct* OriginalDetectIntentRequest::release_payload() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.OriginalDetectIntentRequest.payload)
  
  ::google::protobuf::Struct* temp = payload_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  payload_ = NULL;
  return temp;
}
inline ::google::protobuf::Struct* OriginalDetectIntentRequest::unsafe_arena_release_payload() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.OriginalDetectIntentRequest.payload)
  
  ::google::protobuf::Struct* temp = payload_;
  payload_ = NULL;
  return temp;
}
inline ::google::protobuf::Struct* OriginalDetectIntentRequest::mutable_payload() {
  
  if (payload_ == NULL) {
    _slow_mutable_payload();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.OriginalDetectIntentRequest.payload)
  return payload_;
}
inline void OriginalDetectIntentRequest::set_allocated_payload(::google::protobuf::Struct* payload) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(payload_);
  }
  if (payload) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(payload)->GetArena();
    if (message_arena != submessage_arena) {
      payload = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, payload, submessage_arena);
    }
    
  } else {
    
  }
  payload_ = payload;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.OriginalDetectIntentRequest.payload)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fcloud_2fdialogflow_2fv2beta1_2fwebhook_2eproto__INCLUDED
