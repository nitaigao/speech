// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/v2beta1/tier.proto

#include "google/cloud/dialogflow/v2beta1/tier.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {
class AgentTierDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AgentTier>
      _instance;
} _AgentTier_default_instance_;
class GetAgentTierRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAgentTierRequest>
      _instance;
} _GetAgentTierRequest_default_instance_;
class UpdateAgentTierRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateAgentTierRequest>
      _instance;
} _UpdateAgentTierRequest_default_instance_;
}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto {
void InitDefaultsAgentTierImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_AgentTier_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::AgentTier();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::AgentTier::InitAsDefaultInstance();
}

void InitDefaultsAgentTier() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAgentTierImpl);
}

void InitDefaultsGetAgentTierRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_GetAgentTierRequest_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::GetAgentTierRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::GetAgentTierRequest::InitAsDefaultInstance();
}

void InitDefaultsGetAgentTierRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetAgentTierRequestImpl);
}

void InitDefaultsUpdateAgentTierRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::InitDefaultsAgentTier();
  protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::InitDefaultsFieldMask();
  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_UpdateAgentTierRequest_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::UpdateAgentTierRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::UpdateAgentTierRequest::InitAsDefaultInstance();
}

void InitDefaultsUpdateAgentTierRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateAgentTierRequestImpl);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::AgentTier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::AgentTier, tier_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::GetAgentTierRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::GetAgentTierRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::UpdateAgentTierRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::UpdateAgentTierRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::UpdateAgentTierRequest, agent_tier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::UpdateAgentTierRequest, update_mask_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::cloud::dialogflow::v2beta1::AgentTier)},
  { 6, -1, sizeof(::google::cloud::dialogflow::v2beta1::GetAgentTierRequest)},
  { 12, -1, sizeof(::google::cloud::dialogflow::v2beta1::UpdateAgentTierRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_AgentTier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_GetAgentTierRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_UpdateAgentTierRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/cloud/dialogflow/v2beta1/tier.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n*google/cloud/dialogflow/v2beta1/tier.p"
      "roto\022\037google.cloud.dialogflow.v2beta1\032\034g"
      "oogle/api/annotations.proto\032 google/prot"
      "obuf/field_mask.proto\"@\n\tAgentTier\0223\n\004ti"
      "er\030\001 \001(\0162%.google.cloud.dialogflow.v2bet"
      "a1.Tier\"#\n\023GetAgentTierRequest\022\014\n\004name\030\001"
      " \001(\t\"\227\001\n\026UpdateAgentTierRequest\022\014\n\004name\030"
      "\001 \001(\t\022>\n\nagent_tier\030\002 \001(\0132*.google.cloud"
      ".dialogflow.v2beta1.AgentTier\022/\n\013update_"
      "mask\030\003 \001(\0132\032.google.protobuf.FieldMask*D"
      "\n\004Tier\022\024\n\020TIER_UNSPECIFIED\020\000\022\021\n\rTIER_STA"
      "NDARD\020\001\022\023\n\017TIER_ENTERPRISE\020\0022\335\002\n\005Tiers\022\237"
      "\001\n\014GetAgentTier\0224.google.cloud.dialogflo"
      "w.v2beta1.GetAgentTierRequest\032*.google.c"
      "loud.dialogflow.v2beta1.AgentTier\"-\202\323\344\223\002"
      "\'\022%/v2beta1/{name=projects/*/agent/tier}"
      "\022\261\001\n\017UpdateAgentTier\0227.google.cloud.dial"
      "ogflow.v2beta1.UpdateAgentTierRequest\032*."
      "google.cloud.dialogflow.v2beta1.AgentTie"
      "r\"9\202\323\344\223\0023\"%/v2beta1/{name=projects/*/age"
      "nt/tier}:\nagent_tierB\200\001\n#com.google.clou"
      "d.dialogflow.v2beta1B\tTierProtoP\001ZIgoogl"
      "e.golang.org/genproto/googleapis/cloud/d"
      "ialogflow/v2beta1;dialogflow\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 959);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/dialogflow/v2beta1/tier.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {
const ::google::protobuf::EnumDescriptor* Tier_descriptor() {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::file_level_enum_descriptors[0];
}
bool Tier_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void AgentTier::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AgentTier::kTierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AgentTier::AgentTier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::InitDefaultsAgentTier();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.AgentTier)
}
AgentTier::AgentTier(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::InitDefaultsAgentTier();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.AgentTier)
}
AgentTier::AgentTier(const AgentTier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tier_ = from.tier_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.AgentTier)
}

void AgentTier::SharedCtor() {
  tier_ = 0;
  _cached_size_ = 0;
}

AgentTier::~AgentTier() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.AgentTier)
  SharedDtor();
}

void AgentTier::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void AgentTier::ArenaDtor(void* object) {
  AgentTier* _this = reinterpret_cast< AgentTier* >(object);
  (void)_this;
}
void AgentTier::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AgentTier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AgentTier::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AgentTier& AgentTier::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::InitDefaultsAgentTier();
  return *internal_default_instance();
}

AgentTier* AgentTier::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<AgentTier>(arena);
}

void AgentTier::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.AgentTier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tier_ = 0;
  _internal_metadata_.Clear();
}

bool AgentTier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.AgentTier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.dialogflow.v2beta1.Tier tier = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_tier(static_cast< ::google::cloud::dialogflow::v2beta1::Tier >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.AgentTier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.AgentTier)
  return false;
#undef DO_
}

void AgentTier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.AgentTier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dialogflow.v2beta1.Tier tier = 1;
  if (this->tier() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->tier(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.AgentTier)
}

::google::protobuf::uint8* AgentTier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.AgentTier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dialogflow.v2beta1.Tier tier = 1;
  if (this->tier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->tier(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.AgentTier)
  return target;
}

size_t AgentTier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.AgentTier)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.dialogflow.v2beta1.Tier tier = 1;
  if (this->tier() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tier());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AgentTier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.AgentTier)
  GOOGLE_DCHECK_NE(&from, this);
  const AgentTier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AgentTier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.AgentTier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.AgentTier)
    MergeFrom(*source);
  }
}

void AgentTier::MergeFrom(const AgentTier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.AgentTier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tier() != 0) {
    set_tier(from.tier());
  }
}

void AgentTier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.AgentTier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgentTier::CopyFrom(const AgentTier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.AgentTier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentTier::IsInitialized() const {
  return true;
}

void AgentTier::Swap(AgentTier* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AgentTier* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void AgentTier::UnsafeArenaSwap(AgentTier* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AgentTier::InternalSwap(AgentTier* other) {
  using std::swap;
  swap(tier_, other->tier_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AgentTier::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetAgentTierRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAgentTierRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAgentTierRequest::GetAgentTierRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::InitDefaultsGetAgentTierRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.GetAgentTierRequest)
}
GetAgentTierRequest::GetAgentTierRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::InitDefaultsGetAgentTierRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.GetAgentTierRequest)
}
GetAgentTierRequest::GetAgentTierRequest(const GetAgentTierRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.GetAgentTierRequest)
}

void GetAgentTierRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetAgentTierRequest::~GetAgentTierRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.GetAgentTierRequest)
  SharedDtor();
}

void GetAgentTierRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAgentTierRequest::ArenaDtor(void* object) {
  GetAgentTierRequest* _this = reinterpret_cast< GetAgentTierRequest* >(object);
  (void)_this;
}
void GetAgentTierRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GetAgentTierRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAgentTierRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAgentTierRequest& GetAgentTierRequest::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::InitDefaultsGetAgentTierRequest();
  return *internal_default_instance();
}

GetAgentTierRequest* GetAgentTierRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<GetAgentTierRequest>(arena);
}

void GetAgentTierRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.GetAgentTierRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool GetAgentTierRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.GetAgentTierRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.GetAgentTierRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.GetAgentTierRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.GetAgentTierRequest)
  return false;
#undef DO_
}

void GetAgentTierRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.GetAgentTierRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.GetAgentTierRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.GetAgentTierRequest)
}

::google::protobuf::uint8* GetAgentTierRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.GetAgentTierRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.GetAgentTierRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.GetAgentTierRequest)
  return target;
}

size_t GetAgentTierRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.GetAgentTierRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAgentTierRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.GetAgentTierRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAgentTierRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAgentTierRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.GetAgentTierRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.GetAgentTierRequest)
    MergeFrom(*source);
  }
}

void GetAgentTierRequest::MergeFrom(const GetAgentTierRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.GetAgentTierRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void GetAgentTierRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.GetAgentTierRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAgentTierRequest::CopyFrom(const GetAgentTierRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.GetAgentTierRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAgentTierRequest::IsInitialized() const {
  return true;
}

void GetAgentTierRequest::Swap(GetAgentTierRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetAgentTierRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GetAgentTierRequest::UnsafeArenaSwap(GetAgentTierRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetAgentTierRequest::InternalSwap(GetAgentTierRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAgentTierRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateAgentTierRequest::InitAsDefaultInstance() {
  ::google::cloud::dialogflow::v2beta1::_UpdateAgentTierRequest_default_instance_._instance.get_mutable()->agent_tier_ = const_cast< ::google::cloud::dialogflow::v2beta1::AgentTier*>(
      ::google::cloud::dialogflow::v2beta1::AgentTier::internal_default_instance());
  ::google::cloud::dialogflow::v2beta1::_UpdateAgentTierRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
}
void UpdateAgentTierRequest::_slow_mutable_agent_tier() {
  agent_tier_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::dialogflow::v2beta1::AgentTier >(
      GetArenaNoVirtual());
}
void UpdateAgentTierRequest::unsafe_arena_set_allocated_agent_tier(
    ::google::cloud::dialogflow::v2beta1::AgentTier* agent_tier) {
  if (GetArenaNoVirtual() == NULL) {
    delete agent_tier_;
  }
  agent_tier_ = agent_tier;
  if (agent_tier) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest.agent_tier)
}
void UpdateAgentTierRequest::_slow_mutable_update_mask() {
  update_mask_ = ::google::protobuf::Arena::Create< ::google::protobuf::FieldMask >(
      GetArenaNoVirtual());
}
void UpdateAgentTierRequest::unsafe_arena_set_allocated_update_mask(
    ::google::protobuf::FieldMask* update_mask) {
  if (GetArenaNoVirtual() == NULL) {
    delete update_mask_;
  }
  update_mask_ = update_mask;
  if (update_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest.update_mask)
}
void UpdateAgentTierRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateAgentTierRequest::kNameFieldNumber;
const int UpdateAgentTierRequest::kAgentTierFieldNumber;
const int UpdateAgentTierRequest::kUpdateMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateAgentTierRequest::UpdateAgentTierRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::InitDefaultsUpdateAgentTierRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest)
}
UpdateAgentTierRequest::UpdateAgentTierRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::InitDefaultsUpdateAgentTierRequest();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest)
}
UpdateAgentTierRequest::UpdateAgentTierRequest(const UpdateAgentTierRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  if (from.has_agent_tier()) {
    agent_tier_ = new ::google::cloud::dialogflow::v2beta1::AgentTier(*from.agent_tier_);
  } else {
    agent_tier_ = NULL;
  }
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest)
}

void UpdateAgentTierRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&agent_tier_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_mask_) -
      reinterpret_cast<char*>(&agent_tier_)) + sizeof(update_mask_));
  _cached_size_ = 0;
}

UpdateAgentTierRequest::~UpdateAgentTierRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest)
  SharedDtor();
}

void UpdateAgentTierRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete agent_tier_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateAgentTierRequest::ArenaDtor(void* object) {
  UpdateAgentTierRequest* _this = reinterpret_cast< UpdateAgentTierRequest* >(object);
  (void)_this;
}
void UpdateAgentTierRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UpdateAgentTierRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateAgentTierRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateAgentTierRequest& UpdateAgentTierRequest::default_instance() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::InitDefaultsUpdateAgentTierRequest();
  return *internal_default_instance();
}

UpdateAgentTierRequest* UpdateAgentTierRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<UpdateAgentTierRequest>(arena);
}

void UpdateAgentTierRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && agent_tier_ != NULL) {
    delete agent_tier_;
  }
  agent_tier_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateAgentTierRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.AgentTier agent_tier = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_agent_tier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask update_mask = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest)
  return false;
#undef DO_
}

void UpdateAgentTierRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.cloud.dialogflow.v2beta1.AgentTier agent_tier = 2;
  if (this->has_agent_tier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->agent_tier_, output);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->update_mask_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest)
}

::google::protobuf::uint8* UpdateAgentTierRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.cloud.dialogflow.v2beta1.AgentTier agent_tier = 2;
  if (this->has_agent_tier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->agent_tier_, deterministic, target);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->update_mask_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest)
  return target;
}

size_t UpdateAgentTierRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.cloud.dialogflow.v2beta1.AgentTier agent_tier = 2;
  if (this->has_agent_tier()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->agent_tier_);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->update_mask_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateAgentTierRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateAgentTierRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateAgentTierRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest)
    MergeFrom(*source);
  }
}

void UpdateAgentTierRequest::MergeFrom(const UpdateAgentTierRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.has_agent_tier()) {
    mutable_agent_tier()->::google::cloud::dialogflow::v2beta1::AgentTier::MergeFrom(from.agent_tier());
  }
  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
}

void UpdateAgentTierRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateAgentTierRequest::CopyFrom(const UpdateAgentTierRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.UpdateAgentTierRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateAgentTierRequest::IsInitialized() const {
  return true;
}

void UpdateAgentTierRequest::Swap(UpdateAgentTierRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UpdateAgentTierRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UpdateAgentTierRequest::UnsafeArenaSwap(UpdateAgentTierRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UpdateAgentTierRequest::InternalSwap(UpdateAgentTierRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(agent_tier_, other->agent_tier_);
  swap(update_mask_, other->update_mask_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateAgentTierRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2ftier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)
