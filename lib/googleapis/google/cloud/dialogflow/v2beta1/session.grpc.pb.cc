// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/cloud/dialogflow/v2beta1/session.proto

#include "google/cloud/dialogflow/v2beta1/session.pb.h"
#include "google/cloud/dialogflow/v2beta1/session.grpc.pb.h"

#include <grpc++/impl/codegen/async_stream.h>
#include <grpc++/impl/codegen/async_unary_call.h>
#include <grpc++/impl/codegen/channel_interface.h>
#include <grpc++/impl/codegen/client_unary_call.h>
#include <grpc++/impl/codegen/method_handler_impl.h>
#include <grpc++/impl/codegen/rpc_service_method.h>
#include <grpc++/impl/codegen/service_type.h>
#include <grpc++/impl/codegen/sync_stream.h>
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {

static const char* Sessions_method_names[] = {
  "/google.cloud.dialogflow.v2beta1.Sessions/DetectIntent",
  "/google.cloud.dialogflow.v2beta1.Sessions/StreamingDetectIntent",
};

std::unique_ptr< Sessions::Stub> Sessions::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< Sessions::Stub> stub(new Sessions::Stub(channel));
  return stub;
}

Sessions::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_DetectIntent_(Sessions_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_StreamingDetectIntent_(Sessions_method_names[1], ::grpc::internal::RpcMethod::BIDI_STREAMING, channel)
  {}

::grpc::Status Sessions::Stub::DetectIntent(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DetectIntentRequest& request, ::google::cloud::dialogflow::v2beta1::DetectIntentResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DetectIntent_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::DetectIntentResponse>* Sessions::Stub::AsyncDetectIntentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DetectIntentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dialogflow::v2beta1::DetectIntentResponse>::Create(channel_.get(), cq, rpcmethod_DetectIntent_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::DetectIntentResponse>* Sessions::Stub::PrepareAsyncDetectIntentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DetectIntentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dialogflow::v2beta1::DetectIntentResponse>::Create(channel_.get(), cq, rpcmethod_DetectIntent_, context, request, false);
}

::grpc::ClientReaderWriter< ::google::cloud::dialogflow::v2beta1::StreamingDetectIntentRequest, ::google::cloud::dialogflow::v2beta1::StreamingDetectIntentResponse>* Sessions::Stub::StreamingDetectIntentRaw(::grpc::ClientContext* context) {
  return ::grpc::internal::ClientReaderWriterFactory< ::google::cloud::dialogflow::v2beta1::StreamingDetectIntentRequest, ::google::cloud::dialogflow::v2beta1::StreamingDetectIntentResponse>::Create(channel_.get(), rpcmethod_StreamingDetectIntent_, context);
}

::grpc::ClientAsyncReaderWriter< ::google::cloud::dialogflow::v2beta1::StreamingDetectIntentRequest, ::google::cloud::dialogflow::v2beta1::StreamingDetectIntentResponse>* Sessions::Stub::AsyncStreamingDetectIntentRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderWriterFactory< ::google::cloud::dialogflow::v2beta1::StreamingDetectIntentRequest, ::google::cloud::dialogflow::v2beta1::StreamingDetectIntentResponse>::Create(channel_.get(), cq, rpcmethod_StreamingDetectIntent_, context, true, tag);
}

::grpc::ClientAsyncReaderWriter< ::google::cloud::dialogflow::v2beta1::StreamingDetectIntentRequest, ::google::cloud::dialogflow::v2beta1::StreamingDetectIntentResponse>* Sessions::Stub::PrepareAsyncStreamingDetectIntentRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderWriterFactory< ::google::cloud::dialogflow::v2beta1::StreamingDetectIntentRequest, ::google::cloud::dialogflow::v2beta1::StreamingDetectIntentResponse>::Create(channel_.get(), cq, rpcmethod_StreamingDetectIntent_, context, false, nullptr);
}

Sessions::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Sessions_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Sessions::Service, ::google::cloud::dialogflow::v2beta1::DetectIntentRequest, ::google::cloud::dialogflow::v2beta1::DetectIntentResponse>(
          std::mem_fn(&Sessions::Service::DetectIntent), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Sessions_method_names[1],
      ::grpc::internal::RpcMethod::BIDI_STREAMING,
      new ::grpc::internal::BidiStreamingHandler< Sessions::Service, ::google::cloud::dialogflow::v2beta1::StreamingDetectIntentRequest, ::google::cloud::dialogflow::v2beta1::StreamingDetectIntentResponse>(
          std::mem_fn(&Sessions::Service::StreamingDetectIntent), this)));
}

Sessions::Service::~Service() {
}

::grpc::Status Sessions::Service::DetectIntent(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::DetectIntentRequest* request, ::google::cloud::dialogflow::v2beta1::DetectIntentResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Sessions::Service::StreamingDetectIntent(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::google::cloud::dialogflow::v2beta1::StreamingDetectIntentResponse, ::google::cloud::dialogflow::v2beta1::StreamingDetectIntentRequest>* stream) {
  (void) context;
  (void) stream;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace cloud
}  // namespace dialogflow
}  // namespace v2beta1

